import{_ as r,c as a,o as t,ag as o}from"./chunks/framework.BgId8OS5.js";const f=JSON.parse('{"title":"collections","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/node/collections.md","filePath":"backEnd/node/collections.md","lastUpdated":1732467483000}'),i={name:"backEnd/node/collections.md"};function l(n,e,s,c,h,d){return t(),a("div",null,e[0]||(e[0]=[o('<h1 id="collections" tabindex="-1">collections <a class="header-anchor" href="#collections" aria-label="Permalink to &quot;collections&quot;">​</a></h1><h2 id="library" tabindex="-1">Library <a class="header-anchor" href="#library" aria-label="Permalink to &quot;Library&quot;">​</a></h2><ul><li><a href="https://airbnb.io/lottie/#/" target="_blank" rel="noreferrer">Lottie</a> parses Adobe After Effects <strong>animations</strong> exported as <strong>JSON</strong> with Bodymovin and renders them natively on mobile and on the web!</li></ul><h2 id="framework" tabindex="-1">Framework <a class="header-anchor" href="#framework" aria-label="Permalink to &quot;Framework&quot;">​</a></h2><ul><li>express.js</li><li>nest.js</li><li><a href="https://fastify.dev/docs/latest/Guides/Getting-Started/" target="_blank" rel="noreferrer">fastify.js</a></li><li><a href="https://feathersjs.com/" target="_blank" rel="noreferrer">feathersjs</a></li><li><a href="https://docs.adonisjs.com/guides/preface/introduction" target="_blank" rel="noreferrer">adonisjs</a></li><li><a href="https://foalts.org/" target="_blank" rel="noreferrer">foalts</a></li><li><a href="https://hono.dev/" target="_blank" rel="noreferrer">Hono</a></li><li><a href="https://github.com/encoredev/encore" target="_blank" rel="noreferrer">Encore.ts</a></li></ul><p>看起来大一点的项目选<code>adonisjs</code>，小的选<code>Hono</code></p><h2 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-label="Permalink to &quot;Node&quot;">​</a></h2><ul><li><p><a href="https://github.com/t3-oss/create-t3-app" target="_blank" rel="noreferrer">t3</a> The best way to start a full-stack, typesafe Next.js app</p></li><li><p><a href="https://blitzjs.com/" target="_blank" rel="noreferrer">Blitz</a> Blitz picks up where Next.js leaves off, providing battle-tested libraries and conventions for shipping and scaling world wide applications.</p></li><li><p><a href="https://redwoodjs.com/" target="_blank" rel="noreferrer">redwoodjs</a> the full-stack JavaScript application framework. Batteries, backend, React, conventions, and opinions included.</p></li><li><p><a href="https://effect.website/docs/introduction" target="_blank" rel="noreferrer">Effect</a> Effect is a powerful TypeScript library designed to help developers easily create complex, synchronous, and asynchronous programs.</p></li><li><p><a href="https://trpc.io/" target="_blank" rel="noreferrer">tRPC</a> Move Fast and Break Nothing. End-to-end typesafe APIs made easy. tRPC 是一个基于 TypeScript 的远程过程调用框架，旨在简化客户端与服务端之间的通信过程，并提供高效的类型安全。它允许您使用类似本地函数调用的方式来调用远程函数，同时自动处理序列化和反序列化、错误处理和通信协议等底层细节。</p></li></ul><h4 id="trpc缺点" tabindex="-1">tRPC缺点： <a class="header-anchor" href="#trpc缺点" aria-label="Permalink to &quot;tRPC缺点：&quot;">​</a></h4><p>首先不如传统的 RESTFUL 来的直观，假设现在在服务端定义了一个服务，那么只能通过<code>@trpc/client</code> 创建客户端进行调用。虽然也能用 <code>http</code> 的形式，但调用的很不优雅。</p><p>RPC 框架通常是可以跨语言进行调用的，比如 <code>gRPC</code> 框架，然而tRPC 目前只能在 Typescript 项目中进行调用, 学习成本与项目成本偏高，tRPC 对整个全栈项目的技术要求比较高，并且限定于 typescript</p><h3 id="node日志" tabindex="-1">node日志 <a class="header-anchor" href="#node日志" aria-label="Permalink to &quot;node日志&quot;">​</a></h3><ul><li><a href="https://github.com/pinojs/pino" target="_blank" rel="noreferrer">pino</a><ul><li><a href="https://mp.weixin.qq.com/s/ZXyu4Bgr3ysl2OP0kG_fgQ" target="_blank" rel="noreferrer">极致日志记录：Pino 为你带来的性能与便利性</a></li></ul></li></ul><h3 id="orm" tabindex="-1">ORM <a class="header-anchor" href="#orm" aria-label="Permalink to &quot;ORM&quot;">​</a></h3><ul><li><a href="https://orm.drizzle.team/" target="_blank" rel="noreferrer">drizzle</a></li><li><a href="https://www.prisma.io/docs/orm/overview/introduction/what-is-prisma" target="_blank" rel="noreferrer">prisma</a></li></ul><h2 id="free-mock-api" tabindex="-1">Free mock api <a class="header-anchor" href="#free-mock-api" aria-label="Permalink to &quot;Free mock api&quot;">​</a></h2><ul><li><a href="https://dummyjson.com/" target="_blank" rel="noreferrer">DummyJSON</a> it can login and get token</li><li><a href="https://pokeapi.co/docs/v2" target="_blank" rel="noreferrer">pokeapi</a></li><li><a href="https://apipheny.io/free-api/#apis-without-key" target="_blank" rel="noreferrer">article-Free API – 90+ Public APIs For Testing No Key</a></li><li><a href="https://www.mocklib.com/" target="_blank" rel="noreferrer">MockLib</a></li></ul><h2 id="how-to-run-typescript" tabindex="-1">how to run typescript <a class="header-anchor" href="#how-to-run-typescript" aria-label="Permalink to &quot;how to run typescript&quot;">​</a></h2><ul><li><a href="https://github.com/privatenumber/tsx" target="_blank" rel="noreferrer">tsx</a></li><li>ts-node</li></ul><h2 id="keeping-noticing" tabindex="-1">Keeping noticing <a class="header-anchor" href="#keeping-noticing" aria-label="Permalink to &quot;Keeping noticing&quot;">​</a></h2><h3 id="signals" tabindex="-1">signals <a class="header-anchor" href="#signals" aria-label="Permalink to &quot;signals&quot;">​</a></h3><ul><li><a href="https://github.com/preactjs/signals" target="_blank" rel="noreferrer">https://github.com/preactjs/signals</a></li></ul><h3 id="bun" tabindex="-1">bun <a class="header-anchor" href="#bun" aria-label="Permalink to &quot;bun&quot;">​</a></h3><h3 id="serverless" tabindex="-1">serverless <a class="header-anchor" href="#serverless" aria-label="Permalink to &quot;serverless&quot;">​</a></h3><p>“<em>Serverless architectures are application designs that incorporate third-party “Backend as a Service” (BaaS) services, and/or that include custom code run in managed, ephemeral containers on a “Functions as a Service” (FaaS) platform.</em>”</p>',25)]))}const u=r(i,[["render",l]]);export{f as __pageData,u as default};
