import{_ as l,r as c,o as u,c as i,a as n,b as a,w as o,F as r,e as s,d as p}from"./app.a96f585b.js";var k="/assets/act_error.984afdf4.png",d="/assets/act_eslint_warning1.aa4a4074.png",b="/assets/act_error_1.d2980814.png",m="/assets/act_error_why_1.9bf399cb.png",g="/assets/act_add_success1.232cd381.png",h="/assets/query_summary.2869c5d0.png",f="/assets/testing-backgrpund.4c45dc41.png";const _={},y=n("hr",null,null,-1),v={class:"table-of-contents"},x=s("Guide"),w=s("Vs Jest"),B=s("\u5B89\u88C5"),T=s("Basic"),q=s("\u8BE6\u7EC6\u6559\u7A0B"),j=s("render a component"),E=s("act"),R=s("\u4EC0\u4E48\u65F6\u5019\u7528userEvent\u548CfireEvent"),A=s("\u6B63\u786E\u5730\u67E5\u627E\u5143\u7D20"),C=s("reference"),S=n("h2",{id:"guide",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#guide","aria-hidden":"true"},"#"),s(" Guide")],-1),I={href:"https://testing-library.com/docs/react-testing-library/intro/",target:"_blank",rel:"noopener noreferrer"},D=s("React Testing Library"),F=s(" \u5728"),O=n("code",null,"DOM Testing Library",-1),L=s("\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E00\u4E9BAPI\uFF0C\u4E3B\u8981\u7528\u4E8E\u6D4B\u8BD5React\u7EC4\u4EF6\u3002\u5982\u679C\u662F\u5176\u5B83\u7684\u6280\u672F\u6808\uFF0C\u53EF\u4EE5\u9009\u62E9\u5BF9\u5E94\u7684"),U={href:"https://testing-library.com/",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"Testing Library",-1),P=s(" \u5E93\u3002\u8BE5\u5E93\u5728\u4F7F\u7528\u8FC7\u7A0B\u5E76\u4E0D\u5173\u6CE8\u7EC4\u4EF6\u7684\u5185\u90E8\u5B9E\u73B0\uFF0C\u800C\u662F\u66F4\u5173\u6CE8\u6D4B\u8BD5\u3002\u8BE5\u5E93\u57FA\u4E8E"),M=n("code",null,"react-dom",-1),V=s("\u548C"),J=n("code",null,"react-dom/test-utils",-1),N=s("\uFF0C\u662F\u4EE5\u4E0A\u4E24\u8005\u7684\u8F7B\u91CF\u5B9E\u73B0\u3002"),W=n("h3",{id:"vs-jest",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vs-jest","aria-hidden":"true"},"#"),s(" Vs Jest")],-1),z=p("<code>RTL</code>\u5E76\u4E0D\u662F<code>Jest</code>\u7684\u66FF\u4EE3\u9009\u62E9\uFF0C\u4E24\u8005\u4E0D\u662F\u4E8C\u9009\u4E00\u7684\u5173\u7CFB\uFF0C<code>Jest</code>\u662F<code>Javascript</code>\u6700\u6D41\u884C\u7684\u6D4B\u8BD5\u6846\u67B6\uFF0C<code>Jest</code>\u5C31\u662F\u4E00\u4E2A<code>test runner</code>\uFF0C\u53EF\u4EE5\u547D\u4EE4\u884C\u5F0F\u7684\u8DD1\u6240\u6709\u7684\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u5E76\u4E14 \u63D0\u4F9B\u6D4B\u8BD5suites\u3001cases\u3001\u65AD\u8A00\u7684\u51FD\u6570\uFF0C\u8FD8\u6709<code>spies, mocks, stubs</code>\u7B49\u3002\u800C<code>RTL</code>\uFF0C\u53EA\u662Ftesting library\u4E2D\u4E3A<code>React</code>\u5B9A\u5236\u7684\u4E00\u4E2A\u5206\u652F,\u5176\u4ED6\u7684\u8FD8\u6709<code>Vue</code>\u3001<code>Angular</code>\u7B49\uFF0C\u6D4B\u8BD5\u5E93\u5176\u4ED6\u6BD4\u5982\u8FD8\u6709",22),Q={href:"https://github.com/enzymejs",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"Enzyme",-1),Y=s(" \u7B49\u3002"),Z=n("h3",{id:"\u5B89\u88C5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B89\u88C5","aria-hidden":"true"},"#"),s(" \u5B89\u88C5")],-1),K=s("\u540C"),X=n("code",null,"Jest",-1),$=s("\u4E00\u6837\uFF0C\u5982\u679C"),nn=n("code",null,"create-react-app",-1),sn=s("\u521B\u5EFA\u7684\uFF0C"),an=n("code",null,"RTL",-1),tn=s("\u5DF2\u5185\u7F6E\u597D\uFF0C\u4F46\u6BD4\u5982\u4E13\u95E8\u7528\u4E8E\u6D4B\u8BD5"),pn=n("code",null,"hooks",-1),en=s("\u7684"),on={href:"https://react-hooks-testing-library.com/",target:"_blank",rel:"noopener noreferrer"},cn=n("code",null,"@testing-library/react-hooks",-1),ln=s(" \u8FD8\u662F\u8981\u81EA\u5DF1\u6DFB\u52A0\u5B89\u88C5\u3002"),un=p(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">pnpm</span> i @testing-library/react @testing-library/user-event @testing-library/jest-dom -D
<span class="token comment"># \u57FA\u4E8Eeslint\u548Ctesting library\u7684\u6700\u4F73\u5B9E\u8DF5\u53BB\u63D0\u793A\uFF0C\u907F\u514D\u4E00\u4E9B\u5E38\u89C1\u7684\u9519\u8BEF</span>
<span class="token function">pnpm</span> i eslint-plugin-testing-library -D
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1),rn={href:"https://testing-library.com/docs/dom-testing-library/intro",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,"@testing-library/dom",-1),dn=s(': \u4E00\u4E2A\u8F7B\u91CF\u7EA7\u7684(DOM \u67E5\u8BE2\u3001\u4EA4\u4E92)\u6D4B\u8BD5\u89E3\u51B3\u65B9\u6848\uFF0C\u5B83\u4F7F\u7528\u4E86\u4E00\u79CD\u4E0E \u201D\u7528\u6237\u7684\u5728\u9875\u9762\u4E2D\u67E5\u627E\u5143\u7D20" \u7C7B\u4F3C\u7684DOM\u67E5\u8BE2\u65B9\u5F0F\uFF0C\u4EE5\u4FDD\u8BC1\u51C6\u786E\u6027;'),bn={href:"https://testing-library.com/docs/react-testing-library/intro",target:"_blank",rel:"noopener noreferrer"},mn=n("code",null,"@testing-library/react",-1),gn=s(" : \u5728 "),hn=n("code",null,"@testing-library/dom",-1),fn=s(" \u57FA\u7840\u4E0A\uFF0C\u5C06 "),_n=n("code",null,"React\u7EC4\u4EF6",-1),yn=s("\u6E32\u67D3\u4E3A "),vn=n("code",null,"DOM",-1),xn=s(" \u4FBF\u4E8E\u540E\u8FB9\u6D4B\u8BD5;"),wn={href:"https://testing-library.com/docs/user-event/intro/",target:"_blank",rel:"noopener noreferrer"},Bn=n("code",null,"@testing-library/user-event",-1),Tn=s(" : \u63D0\u4F9B\u4E86\u66F4\u52A0\u9AD8\u7EA7\u7684\u6D4F\u89C8\u5668\u4EA4\u4E92\u6A21\u62DF \u2013 \u5373\u4E8B\u4EF6;"),qn={href:"https://github.com/testing-library/jest-dom",target:"_blank",rel:"noopener noreferrer"},jn=n("code",null,"@testing-library/jest-dom",-1),En=s(" \uFF1A\u8FFD\u52A0\u4E00\u7CFB\u5217\u8F85\u52A9\u6D4B\u8BD5 DOM \u7684 "),Rn=n("code",null,"matchers",-1),An=s(" \u5339\u914D\u5668\uFF0C\u9700\u8981\u5728\u6BCF\u4E2A "),Cn=n("code",null,"react test",-1),Sn=s("\u6587\u4EF6\u7684\u9876\u90E8\u5F15\u7528\uFF0C\u5426\u5219\u7C7B\u4F3C "),In=n("code",null,"expect(dom).toBeInTheDocument()",-1),Dn=s(" \u8FD9\u6837\u7684\u65AD\u8A00\u5219\u6CA1\u6CD5\u7528\uFF0C\u53EF\u4EE5\u5728"),Fn=n("code",null,"setup",-1),On=s("\u4E2D\u7EDF\u4E00\u5BFC\u5165\u3002"),Ln={href:"https://react-hooks-testing-library.com/",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"@testing-library/react-hooks",-1),Hn=s(": \u4E13\u95E8\u7528\u4E8E\u6D4B\u8BD5hooks\u7684\u5E93\u3002\u5728"),Pn=n("code",null," @testing-library/react@13.1.0",-1),Mn=s(" \u4EE5\u4E0A\u7684\u7248\u672C\u5DF2\u7ECF\u628A "),Vn=n("code",null,"renderHook",-1),Jn=s(" \u5185\u7F6E\u5230\u91CC\u9762\u4E86\uFF0C\u4F46\u8FD9\u4E2A\u7248\u672C\u9700\u8981\u548C "),Nn=n("code",null,"react@18",-1),Wn=s(" \u4E00\u8D77\u4F7F\u7528\u3002"),zn={href:"https://github.com/testing-library/eslint-plugin-testing-library",target:"_blank",rel:"noopener noreferrer"},Qn=n("code",null,"eslint-plugin-testing-library",-1),Gn=s(" : \u57FA\u4E8E"),Yn=n("code",null,"eslint",-1),Zn=s("\u548C"),Kn=n("code",null,"testing library",-1),Xn=s("\u7684\u6700\u4F73\u5B9E\u8DF5\u53BB\u505A\u63D0\u793A\uFF0C\u907F\u514D\u4E00\u4E9B\u5E38\u89C1\u7684\u9519\u8BEF\u3002"),$n=p('<h3 id="basic" tabindex="-1"><a class="header-anchor" href="#basic" aria-hidden="true">#</a> Basic</h3><h4 id="\u57FA\u672C\u80FD\u529B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u80FD\u529B" aria-hidden="true">#</a> \u57FA\u672C\u80FD\u529B</h4><ul><li>\u7EC4\u4EF6\u6E32\u67D3(render)</li><li>\u5143\u7D20\u67E5\u627E(get/query/find)</li><li>\u4E8B\u4EF6\u89E6\u53D1(fireEvent/userEvent)</li></ul><h4 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h4>',4),ns=s("\u5728\u7F16\u5199\u5355\u5143\u6D4B\u8BD5\u8FC7\u7A0B\u4E2D\uFF0C\u53EF\u4EE5\u6309\u7167"),ss={href:"https://blog.devgenius.io/the-three-as-of-unit-testing-3b8b4bf0d087",target:"_blank",rel:"noopener noreferrer"},as=s("AAA\u6A21\u5F0F"),ts=s(" \u5B9E\u73B0\u3002\u5373\uFF1A"),ps=s("Arrange \u7F16\u6392\uFF0C\u4F7F\u7528"),es={href:"https://testing-library.com/docs/react-testing-library/api#render",target:"_blank",rel:"noopener noreferrer"},os=s("render"),cs=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">render</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),ls=s("Act \u6267\u884C\uFF0C\u4F7F\u7528"),us={href:"https://testing-library.com/docs/dom-testing-library/api-events/#fireevent",target:"_blank",rel:"noopener noreferrer"},is=s("fireEvent"),rs=s(" \u6216\u8005 "),ks={href:"https://testing-library.com/docs/ecosystem-user-event/",target:"_blank",rel:"noopener noreferrer"},ds=s("useEvent"),bs=s(" \u53BB\u89E6\u53D1\u7528\u6237\u884C\u4E3A\u3002"),ms=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fireEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Assert \u65AD\u8A00\uFF0C\u5BF9\u671F\u671B\u7684\u7ED3\u679C\u4E88\u4EE5\u5224\u65AD\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">expect</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>example:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">//Search.tsx</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> Search<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>
  React<span class="token punctuation">.</span>PropsWithChildren<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    value<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
          <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>test file</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">//Search.test.tsx</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token comment">// \u5F15\u5165@testing-library/react\u63D0\u4F9B\u7684\u65B9\u6CD5</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> fireEvent<span class="token punctuation">,</span> screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Search <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./Search&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Search&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls the onChange callback handler&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onChange <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// Arrange \u7F16\u6392</span>
    <span class="token function">render</span><span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span></span>
        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search:
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Search</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
    <span class="token comment">// Act \u6267\u884C</span>
    fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      target<span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// Assert \u65AD\u8A00</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="\u5E38\u7528api" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528api" aria-hidden="true">#</a> \u5E38\u7528API</h4>`,8),gs={href:"https://testing-library.com/docs/react-testing-library/api/#render",target:"_blank",rel:"noopener noreferrer"},hs=n("code",null,"render",-1),fs=p(`<p>render\u7684\u53C2\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">render</span><span class="token punctuation">(</span>
    ui<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      container<span class="token punctuation">,</span> <span class="token comment">// ui \u6E32\u67D3\u7684\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u662F\u521B\u5EFA\u4E2Adiv\u5E76append\u5230document.body\u4E0A</span>
      baseElement<span class="token punctuation">,</span>
      hydrate<span class="token punctuation">,</span><span class="token punctuation">,</span>
      legacyRoot
      wrapper<span class="token punctuation">,</span> <span class="token comment">// \u5E38\u7528\u4E8E\u6CE8\u5165\u7C7B\u4F3CReact-Router\u3001Redux\u3001\u6216\u8005\u81EA\u5B9A\u4E49\u7684Provider</span>
      queries <span class="token comment">//\u7528\u4E8E\u81EA\u5B9A\u4E49\u9009\u62E9\u5668</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>render\u7684\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>queries<span class="token punctuation">,</span> <span class="token comment">// \u9009\u62E9\u5668\uFF0C\u4F8B\u5982(get/query/find)By(Text/Label/...)</span>
    <span class="token literal-property property">container</span><span class="token operator">:</span> HTMLDivElement<span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u81EA\u52A8\u521B\u5EFA\u4E00\u4E2Adiv,\u5E76\u63D2\u5165\u5230body\u4E2D</span>
    <span class="token literal-property property">baseElement</span><span class="token operator">:</span> HTMLBodyElement<span class="token punctuation">,</span> <span class="token comment">// \u76F8\u5F53\u4E8Edocument.body</span>
    <span class="token literal-property property">debug</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">// \u6253\u5370\u5F53\u524Ddocument.body</span>
    <span class="token literal-property property">rerender</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">//\u91CD\u65B0\u6E32\u67D3\u7EC4\u4EF6</span>
    <span class="token literal-property property">unmount</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token comment">//\u7EC4\u4EF6\u5378\u8F7D\uFF0C\u6B64\u65F6container.innerHTML === &#39;&#39;</span>
    <span class="token literal-property property">asFragment</span><span class="token operator">:</span>Function <span class="token comment">//\u8BB0\u5F55\u67D0\u4E2A\u65F6\u523B\u7684dom</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>render\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5217\u51FA\u7684\u662F\u5E38\u7528\u7684</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> queryByText<span class="token punctuation">,</span> container<span class="token punctuation">,</span> baseElement<span class="token punctuation">,</span> debug<span class="token punctuation">,</span> rerender<span class="token punctuation">,</span> unmount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span>conponent<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><code>cleanup</code></li></ul><p>\u76F8\u5F53\u4E8E\u7ED9\u7EC4\u4EF6\u7F6E\u6210<code>unmount</code>,\u4E00\u822C\u5728<code>afterEach()</code>\u4E2D\u6267\u884C\uFF0C\u5982\u679C\u4F7F\u7528\u7684<code>Jest</code>,\u4E0D\u9700\u8981\u5728<code>afterEach</code>\u4E2D\u624B\u52A8\u8BBE\u7F6E\uFF0C\u6846\u67B6\u5DF2\u9ED8\u8BA4\u6BCF\u6B21test\u7ED3\u675F\u540E\u6267\u884C<code>cleanup</code>\u3002</p>`,8),_s={href:"https://testing-library.com/docs/queries/about/",target:"_blank",rel:"noopener noreferrer"},ys=n("code",null,"Queries",-1),vs=p(`<table><thead><tr><th>search type<br>\uFF08\u5355\u4E2A\u5143\u7D20\uFF09</th><th>search type<br>\uFF08\u591A\u4E2A\u5143\u7D20\uFF09</th><th>function<br>\uFF08\u67E5\u8BE2\u5355\u4E2A\u5143\u7D20\uFF09</th><th>\u9002\u7528\u573A\u666F</th></tr></thead><tbody><tr><td>getBy</td><td>getAllBy</td><td>getByText<br>getByRole<br>getByLabelText<br>getByPlaceholderText<br>getByAltText<br>getByDisplayValue</td><td>\u7531\u4E8E\u53EA\u8FD4\u56DE\u5143\u7D20\u6216error\uFF0C\u9002\u7528\u4E8E\u786E\u5B9A\u8BE5\u5143\u7D20\u5B58\u5728\u7684\u60C5\u51B5</td></tr><tr><td>queryBy</td><td>queryAllBy</td><td>queryByText<br>queryByRole<br>queryByLabelText<br>queryByPlaceholderText<br>queryByAltText<br>queryByDisplayValue</td><td>\u7528\u4E8E\u5143\u7D20\u53EF\u80FD\u4E0D\u5B58\u5728</td></tr><tr><td>findBy</td><td>findAllBy</td><td>findByText<br>findByRole<br>findByLabelText<br>findByPlaceholderText<br>findByAltText<br>findByDisplayValue</td><td>\u7528\u4E8E\u5F02\u6B65\u5143\u7D20</td></tr></tbody></table><p>examples:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>LabelText: getByLabelText: &lt;label for=&quot;search&quot; /&gt;
PlaceholderText: getByPlaceholderText: &lt;input placeholder=&quot;Search&quot; /&gt;
AltText: getByAltText: &lt;img alt=&quot;profile&quot; /&gt;
DisplayValue: getByDisplayValue: &lt;input value=&quot;JavaScript&quot; /&gt;
TestId: getByTestId: &lt;div data-testid=&#39;search&#39;&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol><li><code>getBy*</code>: \u53EA\u7528\u4E8E\u786E\u5B9A\u8BE5\u5143\u7D20\u5B58\u5728\u7684\u60C5\u51B5\u3002</li><li><code> query*</code>: \u53EA\u7528\u4E8E\u65AD\u8A00\u5F53\u524D\u5143\u7D20\u4E0D\u80FD\u88AB\u627E\u5230(\u53EF\u4EE5\u5728\u627E\u4E0D\u5230\u5143\u7D20\u7684\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF08\u8FD4\u56DE null\uFF09\u3002\u552F\u4E00\u7684\u597D\u5904\u662F\u53EF\u4EE5\u7528\u6765\u5224\u65AD\u8FD9\u4E2A\u5143\u7D20\u662F\u5426\u6CA1\u6709\u88AB\u6E32\u67D3\u5230\u9875\u9762\u4E0A\uFF09\u3002 \u56E0\u4E3A\u7C7B\u4F3C <code>get*</code> \u548C <code>find*</code> \u76F8\u5173\u7684 API \u5728\u627E\u4E0D\u5230\u5143\u7D20\u65F6\u90FD\u4F1A\u81EA\u52A8\u629B\u51FA\u5F02\u5E38 \u2014\u2014 \u8FD9\u6837\u4F60\u5C31\u53EF\u4EE5\u770B\u5230\u6E32\u67D3\u7684\u5185\u5BB9\u4EE5\u53CA\u4E3A\u4EC0\u4E48\u627E\u4E0D\u5230\u5143\u7D20\u7684\u539F\u56E0\u3002\u7136\u800C\uFF0C<code>query*</code> \u53EA\u4F1A\u8FD4\u56DE <code>null</code>\uFF0C</li><li><code>findBy*</code>: <code>findBy</code>\u4E3B\u8981\u662F\u67E5\u627E\u6700\u7EC8\u4F1A\u51FA\u73B0\u5728<code>dom</code>\u4E2D\u7684\u5F02\u6B65\u5143\u7D20\uFF0C\u5982\u679C\u80FD\u786E\u5B9A\u4E00\u4E2A\u5143\u7D20\u4E0D\u4F1A\u51FA\u73B0\u5728dom\u91CC\uFF0C\u5219\u4F7F\u7528<code>queryBy</code>\uFF0C\u5426\u5219\u4F7F\u7528<code>getBy</code>\u3002</li></ol><ul><li><code>fireEvent</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fireEvent</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> event<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,6),xs={href:"https://testing-library.com/docs/dom-testing-library/api-events",target:"_blank",rel:"noopener noreferrer"},ws=s("events API"),Bs={href:"https://testing-library.com/docs/react-testing-library/api/#act",target:"_blank",rel:"noopener noreferrer"},Ts=n("code",null,"act",-1),qs=n("p",null,[n("strong",null,"\u540E\u9762\u4F1A\u8BE6\u7EC6\u8BB2\u89E3"),s("\u3002")],-1),js=s("\u5BF9react-dom/test-utils\u4E2D\u7684"),Es={href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},Rs=s("act"),As=s(" \u51FD\u6570\u8FDB\u884C\u4E86\u4E00\u5C42\u5305\u88C5\u3002act\u7684\u4F5C\u7528\u662F\u5728\u4F60\u8FDB\u884C\u65AD\u8A00\u4E4B\u524D\uFF0C\u4FDD\u8BC1\u6240\u6709\u7531\u7EC4\u4EF6\u6E32\u67D3\u3001\u7528\u6237\u4EA4\u4E92\u4EE5\u53CA\u6570\u636E\u83B7\u53D6\u4EA7\u751F\u7684"),Cs=n("strong",null,"\u66F4\u65B0",-1),Ss=s("\u5168\u90E8\u5728dom\u5B9E\u73B0\u3002"),Is=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// render components</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// fireEvent</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// make assertions</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><code>waitFor</code></li></ul><p>\u7528\u4E8E\u5F02\u6B65</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">waitFor</span><span class="token punctuation">(</span>Promise<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>waitFor </code>\u7684\u76EE\u7684\u662F\u53EF\u4EE5\u8BA9\u4F60\u7B49\u4E00\u4E9B\u6307\u5B9A\u7684\u4E8B\u60C5\u53D1\u751F\u3002\u5728 waitFor \u91CC\u7B49\u5F85\u6307\u5B9A\u7684\u65AD\u8A00\uFF0C\u4E0D\u8981\u4F20\u7A7A <code>callback</code>\uFF0C\u5982\u679C\u4F20\u4E86\u7A7A\u7684 callback\uFF0C\u53EF\u80FD\u5B83\u5728\u4ECA\u5929\u8FD8\u80FD Work\uFF0C\u56E0\u4E3A\u4F60\u53EA\u662F\u60F3\u5728 <code>Event Loop</code> \u7B49\u4E00\u4E2A <code>Tick</code> \u5C31\u597D\u4E86\u3002\u4F46\u8FD9\u6837\u4F60\u4E5F\u4F1A\u7559\u4E0B\u4E00\u4E2A\u8106\u5F31\u7684\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u4E00\u65E6\u6539\u4E86\u67D0\u4E9B\u5F02\u6B65\u903B\u8F91\u5B83\u5F88\u53EF\u80FD\u5C31\u5D29\u4E86\u3002</p><p><code>waitFor</code> \u9002\u7528\u7684\u60C5\u51B5\u662F\uFF1A\u5728\u6267\u884C\u7684\u64CD\u4F5C\u548C\u65AD\u8A00\u4E4B\u95F4\u5B58\u5728\u4E0D\u786E\u5B9A\u7684\u65F6\u95F4\u91CF\u3002\u56E0\u6B64\uFF0C<code>callback</code> \u53EF\u5728\u4E0D\u786E\u5B9A\u7684\u65F6\u95F4\u548C\u9891\u7387\uFF08\u5728\u95F4\u9694\u4EE5\u53CA DOM \u53D8\u5316\u65F6\u8C03\u7528\uFF09\u88AB\u8C03\u7528\uFF08\u6216\u8005\u68C0\u67E5\u9519\u8BEF\uFF09\u3002\u6240\u4EE5\u8FD9\u4E5F\u610F\u5473\u7740\u4F60\u7684\u526F\u4F5C\u7528\u53EF\u80FD\u4F1A\u88AB\u591A\u6B21\u8C03\u7528\uFF01</p><p>\u540C\u65F6\uFF0C\u8FD9\u4E5F\u610F\u5473\u7740\u4F60\u4E0D\u80FD\u5728 waitFor \u91CC\u9762\u4F7F\u7528\u5FEB\u7167\u65AD\u8A00\uFF08SnapShot Assertion\uFF09\u3002\u5982\u679C\u4F60\u60F3\u8981\u7528\u5FEB\u7167\u65AD\u8A00\uFF0C\u9996\u5148\u8981\u7B49\u5F85\u67D0\u4E9B\u65AD\u8A00\u8D70\u5B8C\u4E86\uFF0C\u7136\u540E\u518D\u62CD\u5FEB\u7167\u3002</p><p>\u5EFA\u8BAE\uFF1A\u628A\u526F\u4F5C\u7528\u653E\u5728 <code>waitFor</code> \u56DE\u8C03\u7684\u5916\u9762\uFF0C\u56DE\u8C03\u91CC\u53EA\u80FD\u6709\u65AD\u8A00\u3002</p><ul><li><code>screen</code></li></ul><p><code>screen</code>\u7684\u65B9\u6CD5\u7EE7\u627F\u81EAqueries, queries\u6709\u7684\u80FD\u529B\u90FD\u6709\uFF0C\u6B64\u5916\u8FD8\u589E\u52A0\u4E86<code>debug()</code>\u7684\u80FD\u529B.</p><h4 id="\u8865\u5145" tabindex="-1"><a class="header-anchor" href="#\u8865\u5145" aria-hidden="true">#</a> \u8865\u5145</h4>`,11),Ds=s("\u5173\u4E8E\u66F4\u591A\u81EA\u5B9A\u4E49\u7684\u4E1C\u897F\uFF0C\u4F8B\u5982render\u3001\u9009\u62E9\u5668\u4EE5\u53CA\u4E0EJest\u6709\u7684\u914D\u7F6E\uFF0C\u67E5\u9605"),Fs={href:"https://testing-library.com/docs/react-testing-library/setup/",target:"_blank",rel:"noopener noreferrer"},Os=s("\u5B98\u65B9\u6587\u6863"),Ls=s(" \u5427\uFF0C\u5199\u5F97\u5F88\u6E05\u695A."),Us=n("li",null,[n("p",null,[s("\u5BF9\u4E8Edom\u7684\u4E00\u4E9B\u65AD\u8A00\uFF0C\u53EF\u4EE5\u6DFB\u52A0"),n("code",null,"testing-library"),s("\u5E93\u63D0\u4F9B\u7684"),n("code",null,"@testing-library/jest-dom"),s("\u6765\u66F4\u597D\u5F97\u5BF9dom\u8FDB\u884C\u65AD\u8A00\u3002")])],-1),Hs=p(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// In your own jest-setup.js (or any other name)
import &#39;@testing-library/jest-dom&#39;

// In jest.config.js add (if you haven&#39;t already)
setupFilesAfterEnv: [&#39;&lt;rootDir&gt;/jest-setup.js&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5339\u914D\u5668\u6982\u89C8\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>//Custom matchers
toBeDisabled
toBeEnabled
toBeEmptyDOMElement
toBeInTheDocument
toBeInvalid
toBeRequired
toBeValid
toBeVisible
toContainElement
toContainHTML
toHaveAccessibleDescription
toHaveAccessibleName
toHaveAttribute
toHaveClass
toHaveFocus
toHaveFormValues
toHaveStyle
toHaveTextContent
toHaveValue
toHaveDisplayValue
toBeChecked
toBePartiallyChecked
toHaveErrorMessage
//Deprecated matchers
toBeEmpty
toBeInTheDOM
toHaveDescription
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,3),Ps=s("\u5177\u4F53\u7528\u6CD5\uFF0C\u53EF\u4EE5"),Ms={href:"https://github.com/testing-library/jest-dom",target:"_blank",rel:"noopener noreferrer"},Vs=s("\u67E5\u9605\u6587\u6863"),Js=p(`<h2 id="\u8BE6\u7EC6\u6559\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8BE6\u7EC6\u6559\u7A0B" aria-hidden="true">#</a> \u8BE6\u7EC6\u6559\u7A0B</h2><h3 id="render-a-component" tabindex="-1"><a class="header-anchor" href="#render-a-component" aria-hidden="true">#</a> render a component</h3><p>\u4EE5\u4E00\u4E2A\u6700\u7B80\u5355\u4F8B\u5B50\u7684\u5F00\u59CB src/App.tsx</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token string">&#39;Hello React&#39;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>src/App.test.tsx</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>

<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;renders App component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>
    screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      Hello React
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7A0D\u5FAE\u590D\u6742\u4E00\u70B9\u7684\u641C\u7D22input\uFF0C\u4F7F\u7528\u4E86<code>useState, event handler, props</code>\uFF0C\u662F\u4E00\u4E2A\u53D7\u63A7\u7EC4\u4EF6 (controlled component):</p><p>// todo</p>`,9),Ns={id:"act",tabindex:"-1"},Ws=n("a",{class:"header-anchor",href:"#act","aria-hidden":"true"},"#",-1),zs=s(),Qs={href:"https://reactjs.org/docs/testing-recipes.html#act",target:"_blank",rel:"noopener noreferrer"},Gs=s("act"),Ys=p("\u5F53\u5199UI\u6D4B\u8BD5\u65F6\uFF0C\u50CF<code>react dom render</code>, <code>user events</code>, or <code>data fetching - promise</code>\u7684\u4EFB\u52A1\u90FD\u4F1A\u88AB\u770B\u4F5C\u7528\u6237\u4E0EView\u7684\u4EA4\u4E92\u3002 <code>react-dom/test-utils</code>\u63D0\u4F9B<code>act</code>\u65B9\u6CD5\uFF0C\u786E\u4FDD\u6240\u6709\u8FD9\u4E9B\u52A8\u4F5C\u5728\u65AD\u8A00\u524D\uFF0C\u90FD\u66F4\u65B0\u5E76\u4E14\u4F5C\u7528\u5230dom\u4E0A\u3002 <code>act()</code>\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5E76\u5E94\u7528\uFF08apply\uFF09\u5230<code>Dom</code>\uFF08jsdom\uFF09\u4E0A\uFF0C\u5F53<code>act()</code>\u51FD\u6570\u88AB\u6267\u884C\uFF0C\u53EF\u4EE5\u4F7F\u7528\u65AD\u8A00\uFF0C\u786E\u4FDD\u6D4B\u8BD5\u8FD0\u884C\u66F4\u8D34\u8FD1\u7528\u6237\u7684\u771F\u5B9E\u4F53\u9A8C\u3002\u6240\u4EE5React\u6D4B\u8BD5\u5E0C\u671B\u6240\u6709\u662F\u7531\u72B6\u6001\u53D8\u5316\u5BFC\u81F4\u7684\u66F4\u65B0\u90FD\u88AB",17),Zs={href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},Ks=s("act\u5305\u88F9\u4F4F"),Xs=s(" \uFF08\u5982\u679C\u662F\u7528\u539F\u59CB\u7684react\u6D4B\u8BD5\u65B9\u6CD5\u7684\u8BDD\uFF09\u3002"),$s=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> act<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom/test-utils&#39;</span>

<span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// render components</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// make assertions</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7136\u800C\u4ECE<code>react-dom/test-utils</code>\u5BFC\u5165\u5E76\u4F7F\u7528\u662F\u6BD4\u8F83\u5197\u4F59\u7684\uFF08\u56E0\u4E3A\u4E00\u822C\u4E0D\u4F1A\u4ECE\u5176\u5012\u5165\u65B9\u6CD5\u4E86\uFF09\uFF0C\u53EF\u4EE5\u4ECE<code>testing-library/react</code>\u5BFC\u5165\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> act <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;Testing&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* Codes you want to apply to the DOM */</span>
    <span class="token comment">// eg:</span>
    ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Counter <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* assume that the code is applied to the DOM */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="wrap-by-act" tabindex="-1"><a class="header-anchor" href="#wrap-by-act" aria-hidden="true">#</a> Wrap By act</h4><p><code>RTL</code>\u4E2D\u7684<code>render() </code>, <code>userEvent()</code> , <code>fireEvent()</code>\u90FD\u5DF2\u7ECF\u88AB<code>act</code>\u5305\u88F9\u4E86\u3002 \u4E5F\u5C31\u610F\u5473\u8FD9\u5F53\u4F60\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5\u65F6\uFF0C\u7EC4\u4EF6\u76F8\u5173\u7684state\u90FD\u4F1A\u66F4\u65B0\uFF0C\u989D\u5916\u6DFB\u52A0\u7684\u540C\u6B65<code>act</code>\u4E0D\u4F1A\u6539\u53D8\u4EFB\u4F55\u4E1C\u897F\u3002 (It means that every time you use one of these utilities, all component\u2019s relevant state updates are flushed. An additional synchronous act() is not going to change anything.)</p>`,5),na=n("code",null,"testing-library/react",-1),sa=s(" \u8986\u76D6\u4E86"),aa=n("code",null,"eventWrapper()",-1),ta=s("\uFF0C\u6240\u4EE5\u4E8B\u4EF6\u51FD\u6570\u4E0D\u7528\u518D\u4F7F\u7528act\u3002\u53EF\u89C1"),pa={href:"https://github.com/testing-library/react-testing-library/blob/main/src/pure.js#L31",target:"_blank",rel:"noopener noreferrer"},ea=s("code source"),oa=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> configure <span class="token keyword">as</span> configureDTL <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/dom&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> act <span class="token keyword">from</span> <span class="token string">&#39;./act-compat&#39;</span><span class="token punctuation">;</span><span class="token comment">// overried</span>
<span class="token function">configureDTL</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">eventWrapper</span><span class="token operator">:</span> <span class="token parameter">cb</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// like userEvent.click()</span>
    <span class="token keyword">let</span> result<span class="token punctuation">;</span>
    <span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u56E0\u6B64\u5C31\u4E0D\u7528\u518D\u7528act\u53BB\u5305\u88F9userEvent\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u274C</span>
<span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    userEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Component&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u2705</span>
userEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Component&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5F53\u7136\uFF0CRTL\u7684<code>render</code>\u4E5Fwrap\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">ui<span class="token punctuation">,</span> <span class="token punctuation">{</span> hydrate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hydrate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ReactDOM<span class="token punctuation">.</span><span class="token function">hydrate</span><span class="token punctuation">(</span><span class="token function">wrapUiIfNeeded</span><span class="token punctuation">(</span>ui<span class="token punctuation">)</span><span class="token punctuation">,</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token function">wrapUiIfNeeded</span><span class="token punctuation">(</span>ui<span class="token punctuation">)</span><span class="token punctuation">,</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u7B80\u5355\u7684\u5217\u5B50\u6BD4\u5982\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// ActOne.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">ActOne</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>title<span class="token punctuation">,</span> setTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked&#39;</span><span class="token punctuation">)</span> <span class="token comment">// act() in RTL render() makes this update happen</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click me</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ActOne

<span class="token comment">// ActOne.test.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> waitFor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">import</span> userEvent <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/user-event&#39;</span>
<span class="token keyword">import</span> ActOne <span class="token keyword">from</span> <span class="token string">&#39;./ActOne&#39;</span>

<span class="token comment">// fail</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title when clicked&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ActOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span> <span class="token comment">// this is wrapped in act()</span>

    userEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// success</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title when clicked with findByText&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ActOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span> <span class="token comment">// this is wrapped in act()</span>

  userEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// success</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title when clicked with waitfor&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ActOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span> <span class="token comment">// this is wrapped in act()</span>

  userEvent<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>\u518D\u5982\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">UseAsyncInEffect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>title<span class="token punctuation">,</span> setTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>
        <span class="token string">&#39;https://jsonplaceholder.typicode.com/posts/1&#39;</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token comment">// this happens after the test is done</span>
    <span class="token punctuation">}</span>

    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> UseAsyncInEffect
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>test:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> act<span class="token punctuation">,</span> waitFor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">import</span> UseAsyncInEffect <span class="token keyword">from</span> <span class="token string">&#39;./UseAsyncInEffect&#39;</span>

global<span class="token punctuation">.</span>fetch <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token function-variable function">json</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> test<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> jest<span class="token punctuation">.</span>Mock

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;test use async comp&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// fail  \u274C</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;fetch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">json</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Fetched&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UseAsyncInEffect</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>

    <span class="token comment">// this happens before the state update is scheduled</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Fetched&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// success \u2705</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title with findBy&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;fetch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">json</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Fetched&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UseAsyncInEffect</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>

    <span class="token comment">// this happens before the state update is scheduled</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token string">&#39;Fetched&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// success \u2705</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title with waitFor&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;fetch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">json</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Fetched&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UseAsyncInEffect</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>

    <span class="token comment">// eslint: Prefer \`findByText\` query over using \`waitFor\` + \`getByText\`(testing-library/prefer-find-by)</span>
    <span class="token keyword">await</span> <span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Fetched&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// pass but not good</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;renders title 3&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;fetch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">json</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Fetched&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
    <span class="token comment">// eslint error</span>
    <span class="token keyword">await</span> <span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UseAsyncInEffect</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// this happens before the state update is scheduled</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Fetched&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>\u6D4B\u8BD5\u4F1A\u5931\u8D25\uFF0C\u5E76\u4E14\u7531\u4EE5\u4E0B<code>warning</code>\uFF0C\u5177\u4F53\u539F\u56E0\u53EF\u89C1\u540E\u9762\u7684\u89E3\u6790\u90E8\u5206\uFF0C\u7B80\u800C\u8A00\u4E4B\u5C31\u662F\u7531\u4E8E\u8DD1\u6D4B\u8BD5\u65F6\u90FD\u662F\u540C\u6B65\u7684\uFF0C\u800CReact\u7684\u66F4\u65B0\u5374\u662F\u7531\u5F02\u6B65\u66F4\u65B0\u961F\u5217\u5B8C\u6210\u7684\u3002\u6240\u4EE5<code>expect(screen.getByText(&#39;Fetched&#39;)).toBeInTheDocument()</code> \u8FD9\u884C\u5176\u5B9E\u662F\u5728\u72B6\u6001\u66F4\u65B0\u4E4B\u524D\u8FD0\u884C\u7684\u3002(\u5C3D\u7BA1render\u88ABact\u5305\u88F9\u4E86\uFF0C\u4F46\u662F<code>UseAsyncInEffect</code>\u4E2D\u7684<code>setState</code>\u662F\u5728<code>promise</code>\u4E2D\uFF0Crender\u4E2D<code>act</code>\u4E5F\u53EA\u80FD\u786E\u4FDD\u662F\u540C\u6B65\u4EE3\u7801\u5F0F\u5199\u6CD5\u7684\u72B6\u6001\u66F4\u65B0)\u3002 <img src="`+k+`" alt=""></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;renders title&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&quot;fetch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">json</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;Fetched&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u4E0D\u8981\u8FD9\u6837\u5199</span>
  <span class="token keyword">await</span> <span class="token function">act</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UseAsyncInEffect</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Fetched&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD9\u6837\u867D\u7136\u4F1A\u901A\u8FC7\u6D4B\u8BD5\u5E76\u4E14\u6D88\u9664\u8B66\u544A\uFF0C\u4F46\u5374\u75312\u4E2A\u95EE\u9898</p><ol><li>\u8FD9\u79CD\u53EA\u4F1A\u5728\u72B6\u6001\u66F4\u65B0\u662F\u53D1\u751F\u5728\u4E0B\u4E00\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u624D\u4F1A\u594F\u6548\uFF1B</li><li><code>act</code>\u5565\u4E5F\u6CA1\u5E72\uFF0C\u53EA\u662F\u628A\u8B66\u62A5\u9690\u85CF\u7F62\u4E86\u3002</li></ol><p>\u6BD4\u5982\u5728<code>fetchData</code>\u6DFB\u52A0\u518D\u4E00\u4E2A<code>promise</code>\uFF0C\u4E0A\u9762\u7684\u6D4B\u8BD5\u5C31\u4F1A<strong>\u5931\u8D25</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>
        <span class="token string">&#39;https://jsonplaceholder.typicode.com/posts/1&#39;</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

      <span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token comment">// this happens after the test is done</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,17),ca=s("\u6240\u4EE5\u4F7F\u7528"),la={href:"https://github.com/testing-library/eslint-plugin-testing-library",target:"_blank",rel:"noopener noreferrer"},ua=s("eslint-plugin-testing-library"),ia=s(" \u53BB\u907F\u514D\u6CA1\u6709\u5FC5\u8981\u7684act\u5305\u88F9\u548C\u9519\u8BEF\u7528\u6CD5\u662F\u6709\u5FC5\u8981\u7684\u3002"),ra=n("p",null,[n("img",{src:d,alt:""})],-1),ka=n("h5",{id:"\u5982\u4F55\u89E3\u51B3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5982\u4F55\u89E3\u51B3","aria-hidden":"true"},"#"),s(" \u5982\u4F55\u89E3\u51B3")],-1),da=s("\u53EF\u4EE5\u4F7F\u7528RTL\u7684"),ba={href:"https://testing-library.com/docs/dom-testing-library/api-async/",target:"_blank",rel:"noopener noreferrer"},ma=s("Async Methods"),ga=s(" \u5373"),ha=n("code",null,"waitFor",-1),fa=s(" , "),_a=n("code",null,"waitForElementToBeRemoved",-1),ya=s(" \u548C"),va=n("code",null," findBy queries",-1),xa=s("\u89E3\u51B3\u3002\u5982\u4E0A\u6210\u529F\u7684case\u3002"),wa=p(`<h4 id="deep-excavate" tabindex="-1"><a class="header-anchor" href="#deep-excavate" aria-hidden="true">#</a> Deep Excavate</h4><p>\u6BD4\u5982\u8FD9\u6837\u4E00\u4E2A\u7B80\u5355\u7684\u7EC4\u4EF6</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">const</span> ExampleOne<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ctr<span class="token punctuation">,</span> setCtr<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setCtr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>ctr<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ExampleOne
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6D4B\u8BD5</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>
<span class="token keyword">import</span> ExampleOne <span class="token keyword">from</span> <span class="token string">&#39;./ExampleOne&#39;</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should render 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ExampleOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span> el<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token comment">// fail!</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u62A5\u9519\u5982\u4E0B\uFF1A <img src="`+b+'" alt=""></p><p>\u5728\u9875\u9762\u7684\u6B63\u5E38\u53D8\u73B0\u662F\u4F1A\u663E\u793A\u4E3A &quot;1&quot;\uFF0C\u4F46\u6D4B\u8BD5\u5374\u663E\u793A\u7684 &quot;0&quot;</p><p>\u4E3A\u4EC0\u4E48\u8FD9\u6837\u5B50\uFF0C\u5C31\u8981\u6D89\u53CA\u5230React\u76F8\u5173\u7684\u539F\u7406\u77E5\u8BC6\uFF0CReact\u5E76\u4E0D\u662F\u540C\u6B65\u7684\u6E32\u67D3UI\u7684\uFF0CReact\u4F1A\u628A\u4EFB\u52A1\u5207\u7247\uFF0C\u5E76\u5F62\u6210\u4E00\u4E2A\u4EFB\u52A1\u961F\u5217\uFF0C\u7136\u540E\u6309\u4F18\u5148\u7EA7\u7B49\u6267\u884C\u3002</p><p><img src="'+m+`" alt=""></p><p>\u4F7F\u7528<code>act</code>\u5305\u88F9\u540E\u53EF\u4EE5pass</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>
<span class="token keyword">import</span> ExampleOne <span class="token keyword">from</span> <span class="token string">&#39;./ExampleOne&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> act <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom/test-utils&#39;</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should render 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// eslint-disable-next-line testing-library/no-unnecessary-act</span>
  <span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ExampleOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">,</span> el<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token comment">// fail!</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="`+g+'" alt=""></p><h4 id="\u4EC0\u4E48\u65F6\u5019\u5F97\u7528act" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u65F6\u5019\u5F97\u7528act" aria-hidden="true">#</a> \u4EC0\u4E48\u65F6\u5019\u5F97\u7528act</h4><ol><li>\u5F53\u4F7F\u7528<code>jest.useFakeTimers()</code>\u65F6</li><li>\u5F53\u4F7F\u7528\u6D4B\u8BD5\u81EA\u5B9A\u4E49hooks\u65F6</li><li>\u5F53\u4F7F\u7528<code>useImperativeHandle</code>\u65F6</li></ol>',14),Ba=s("\u53EF\u4EE5\u5728"),Ta={href:"https://kentcdodds.com/blog/fix-the-not-wrapped-in-act-warning#other-use-cases-for-manually-calling-act",target:"_blank",rel:"noopener noreferrer"},qa=s("\u8FD9\u91CC"),ja=s("\u67E5\u770B\u8BE6\u7EC6\u7684case\u3002"),Ea=n("h3",{id:"\u4EC0\u4E48\u65F6\u5019\u7528userevent\u548Cfireevent",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4EC0\u4E48\u65F6\u5019\u7528userevent\u548Cfireevent","aria-hidden":"true"},"#"),s(" \u4EC0\u4E48\u65F6\u5019\u7528"),n("code",null,"userEvent"),s("\u548C"),n("code",null,"fireEvent")],-1),Ra=s("\u5173\u4E8E\u8FD92\u4E2AAPI\uFF0C\u53EF\u4EE5\u8BA4\u4E3A"),Aa=n("code",null,"fireEvent",-1),Ca=s("\u662F\u4E00\u4E2A\u66F4\u5E95\u5C42\u66F4\u57FA\u7840\u7684API\uFF0C\u800C"),Sa=n("code",null,"userEvent",-1),Ia=s("\u57FA\u4E8E\u4E8B\u4EF6\u52A8\u4F5C/\u7C7B\u578B\u66F4\u4E0A\u5C42\u7684\u5C01\u88C5\uFF0C\u66F4\u7B26\u5408\u7528\u6237\u5728\u771F\u5B9E\u7684\u6D4F\u89C8\u5668\u7684\u884C\u4E3A\u8868\u73B0\u3002\u53EF\u4EE5\u770B\u5176\u6E90\u7801"),Da={href:"https://github.com/testing-library/user-event/blob/5feaa942f46bb37d96c2f2fbeb4b33e8beff75ad/src/click.js#L87-L103",target:"_blank",rel:"noopener noreferrer"},Fa=s("userEvent.click code"),Oa=p(`<p>\u53EF\u4EE5\u770B\u5230<code>useEvent</code>\u89E6\u53D1\u7684\u4E8B\u4EF6\u884C\u4E3A\u66F4\u50CF\u7528\u6237\u5728\u771F\u5B9E\u7684\u6D4F\u89C8\u5668\u89E6\u53D1\u7684\uFF0C\u6BD4\u5982<code>fireEvent.change()</code>\u53EA\u4F1A\u89E6\u53D1\u4E00\u6B21change\u4E8B\u4EF6\uFF0C<code>userEvent.type</code>\u4E5F\u4F1A\u89E6\u53D1\u4E00\u6B21change\u4E8B\u4EF6\uFF0C\u4F46\u4E5F\u4F1A\u89E6\u53D1<code>keyDown, keyPress, keyUp events</code>.</p><p>\u4EE5\u8FD9\u4E2A\u4F8B\u5B50\u4E3A\u4F8B\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Search&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls the onChange callback handler&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onChange <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span></span>
        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search:
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Search</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>

    fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      target<span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// success</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> userEvent<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// success</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u65AD\u8A00\u90FDpass\u4E86\uFF0C\u4F46\u660E\u663E\u4F7F\u7528<code>userEvent</code>\u65F6\uFF0C<code>onchange</code>\u6267\u884C10\u6B21\u66F4\u52A0\u7B26\u5408\u771F\u5B9E\u7684\u573A\u666F\u3002</p><p><code>@testing-library/user-event</code> \u662F\u5728 <code>fireEvent</code> \u57FA\u7840\u4E0A\u5B9E\u73B0\u7684\uFF0C\u4F46\u5B83\u63D0\u4F9B\u4E86\u4E00\u4E9B\u66F4\u63A5\u8FD1\u7528\u6237\u4EA4\u4E92\u7684\u65B9\u6CD5\u3002\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C<code>fireEvent.change</code> \u5176\u5B9E\u53EA\u89E6\u53D1\u4E86 <code>Input</code> \u7684\u4E00\u4E2A <code>Change </code>\u4E8B\u4EF6\u3002\u4F46\u662F <code>type</code> \u5219\u53EF\u4EE5\u5BF9\u6BCF\u4E2A\u5B57\u7B26\u90FD\u4F1A\u89E6\u53D1 <code>keyDown\u3001keyPress \u548C keyUp</code> \u4E00\u7CFB\u5217\u4E8B\u4EF6\u3002\u8FD9\u80FD\u66F4\u63A5\u8FD1\u7528\u6237\u7684\u771F\u5B9E\u4EA4\u4E92\u573A\u666F\u3002\u597D\u5904\u662F\u53EF\u4EE5\u5F88\u597D\u5730\u548C\u4F60\u5F53\u524D\u90A3\u4E9B\u6CA1\u6709\u76D1\u542C <code>Change</code> \u4E8B\u4EF6\u7684\u5E93\u4E00\u8D77\u4F7F\u7528\u3002</p><p>\u6240\u4EE5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u274C</span>
fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u2705</span>
userEvent<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u6B63\u786E\u5730\u67E5\u627E\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6B63\u786E\u5730\u67E5\u627E\u5143\u7D20" aria-hidden="true">#</a> \u6B63\u786E\u5730\u67E5\u627E\u5143\u7D20</h3>`,8),La=s("\u67E5\u627E\u5143\u7D20\u662F\u5728\u5199\u6D4B\u8BD5\u662F\u4E00\u4E2A\u6700\u57FA\u672C\u7684\u64CD\u4F5C\uFF0C\u67E5\u627E\u51FA\u7684\u5143\u7D20\u4E00\u822C\u4F1A\u7528\u6765\u4F7F\u7528"),Ua=n("code",null,"user-event",-1),Ha=s("\u89E6\u53D1\u4E8B\u4EF6\u6216\u8005\u4F7F\u7528 Jest/jest-dom \u6765\u505A\u65AD\u8A00\u5224\u65AD\u3002\u5EFA\u8BAE\u53EF\u4EE5\u5B8C\u6574\u7684\u770B\u4E0B"),Pa={href:"https://testing-library.com/docs/queries/about",target:"_blank",rel:"noopener noreferrer"},Ma=s("\u5B98\u65B9\u6587\u6863"),Va=s(" \uFF0C\u8FD9\u90E8\u5206\u5199\u7684\u5F88\u8BE6\u7EC6\u3002\u8FD9\u91CC\u505A\u4E0B\u5185\u5BB9\u63D0\u70BC\u548C\u6CE8\u610F\u70B9\u7B14\u8BB0\u3002"),Ja=n("p",null,[n("img",{src:h,alt:""})],-1),Na={id:"\u4F18\u5148\u7EA7",tabindex:"-1"},Wa=n("a",{class:"header-anchor",href:"#\u4F18\u5148\u7EA7","aria-hidden":"true"},"#",-1),za=s(),Qa={href:"https://testing-library.com/docs/queries/about#priority",target:"_blank",rel:"noopener noreferrer"},Ga=s("\u4F18\u5148\u7EA7"),Ya=n("p",null,[n("strong",null,"\u5C3D\u91CF\u4F7F\u7528\u65E0\u969C\u788D\u7684\u7279\u6548\u53BB\u67E5\u627E")],-1),Za=s("getByRole\uFF0C"),Ka={href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/",target:"_blank",rel:"noopener noreferrer"},Xa=s("Roles"),$a=n("li",null,"getByLabelText",-1),nt=n("li",null,"getByText",-1),st=n("li",null,"getByDisplayValue",-1),at=p(`<p><strong>\u5C3D\u91CF\u4F7F\u7528\u8BED\u4E49\u8BDD\u53BB\u67E5\u627E</strong></p><ul><li>getByAltText</li><li>getByTitle</li></ul><p>\u4F7F\u7528<strong>Test IDs</strong></p><ul><li>getByTestId</li></ul><ul><li>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u5F53\u4F60\u5728\u60F3\u6211\u8BE5\u7528\u90A3\u4E2Aquery\u65B9\u6CD5\u65F6\uFF0C\u9996\u9009\u7684\u90FD\u662F<code>*ByRole</code>\uFF0C\u5176\u4ED6\u7684\u60C5\u51B5\u53EF\u4EE5\u53C2\u8003\u4E0B\u9762\u7684<a href="#some-case">some case</a></li></ul><h4 id="getby-vs-queryby" tabindex="-1"><a class="header-anchor" href="#getby-vs-queryby" aria-hidden="true">#</a> <code>getBy</code> vs <code>queryBy</code></h4><p><code>getBy</code>\u4F1A\u8FD4\u56DE<strong>\u4E00\u4E2A\u5143\u7D20</strong>\u6216\u8005\u4E00\u4E2A\u9519\u8BEF\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u662F\u5F88\u660E\u786E\u7684\uFF0C\u5C31\u662FDom\u4E2D\u8981\u4E48\u627E\u7684\u5230\uFF0C\u8981\u4E48\u62A5\u9519\uFF0C\u552F\u4E00\u7684\u6BDB\u75C5\u5C31\u662F\u4E0D\u80FD\u68C0\u67E5\u4E00\u4E2A\u5143\u7D20\u4E0D\u5E94\u8BE5\u5728Dom\u4E2D\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> TestQueryOne <span class="token keyword">from</span> <span class="token string">&#39;./TestQueryOne&#39;</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;renders TestQueryOne component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TestQueryOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    screen<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// fails</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Searches for JavaScript</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u4E0A\uFF0C\u4E0A\u9762\u7684\u6D4B\u8BD5\u4F1A\u5931\u8D25\uFF0C\u56E0\u4E3A<code>getBy</code> \u627E\u4E0D\u5230\u5C31\u4F1A\u62A5\u9519\u554A\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65F6\u5019\uFF0C<code>queryBy</code>\u5C31\u6539\u6D3E\u4E0A\u7528\u573A\u4E86\u3002\u6240\u4EE5\u4E0A\u9762\u7684\u65AD\u8A00\u6362\u6210\u8FD9\u6837\u5C31\u53EF\u4EE5\u4E86\u3002\u56E0\u4E3AqueryBy\u627E\u4E0D\u5230\u4E0D\u4F1A\u62A5\u9519\u800C\u662F\u8FD4\u56DE<code>Null</code></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">queryByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Searches for JavaScript</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6240\u4EE5\uFF0C\u5230\u5E95\u4F7F\u7528<code>getBy</code> \u8FD8\u662F <code>queryBy</code>\uFF0C\u53EA\u9700\u8981\u770B\u4F60\u662F\u4E0D\u662F\u9700\u8981\u65AD\u8A00\u4E00\u4E2A\u5143\u7D20\u4E0D\u8BE5\u5B58\u5728\u4E8EDom\u4E0A\u3002</p><h4 id="findby" tabindex="-1"><a class="header-anchor" href="#findby" aria-hidden="true">#</a> <code>findBy</code></h4><p><code>findBy</code>\u5C31\u662F\u7528\u4E8E\u5F02\u6B65\u67E5\u627E\u54AF\uFF0C<code>findBy</code>\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>\uFF0C<strong>\u8FD9\u4E2A<code>Promise</code>\u9ED8\u8BA4\u57281\u79D2\u5185\u6CA1\u6709\u627E\u5230\u8FD9\u4E2A\u5143\u7D20\u6216\u8005\u627E\u5230\u4E86\u4E0D\u6B62\u4E00\u4E2A\uFF0C\u5C31\u4F1A<code>Reject</code></strong>\u3002\u6BD4\u5982\uFF1A</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Robin&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">SearchInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>search<span class="token punctuation">,</span> setSearch<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>user<span class="token punctuation">,</span> setUser<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">null</span> <span class="token operator">|</span> User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">loadUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// setTimeout(() =&gt; loadUser(), 1500)</span>
    <span class="token function">loadUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">handleChange</span><span class="token punctuation">(</span>event<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setSearch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>user <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Signed in as </span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>search<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search:
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Search</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Searches for </span><span class="token punctuation">{</span>search <span class="token operator">||</span> <span class="token string">&#39;...&#39;</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">SearchInputProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">Search</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token operator">:</span> SearchInputProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> SearchInput

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><p>test file</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> SearchInput<span class="token punctuation">,</span> <span class="token punctuation">{</span> Search <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./index&#39;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> screen<span class="token punctuation">,</span> fireEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/react&#39;</span>
<span class="token keyword">import</span> userEvent <span class="token keyword">from</span> <span class="token string">&#39;@testing-library/user-event&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;SearchInput&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;renders SearchInput component&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchInput</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>
  
    <span class="token comment">// succeeds</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Searches for</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">queryByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Signed in as</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4F1Aerror\uFF0C\u5982\u679C\u662F setTimeout(() =&gt; loadUser(), 1500)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> screen<span class="token punctuation">.</span><span class="token function">findByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Signed in as Robin</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      target<span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Searches for JavaScript</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInTheDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Search&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls the onChange callback handler&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onChange <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span></span>
        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search:
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Search</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>

    fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      target<span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Search&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls the onChange callback handler&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> onChange <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span></span>
        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search:
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Search</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>

    fireEvent<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      target<span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> userEvent<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>onChange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div></details><p>\u5982\u679C\u628A<code>loadUser()</code>\u66FF\u6362\u4E3A<code>setTimeout(() =&gt; loadUser(), 1500)</code>\uFF0C<code>findByText</code>\u7684case\u90A3\u91CC\u6D4B\u8BD5\u5C31\u4F1A\u5931\u8D25\u3002</p><h4 id="\u67E5\u627E\u591A\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u591A\u4E2A\u5143\u7D20" aria-hidden="true">#</a> \u67E5\u627E\u591A\u4E2A\u5143\u7D20</h4><ul><li>getAllBy</li><li>queryAllBy</li><li>findAllBy</li></ul><h4 id="some-case" tabindex="-1"><a class="header-anchor" href="#some-case" aria-hidden="true">#</a> some case</h4><h5 id="text-is-broken-up-by-multiple-elements" tabindex="-1"><a class="header-anchor" href="#text-is-broken-up-by-multiple-elements" aria-hidden="true">#</a> <code>text is broken up by multiple elements</code></h5><p>html\u5982\uFF1A<code>&lt;h3&gt;Hello &lt;span&gt;World&lt;/span&gt;&lt;/h3&gt;</code>\uFF0Ch3 \u4E2D\u7684text\u88AB\u6807\u7B7E\u5206\u5272\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Error: TestingLibraryElementError: Unable to find an element with the text: /hello world/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.</span>
screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello world</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span>

screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;heading&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello world</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// or more precisely for h3 tag</span>
screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;heading&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello world</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="finding-multiple-elements" tabindex="-1"><a class="header-anchor" href="#finding-multiple-elements" aria-hidden="true">#</a> Finding multiple elements</h5><p>\u6BD4\u5982\u5728\u4E00\u4E2A\u7EC4\u4EF6\u4E2Dhtml\u5982\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Login now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5982\u679C\u8FD9\u6837\u53BBquery\uFF0C\u5BF9\u4E8E\u6D4B\u8BD5\u7528\u4F8B\u6765\u8BF4\uFF0C\u662F\u5F88\u8106\u5F31\u7684\uFF0C\u8F7B\u6613\u7684\u6539\u52A8\u5C31\u53EF\u80FDfail\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> logins <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getAllByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">login</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span>
<span class="token keyword">const</span> loginButton <span class="token operator">=</span> logins<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u66F4\u597D\u7684\u5199\u6CD5\u662F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> loginButton <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">login</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> selector<span class="token operator">:</span> <span class="token string">&#39;button&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// or</span>
<span class="token keyword">const</span> loginButton2 <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;/login/i&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,28),tt=s("\u5373\u4F7F\u7528\u7684"),pt=n("code",null,"options",-1),et=s("\u53C2\u6570\u53BB\u7F29\u5C0F\u8303\u56F4\u3002\u6BD4\u5982\u7B2C\u4E00\u4E2Acase\u4E2D\u7528"),ot={href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/heading_role",target:"_blank",rel:"noopener noreferrer"},ct=n("code",null,"heading",-1),lt=s(" \u548C"),ut=n("code",null,"level",-1),it=s(" \u800C\u4E0D\u662F "),rt=n("code",null,"h1",-1),kt=s("..."),dt=n("code",null,"h6 ",-1),bt=s("\u6807\u7B7E."),mt=p(`<h5 id="\u67E5\u627E\u7A7A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u7A7A\u5143\u7D20" aria-hidden="true">#</a> \u67E5\u627E\u7A7A\u5143\u7D20</h5><p>\u6BD4\u5982\u56FE\u6807\u8FD9\u6837\u7684</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">* default class for fonts-face with icons */
    .icon</span> <span class="token punctuation">{</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;IconFontRoleImg&#39;</span> <span class="token important">!important</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">/* specific class for icon */</span>
    <span class="token selector">.icon-star-bg:before</span> <span class="token punctuation">{</span> <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;\\e982&quot;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon icon-star-bg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5176\u5B9E\uFF0Chtml\u7ED3\u6784\u5E94\u8BE5\u4E3A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon icon-star-bg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>img<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Favorite<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u6837\u5C31\u53EF\u4EE5\u4F7F\u7528<code>getByRole(&#39;img&#39;, { name: /favorite/i })</code>\u3002</p>`,6),gt={href:"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA24",target:"_blank",rel:"noopener noreferrer"},ht=s('Semantically identifying a font icon with role="img"'),ft=n("h5",{id:"\u67E5\u8BE2\u6CA1\u6709role\u5BF9\u5E94\u7684",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u67E5\u8BE2\u6CA1\u6709role\u5BF9\u5E94\u7684","aria-hidden":"true"},"#"),s(" \u67E5\u8BE2\u6CA1\u6709"),n("code",null,"role"),s("\u5BF9\u5E94\u7684")],-1),_t=n("code",null,"*ByRole",-1),yt=s("\u4E5F\u4E0D\u662F\u94F6\u5F39\uFF0C\u6709\u4E9B\u573A\u666F\u4E5F\u662F\u4E0D\u80FD\u7528"),vt=n("code",null,"*ByRole",-1),xt=s("\u7684\uFF0C\u6BD4\u5982\u67E5\u627E\u4E00\u4E2A\u6CA1\u6709role\u7684\u5143\u7D20\uFF0C\u5982\u5BC6\u7801\u8F93\u5165input\uFF0C\u53EF\u4EE5\u4ECE"),wt={href:"https://testing-library.com/docs/queries/about/#priority",target:"_blank",rel:"noopener noreferrer"},Bt=s("\u5B98\u7F51"),Tt=s(" \u4E0A\u627E\u5230\u5176\u4ED6\u5BF9\u4E8E\u7684API\uFF0C\u5DF2\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A \u7F51\u7AD9\uFF1A"),qt={href:"https://testing-playground.com/",target:"_blank",rel:"noopener noreferrer"},jt=s("testing-playground"),Et=s(" \uFF0C\u7C98\u8D34\u5BF9\u4E8E\u7684Html\u7ED3\u6784\uFF0C\u5C31\u770B\u5230\u8BE5\u4F7F\u7528\u90A3\u4E2A\u4E86\u3002 "),Rt=n("img",{src:f,alt:""},null,-1),At=s(" \u4F7F\u7528\u6D4F\u89C8\u5668\u63D2\u4EF6\u66F4\u52A0\u65B9\u4FBF "),Ct={href:"https://chrome.google.com/webstore/detail/testing-playground/hejbmebodbijjdhflfknehhcgaklhano",target:"_blank",rel:"noopener noreferrer"},St=s("Chrome"),It=s(" or "),Dt={href:"https://addons.mozilla.org/en-US/firefox/addon/testing-playground/",target:"_blank",rel:"noopener noreferrer"},Ft=s("Firefox"),Ot=s(" ."),Lt=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" reference")],-1),Ut={href:"https://insights.thoughtworks.cn/react-strategies-for-unit-testing/",target:"_blank",rel:"noopener noreferrer"},Ht=s("React\u5355\u5143\u6D4B\u8BD5\u7B56\u7565\u53CA\u843D\u5730"),Pt={href:"https://www.robinwieruch.de/react-testing-library/",target:"_blank",rel:"noopener noreferrer"},Mt=s("React Testing Library Tutorial"),Vt={href:"https://timdeschryver.dev/blog/making-sure-youre-using-the-correct-query",target:"_blank",rel:"noopener noreferrer"},Jt=s("Making sure you're using the correct query"),Nt={href:"https://mp.weixin.qq.com/s/pgdcDNjDGPgNq76Zh_dZxg",target:"_blank",rel:"noopener noreferrer"},Wt=s("\u4F7F\u7528 "),zt=n("code",null,"React Testing Library",-1),Qt=s(" \u7684 15 \u4E2A\u5E38\u89C1\u9519\u8BEF"),Gt={href:"https://github.com/threepointone/react-act-examples/blob/master/sync.md",target:"_blank",rel:"noopener noreferrer"},Yt=s("Act Deep Excavate"),Zt={href:"https://javascript.plainenglish.io/you-probably-dont-need-act-in-your-react-tests-2a0bcd2ad65c",target:"_blank",rel:"noopener noreferrer"},Kt=s("You Probably Don\u2019t Need act() in Your React Tests"),Xt={href:"https://flyingsquirrel.medium.com/when-should-i-use-act-in-react-testing-library-d7dd22a3340e",target:"_blank",rel:"noopener noreferrer"},$t=s("When should I use act() in react-testing-library?"),np=n("hr",null,null,-1);function sp(ap,tp){const e=c("RouterLink"),t=c("ExternalLinkIcon");return u(),i(r,null,[y,n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#guide"},{default:o(()=>[x]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#vs-jest"},{default:o(()=>[w]),_:1})]),n("li",null,[a(e,{to:"#\u5B89\u88C5"},{default:o(()=>[B]),_:1})]),n("li",null,[a(e,{to:"#basic"},{default:o(()=>[T]),_:1})])])]),n("li",null,[a(e,{to:"#\u8BE6\u7EC6\u6559\u7A0B"},{default:o(()=>[q]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#render-a-component"},{default:o(()=>[j]),_:1})]),n("li",null,[a(e,{to:"#act"},{default:o(()=>[E]),_:1})]),n("li",null,[a(e,{to:"#\u4EC0\u4E48\u65F6\u5019\u7528userevent\u548Cfireevent"},{default:o(()=>[R]),_:1})]),n("li",null,[a(e,{to:"#\u6B63\u786E\u5730\u67E5\u627E\u5143\u7D20"},{default:o(()=>[A]),_:1})])])]),n("li",null,[a(e,{to:"#reference"},{default:o(()=>[C]),_:1})])])]),S,n("p",null,[n("a",I,[D,a(t)]),F,O,L,n("a",U,[H,a(t)]),P,M,V,J,N]),W,n("p",null,[z,n("a",Q,[G,a(t)]),Y]),Z,n("p",null,[K,X,$,nn,sn,an,tn,pn,en,n("a",on,[cn,a(t)]),ln]),un,n("ul",null,[n("li",null,[n("a",rn,[kn,a(t)]),dn]),n("li",null,[n("a",bn,[mn,a(t)]),gn,hn,fn,_n,yn,vn,xn]),n("li",null,[n("a",wn,[Bn,a(t)]),Tn]),n("li",null,[n("a",qn,[jn,a(t)]),En,Rn,An,Cn,Sn,In,Dn,Fn,On]),n("li",null,[n("a",Ln,[Un,a(t)]),Hn,Pn,Mn,Vn,Jn,Nn,Wn]),n("li",null,[n("a",zn,[Qn,a(t)]),Gn,Yn,Zn,Kn,Xn])]),$n,n("p",null,[ns,n("a",ss,[as,a(t)]),ts]),n("ul",null,[n("li",null,[ps,n("a",es,[os,a(t)])])]),cs,n("ul",null,[n("li",null,[ls,n("a",us,[is,a(t)]),rs,n("a",ks,[ds,a(t)]),bs])]),ms,n("ul",null,[n("li",null,[n("a",gs,[hs,a(t)])])]),fs,n("ul",null,[n("li",null,[n("a",_s,[ys,a(t)])])]),vs,n("p",null,[n("a",xs,[ws,a(t)])]),n("ul",null,[n("li",null,[n("a",Bs,[Ts,a(t)])])]),qs,n("p",null,[js,n("a",Es,[Rs,a(t)]),As,Cs,Ss]),Is,n("ul",null,[n("li",null,[n("p",null,[Ds,n("a",Fs,[Os,a(t)]),Ls])]),Us]),Hs,n("p",null,[Ps,n("a",Ms,[Vs,a(t)])]),Js,n("h3",Ns,[Ws,zs,n("a",Qs,[Gs,a(t)])]),n("p",null,[Ys,n("a",Zs,[Ks,a(t)]),Xs]),$s,n("p",null,[na,sa,aa,ta,n("a",pa,[ea,a(t)])]),oa,n("p",null,[ca,n("a",la,[ua,a(t)]),ia]),ra,ka,n("p",null,[da,n("a",ba,[ma,a(t)]),ga,ha,fa,_a,ya,va,xa]),wa,n("p",null,[Ba,n("a",Ta,[qa,a(t)]),ja]),Ea,n("p",null,[Ra,Aa,Ca,Sa,Ia,n("a",Da,[Fa,a(t)])]),Oa,n("p",null,[La,Ua,Ha,n("a",Pa,[Ma,a(t)]),Va]),Ja,n("h4",Na,[Wa,za,n("a",Qa,[Ga,a(t)])]),Ya,n("ul",null,[n("li",null,[Za,n("a",Ka,[Xa,a(t)])]),$a,nt,st]),at,n("p",null,[tt,pt,et,n("a",ot,[ct,lt,ut,a(t)]),it,rt,kt,dt,bt]),mt,n("ul",null,[n("li",null,[n("a",gt,[ht,a(t)])])]),ft,n("p",null,[_t,yt,vt,xt,n("a",wt,[Bt,a(t)]),Tt,n("a",qt,[jt,a(t)]),Et,Rt,At,n("a",Ct,[St,a(t)]),It,n("a",Dt,[Ft,a(t)]),Ot]),Lt,n("ul",null,[n("li",null,[n("a",Ut,[Ht,a(t)])]),n("li",null,[n("a",Pt,[Mt,a(t)])]),n("li",null,[n("a",Vt,[Jt,a(t)])]),n("li",null,[n("a",Nt,[Wt,zt,Qt,a(t)])]),n("li",null,[n("a",Gt,[Yt,a(t)])]),n("li",null,[n("a",Zt,[Kt,a(t)])]),n("li",null,[n("a",Xt,[$t,a(t)])])]),np],64)}var ep=l(_,[["render",sp],["__file","rtl.html.vue"]]);export{ep as default};
