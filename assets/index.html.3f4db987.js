import{_ as l,r as c,o as u,c as r,a as n,b as a,w as e,F as i,d as o,e as s}from"./app.a96f585b.js";var k="/assets/vue1.a641a0ae.png",b="/assets/vue_all_process.b3dc495b.png",m="/assets/vue_stream.3df885d1.png",d="/assets/vue3.3090e275.png",h="/assets/vue_observer.d6e99d78.png",f="/assets/vue2.e0fdf4d9.png",y="/assets/vue_life_circle.d92df3ea.png",w="/assets/vue_view_render_process.683b9f44.png",g="/assets/updateChildren.afd4bb42.png",v="/assets/vdom_diff.4b9e7248.jpg",_="/assets/vue3diff.eb9061e5.png",x="/assets/key_use.9e082ce8.png",V="/assets/vue4.dcb364b5.png",q="/assets/vue_render.d2e63097.png";const E={},C={class:"table-of-contents"},S=s("\u76EE\u5F55"),j=s("\u9762\u8BD5\u9898"),D=s("\u6838\u5FC3\u54CD\u5E94\u5F0F\u539F\u7406"),I=s("v-model"),O=s("template\u662F\u5982\u4F55\u7F16\u8BD1\u6210render function\u7684\uFF1F"),A=s("this.$set() \u4E0Ethis.$del"),T=s("\u6570\u7EC4\u54CD\u5E94\u5F0F\u53D8\u5316\u539F\u7406"),M=s("Vue\u4E2D$nextTick\u6E90\u7801\u89E3\u6790"),N=s("\u751F\u547D\u5468\u671F"),F=s("Vue\u4E8B\u4EF6\u7ED1\u5B9A\u539F\u7406"),R=s("\u62BD\u8C61\u7EC4\u4EF6"),P=s("vue\u51FD\u6570\u5F0F\u7EC4\u4EF6functional"),B=s("\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD"),$=s("computed\u548Cwatch"),L=s("Vue\u4E2D\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F"),z=s("\u89C6\u56FE\u6E32\u67D3\u8FC7\u7A0B"),W=s("vue Diff"),U=s("vue3.0 diff"),G=s("\u865A\u62DFdom"),H=s("\u6570\u636E\u6539\u53D8\u5230\u9875\u9762\u6E32\u67D3\u7684\u8FC7\u7A0B\u662F\u600E\u4E48\u6837\u7684\uFF1F"),Q=s("vue\u6A21\u677F\u6E32\u67D3--compile"),K=s("\u624B\u5199Vue-router\u6838\u5FC3\u539F\u7406"),Y=s("SPA \u8DEF\u7531"),J=s("\u6253\u5305\u61D2\u52A0\u8F7D"),X=s("vue-loader\u539F\u7406\u5206\u6790"),Z=s("Vue CLI\u662F\u5982\u4F55\u5B9E\u73B0\u7684"),nn=s("Vue\u7EC4\u4EF6name\u5C5E\u6027\u603B\u7ED3"),sn=o('<h2 id="\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55" aria-hidden="true">#</a> \u76EE\u5F55</h2><ul><li><a href="#%E6%A0%B8%E5%BF%83%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86">\u6838\u5FC3\u54CD\u5E94\u5F0F\u539F\u7406</a></li><li><a href="#v-model">v-model</a></li><li><a href="#template%E6%98%AF%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91%E6%88%90render-function%E7%9A%84">template\u662F\u5982\u4F55\u7F16\u8BD1\u6210render function\u7684</a></li><li><a href="#this-set-%E4%B8%8Ethis-del">this.$set() \u4E0Ethis.$del</a></li><li><a href="#%E6%95%B0%E7%BB%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8F%98%E5%8C%96%E5%8E%9F%E7%90%86">\u6570\u7EC4\u54CD\u5E94\u5F0F\u53D8\u5316\u539F\u7406</a></li><li><a href="#vue%E4%B8%AD-nexttick%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90">Vue\u4E2D$nextTick\u6E90\u7801\u89E3\u6790</a></li><li><a href="#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F">\u751F\u547D\u5468\u671F</a></li><li><a href="#%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6">\u62BD\u8C61\u7EC4\u4EF6\u53CA\u51FD\u6570\u5F0F\u7EC4\u4EF6</a></li><li><a href="#%E6%8F%92%E6%A7%BD%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD">\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD</a></li><li><a href="#computed%E5%92%8Cwatch">computed\u548Cwatch</a></li><li><a href="#vue%E4%B8%AD%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%B0%83%E7%94%A8%E9%A1%BA%E5%BA%8F">Vue\u4E2D\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F</a></li><li><a href="#%E8%A7%86%E5%9B%BE%E6%B8%B2%E6%9F%93%E8%BF%87%E7%A8%8B">\u89C6\u56FE\u6E32\u67D3\u8FC7\u7A0B</a></li><li><a href="#vue-diff">vue Diff</a></li><li><a href="#vue%E4%B8%ADkey%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BD%9C%E7%94%A8">Vue\u4E2Dkey\u5C5E\u6027\u7684\u4F5C\u7528</a></li><li><a href="#updatechildren">updateChildren</a></li><li><a href="#vue3-0-diff">vue3 diff</a></li><li><a href="#%E8%99%9A%E6%8B%9Fdom">\u865A\u62DFdom</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E6%94%B9%E5%8F%98%E5%88%B0%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93%E7%9A%84%E8%BF%87%E7%A8%8B%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84">\u6570\u636E\u6539\u53D8\u5230\u9875\u9762\u6E32\u67D3\u7684\u8FC7\u7A0B\u662F\u600E\u4E48\u6837\u7684</a></li><li><a href="#vue%E6%A8%A1%E6%9D%BF%E6%B8%B2%E6%9F%93-compile">vue\u6A21\u677F\u6E32\u67D3-compile</a></li><li><a href="#spa-%E8%B7%AF%E7%94%B1">spa\u8DEF\u7531</a></li><li><a href="#%E6%89%93%E5%8C%85%E6%87%92%E5%8A%A0%E8%BD%BD">\u6253\u5305\u61D2\u52A0\u8F7D</a></li><li><a href="#vue-loader%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90">vue-loader\u539F\u7406\u5206\u6790</a></li><li><a href="#vue-cli%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84">Vue CLI\u662F\u5982\u4F55\u5B9E\u73B0\u7684</a></li></ul><h3 id="\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u9898" aria-hidden="true">#</a> \u9762\u8BD5\u9898</h3>',3),an={href:"https://mp.weixin.qq.com/s/ghVfca_f3bmQO6YvwLtP_A",target:"_blank",rel:"noopener noreferrer"},pn=s("Vue \u9762\u8BD5\u9898"),tn={href:"https://juejin.cn/post/6844904138208182285",target:"_blank",rel:"noopener noreferrer"},en=s("\u5927\u5382\u9AD8\u9891Vue\u9762\u8BD5\u9898\uFF08\u4E0A\uFF09"),on={href:"https://juejin.cn/poxst/6844903913410314247",target:"_blank",rel:"noopener noreferrer"},cn=s("Vue \u9879\u76EE\u6027\u80FD\u4F18\u5316 \u2014 \u5B9E\u8DF5\u6307\u5357\uFF08\u7F51\u4E0A\u6700\u5168 / \u8BE6\u7EC6\uFF09"),ln={href:"https://juejin.cn/post/6922641008106668045",target:"_blank",rel:"noopener noreferrer"},un=s("\u63ED\u79D8 Vue.js \u4E5D\u4E2A\u6027\u80FD\u4F18\u5316\u6280\u5DE7"),rn=s(" -- \u9762\u8BD5\u5E94\u8BE5\u80FD\u7528\u5F97\u4E0A"),kn={id:"vue-js-\u6280\u672F\u63ED\u79D8",tabindex:"-1"},bn=n("a",{class:"header-anchor",href:"#vue-js-\u6280\u672F\u63ED\u79D8","aria-hidden":"true"},"#",-1),mn=s(),dn={href:"https://ustbhuangyi.github.io/vue-analysis/",target:"_blank",rel:"noopener noreferrer"},hn=s("Vue.js \u6280\u672F\u63ED\u79D8"),fn={id:"\u6E32\u67D3\u5668",tabindex:"-1"},yn=n("a",{class:"header-anchor",href:"#\u6E32\u67D3\u5668","aria-hidden":"true"},"#",-1),wn=s(),gn={href:"http://hcysun.me/vue-design/zh/",target:"_blank",rel:"noopener noreferrer"},vn=s("\u6E32\u67D3\u5668"),_n={id:"vue\u6E90\u7801\u5168\u89E3",tabindex:"-1"},xn=n("a",{class:"header-anchor",href:"#vue\u6E90\u7801\u5168\u89E3","aria-hidden":"true"},"#",-1),Vn=s(),qn={href:"https://juejin.im/post/6846687602679119885",target:"_blank",rel:"noopener noreferrer"},En=s("Vue\u6E90\u7801\u5168\u89E3"),Cn={id:"\u6838\u5FC3\u54CD\u5E94\u5F0F\u539F\u7406",tabindex:"-1"},Sn=n("a",{class:"header-anchor",href:"#\u6838\u5FC3\u54CD\u5E94\u5F0F\u539F\u7406","aria-hidden":"true"},"#",-1),jn=s(),Dn={href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"},In=s("\u6838\u5FC3\u54CD\u5E94\u5F0F\u539F\u7406"),On=n("p",null,[n("img",{src:k,alt:"An image"})],-1),An=n("blockquote",null,[n("p",null,[s("vue\u91C7\u7528\u6570\u636E\u52AB\u6301\u7ED3\u5408\u89C2\u5BDF\u8005\u6A21\u5F0F\u7684\u65B9\u5F0F\uFF0C\u901A\u8FC7"),n("code",null,"Object.defineProperty()"),s("\u6765\u52AB\u6301\u5404\u4E2A\u5C5E\u6027\u7684setter\uFF0Cgetter\uFF0C\u5728\u6570\u636E\u53D8\u52A8\u65F6\u901A\u77E5\u8BA2\u9605\u8005(watcher)\uFF0C\u89E6\u53D1\u76F8\u5E94\u7684\u76D1\u542C\u56DE\u8C03\u3002 \u6BCF\u4E2A\u7EC4\u4EF6\u5B9E\u4F8B\u90FD\u5BF9\u5E94\u4E00\u4E2A watcher \u5B9E\u4F8B\uFF0C\u5B83\u4F1A\u5728\u7EC4\u4EF6\u6E32\u67D3\u7684\u8FC7\u7A0B\u4E2D\u628A\u201C\u63A5\u89E6\u201D\u8FC7\u7684\u6570\u636E property \u8BB0\u5F55\u4E3A\u4F9D\u8D56\u3002\u4E4B\u540E\u5F53\u4F9D\u8D56\u9879\u7684 setter \u89E6\u53D1\u65F6\uFF0C\u4F1A\u901A\u77E5 watcher\uFF0C\u4ECE\u800C\u4F7F\u5B83\u5173\u8054\u7684\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\u3002 Dep \u5BF9\u8C61\u7528\u4E8E\u4F9D\u8D56\u6536\u96C6\uFF0C\u5B83\u5B9E\u73B0\u4E86\u4E00\u4E2A\u89C2\u5BDF\u8005\u6A21\u5F0F\uFF0C\u5B8C\u6210\u4E86\u6570\u636E Data \u548C\u6E32\u67D3\u89C6\u56FE Watcher \u7684\u8BA2\u9605")])],-1),Tn={href:"https://juejin.cn/post/6844903586103558158",target:"_blank",rel:"noopener noreferrer"},Mn=s("vue MVVM\u539F\u7406"),Nn={href:"https://juejin.cn/post/6857669921166491662",target:"_blank",rel:"noopener noreferrer"},Fn=s("\u56FE\u89E3 Vue \u54CD\u5E94\u5F0F\u539F\u7406"),Rn=n("p",null,[n("img",{src:b,alt:""})],-1),Pn=n("p",null,[n("img",{src:m,alt:""})],-1),Bn={href:"https://juejin.cn/post/6844904113432444942",target:"_blank",rel:"noopener noreferrer"},$n=s("Vue \u7684\u54CD\u5E94\u5F0F\u66F4\u65B0\u7C92\u5EA6"),Ln=o('<h5 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h5><ul><li>1\u3001\u5728<code>beforeCreate</code>\u548C<code>created</code>\u4E4B\u95F4\u8C03\u7528<code>initState(vm)</code>\u65B9\u6CD5\uFF0C \u83B7\u53D6<code>data</code>\u5E76\u904D\u5386\uFF0C\u8C03\u7528<code>observe</code>\u65B9\u6CD5\uFF0C<code>ob = new Observer(value)</code>\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u548C\u6D3E\u53D1\u66F4\u65B0\uFF1B</li><li>2\u3001\u5728<code>Observer</code>\u4E2D\u8C03\u7528<code>defineReactive</code>\u4F7F\u7528<code>defineProperty</code>\u8FDB\u884C<code>get</code>\u548C<code>set</code>\u64CD\u4F5C\uFF0C<code>defineReactive</code>\u4E2D<code>var dep = new Dep()</code>\uFF1B <code>Object.defineProperty</code> \u5728<code>getter</code>\u65F6<code>if (Dep.target)</code> \u5219\u6267\u884C <code>dep.depend()</code>\u5373<code>Dep.target.addDep(this)</code>\uFF1Bsetter\u7684\u65F6\u5019<code>dep.notify()</code>\u6D3E\u53D1\u66F4\u65B0\u3002</li><li>3\u3001\u5728<code>beforeMount</code>\u548C<code>mounted</code>\u4E4B\u95F4<code>new Watcher()</code>\uFF0C<code>watcher</code>\u5B9E\u4F8B\u5316\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C<code>this.get()</code>\u65B9\u6CD5\uFF0C\u628A<code>Dep.target</code>\u8D4B\u503C\u4E3A\u5F53\u524D\u6E32\u67D3watcher\u5E76\u538B\u5165\u6808(\u4E3A\u4E86\u6062\u590D\u7528)\uFF0C\u5177\u4F53\u662F<code>new</code>\u7684\u65F6\u5019\u6267\u884C <code>this.get()</code>\uFF0C\u7136\u540E\u8FD9\u4E2Aget\u5148\u6267\u884C <code>pushTarget(this);</code>\u7136\u540E\u6267\u884C<code>this.getter.call(vm, vm)</code>\uFF0C \u8FD9\u4E2A<code>getter</code>\u662F<code>new</code>\u7684\u65F6\u5019\u8D4B\u503C\u7684<code>updateComponent</code>\u51FD\u6570\uFF0C\u91CC\u9762\u6267\u884C\u4E86<code>render\u7EC4\u4EF6</code>\u7684\u65B9\u6CD5\u3002 \u63A5\u7740\u6267\u884C<code>vm._render()</code>\u65B9\u6CD5\uFF0C\u751F\u6210\u6E32\u67D3VNode\uFF0C\u5E76\u4E14\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\u5BF9vm\u4E0A\u7684\u6570\u636E\u8BBF\u95EE\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u89E6\u53D1\u4E86\u6570\u636E\u5BF9\u8C61\u7684getter(\u6267\u884C\u4E86<code>Dep.target.addDep(this)</code>\u65B9\u6CD5\uFF0C \u5C06watcher\u8BA2\u9605\u5230\u8FD9\u4E2A\u6570\u636E\u6301\u6709\u7684dep\u7684subs\u4E2D\uFF0C\u4E3A\u540E\u7EED\u6570\u636E\u53D8\u5316\u65F6\u901A\u77E5\u5230\u62C9\u4E0Bsubs\u505A\u51C6\u5907)\u3002\u7136\u540E\u9012\u5F52\u904D\u5386\u6DFB\u52A0\u6240\u6709\u5B50\u9879\u7684getter\u3002</li></ul><blockquote><p>data\u4E2D\u7684\u6570\u636E\u662F\u5BF9\u8C61\u6216\u8005\u57FA\u672C\u7C7B\u578B\uFF0C\u5BF9\u6BD4\u591A\u505A\u4E86\u4E00\u4E9B\u5DE5\u4F5C\uFF0C\u4F1A\u7ED9\u8FD9\u4E2A\u5BF9\u8C61\u5C5E\u6027\u6DFB\u52A0<code>__ob__</code>\u7684\u5C5E\u6027\uFF0C\u5373<code>new Observer</code>\u4E2D\u521B\u5EFA\u4E86\u4F9D\u8D56\u6536\u96C6<code>dep</code>\uFF0C\u5728<code>Object.defineReactive</code>\u4E2D\u5224\u65AD\u6709\u8FD9\u4E2A \u5C5E\u6027\uFF0C\u5219\u6DFB\u52A0\u4F9D\u8D56\uFF0C\u65B9\u4FBF\u540E\u7EED\u7684<code>$set</code>\uFF0C<code>$delete</code>api\u7684\u5904\u7406</p></blockquote><p><img src="'+d+'" alt="An image"></p>',4),zn={href:"https://mp.weixin.qq.com/s/FewKP2UTfbDzDxJMjoe62A",target:"_blank",rel:"noopener noreferrer"},Wn=s("\u4ECE\u89C2\u5BDF\u8005\u6A21\u5F0F\u5230\u54CD\u5E94\u5F0F\u7684\u8BBE\u8BA1\u539F\u7406"),Un=o('<p>\u89C2\u5BDF\u8005\u6A21\u5F0F\u5B9E\u73B0\u81EA\u52A8\u66F4\u65B0\uFF1A</p><ol><li>\u521B\u5EFA\u4E3B\u9898\u5BF9\u8C61</li><li>\u6DFB\u52A0\u89C2\u5BDF\u8005</li><li>\u901A\u77E5\u89C2\u5BDF\u8005</li></ol><p><img src="'+h+`" alt=""></p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">initState</span> <span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_watchers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">initProps</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">initMethods</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch <span class="token operator">&amp;&amp;</span> opts<span class="token punctuation">.</span>watch <span class="token operator">!==</span> nativeWatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">function</span> <span class="token function">initData</span> <span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    data <span class="token operator">=</span> vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
      <span class="token operator">?</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token operator">:</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;data functions should return an object:\\n&#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#39;</span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// proxy data on instance</span>
    <span class="token keyword">var</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">var</span> methods <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>methods<span class="token punctuation">;</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span><span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; has already been defined as a data property.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&quot;The data property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already declared as a prop. &quot;</span> <span class="token operator">+</span>
          <span class="token string">&quot;Use prop default value instead.&quot;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&quot;_data&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// observe data</span>
    <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token comment">/* \u4F9D\u8D56dep */</span>

  <span class="token keyword">var</span> uid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * A dep is an observable that can have multiple
   * directives subscribing to it.
   */</span>
  <span class="token keyword">var</span> <span class="token function-variable function">Dep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Dep</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> uid<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addSub</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">addSub</span> <span class="token punctuation">(</span><span class="token parameter">sub</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">removeSub</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">removeSub</span> <span class="token punctuation">(</span><span class="token parameter">sub</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">,</span> sub<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">depend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">notify</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// stabilize the subscriber list first</span>
    <span class="token keyword">var</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// subs aren&#39;t sorted in scheduler if not running async</span>
      <span class="token comment">// we need to sort them now to make sure they fire in correct</span>
      <span class="token comment">// order</span>
      subs<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// The current target watcher being evaluated.</span>
  <span class="token comment">// This is globally unique because only one watcher</span>
  <span class="token comment">// can be evaluated at a time.</span>
  Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> targetStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">pushTarget</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    targetStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">popTarget</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    targetStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> targetStack<span class="token punctuation">[</span>targetStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Observer class that is attached to each observed
   * object. Once attached, the observer converts the target
   * object&#39;s property keys into getter/setters that
   * collect dependencies and dispatch updates.
   */</span>
  <span class="token keyword">var</span> <span class="token function-variable function">Observer</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Observer</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">def</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">protoAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">copyAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">,</span> arrayKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Walk through all properties and convert them into
   * getter/setters. This method should only be called when
   * value type is Object.
   */</span>
  <span class="token class-name">Observer</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">walk</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineReactive$$1</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Observe a list of Array items.
   */</span>
  <span class="token class-name">Observer</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">observeArray</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">observeArray</span> <span class="token punctuation">(</span><span class="token parameter">items</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// helpers</span>

  <span class="token doc-comment comment">/**
   * Augment a target Object or Array by intercepting
   * the prototype chain using __proto__
   */</span>
  <span class="token keyword">function</span> <span class="token function">protoAugment</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* eslint-disable no-proto */</span>
    target<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token comment">/* eslint-enable no-proto */</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Augment a target Object or Array by defining
   * hidden properties.
   */</span>
  <span class="token comment">/* istanbul ignore next */</span>
  <span class="token keyword">function</span> <span class="token function">copyAugment</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> src<span class="token punctuation">,</span> keys</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">def</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> src<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Attempt to create an observer instance for a value,
   * returns the new observer if successfully observed,
   * or the existing observer if the value already has one.
   */</span>
  <span class="token keyword">function</span> <span class="token function">observe</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> asRootData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> value <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> ob<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>__ob__ <span class="token keyword">instanceof</span> <span class="token class-name">Observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ob <span class="token operator">=</span> value<span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
      shouldObserve <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span>value<span class="token punctuation">.</span>_isVue
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>asRootData <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ob<span class="token punctuation">.</span>vmCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ob
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Define a reactive property on an Object.
   */</span>
  <span class="token keyword">function</span> <span class="token function">defineReactive$$1</span> <span class="token punctuation">(</span>
    <span class="token parameter">obj<span class="token punctuation">,</span>
    key<span class="token punctuation">,</span>
    val<span class="token punctuation">,</span>
    customSetter<span class="token punctuation">,</span>
    shallow</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> property <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>configurable <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// cater for pre-defined getter/setters</span>
    <span class="token keyword">var</span> getter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
    <span class="token keyword">var</span> setter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>set<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>getter <span class="token operator">||</span> setter<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> value
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
        <span class="token comment">/* eslint-disable no-self-compare */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">/* eslint-enable no-self-compare */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// #7981: for accessor properties without setter</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token comment">/*  */</span>

<span class="token comment">// watcher\u8C03\u7528</span>
  <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> updateComponent<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">before</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">before</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeUpdate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* isRenderWatcher */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> uid$2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * A watcher parses an expression, collects dependencies,
   * and fires callback when the expression value changes.
   * This is used for both the $watch() api and directives.
   */</span>
  <span class="token keyword">var</span> <span class="token function-variable function">Watcher</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Watcher</span> <span class="token punctuation">(</span>
    <span class="token parameter">vm<span class="token punctuation">,</span>
    expOrFn<span class="token punctuation">,</span>
    cb<span class="token punctuation">,</span>
    options<span class="token punctuation">,</span>
    isRenderWatcher</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRenderWatcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// options</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>deep<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>sync<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>before <span class="token operator">=</span> options<span class="token punctuation">.</span>before<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token operator">++</span>uid$2<span class="token punctuation">;</span> <span class="token comment">// uid for batching</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">;</span> <span class="token comment">// for lazy watchers</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>expression <span class="token operator">=</span> expOrFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// parse expression for getter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> noop<span class="token punctuation">;</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Failed watching path: \\&quot;&quot;</span> <span class="token operator">+</span> expOrFn <span class="token operator">+</span> <span class="token string">&quot;\\&quot; &quot;</span> <span class="token operator">+</span>
          <span class="token string">&#39;Watcher only accepts simple dot-delimited paths. &#39;</span> <span class="token operator">+</span>
          <span class="token string">&#39;For full control, use a function instead.&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy
      <span class="token operator">?</span> <span class="token keyword">undefined</span>
      <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Evaluate the getter, and re-collect dependencies.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value<span class="token punctuation">;</span>
    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;getter for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// &quot;touch&quot; every property so they are all tracked as</span>
      <span class="token comment">// dependencies for deep watching</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Add a dependency to this directive.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addDep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">addDep</span> <span class="token punctuation">(</span><span class="token parameter">dep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Clean up for dependency collection.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">cleanupDeps</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">cleanupDeps</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> dep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>dep<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">removeSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    tmp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Scheduler job interface.
   * Will be called by the scheduler.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
        <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
        <span class="token comment">// when the value is the same, because the value may</span>
        <span class="token comment">// have mutated.</span>
        <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deep
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// set new value</span>
        <span class="token keyword">var</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;callback for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Evaluate the value of the watcher.
   * This only gets called for lazy watchers.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">evaluate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">evaluate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Depend on all deps collected by this watcher.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">depend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Remove self from all dependencies&#39; subscriber list.
   */</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">teardown</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">teardown</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// remove self from vm&#39;s watcher list</span>
      <span class="token comment">// this is a somewhat expensive operation so we skip it</span>
      <span class="token comment">// if the vm is being destroyed.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">.</span>_isBeingDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">removeSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

 <span class="token doc-comment comment">/**
   * Push a watcher into the watcher queue.
   * Jobs with duplicate IDs will be skipped unless it&#39;s
   * pushed when the queue is being flushed.
   */</span>
  <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter">watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// if already flushing, splice the watcher based on its id</span>
        <span class="token comment">// if already past its id, it will be run next immediately.</span>
        <span class="token keyword">var</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          i<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// queue the flush</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        waiting <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token function">nextTick</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    currentFlushTimestamp <span class="token operator">=</span> <span class="token function">getNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    flushing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> watcher<span class="token punctuation">,</span> id<span class="token punctuation">;</span>

    <span class="token comment">// Sort queue before flush.</span>
    <span class="token comment">// This ensures that:</span>
    <span class="token comment">// 1. Components are updated from parent to child. (because parent is always</span>
    <span class="token comment">//    created before the child)</span>
    <span class="token comment">// 2. A component&#39;s user watchers are run before its render watcher (because</span>
    <span class="token comment">//    user watchers are created before the render watcher)</span>
    <span class="token comment">// 3. If a component is destroyed during a parent component&#39;s watcher run,</span>
    <span class="token comment">//    its watchers can be skipped.</span>
    queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// do not cache length because more watchers might be pushed</span>
    <span class="token comment">// as we run existing watchers</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher <span class="token operator">=</span> queue<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>before<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
      has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      watcher<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// in dev build, check and stop circular updates.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token constant">MAX_UPDATE_COUNT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&#39;You may have an infinite update loop &#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>
              watcher<span class="token punctuation">.</span>user
                <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token string">&quot;in watcher with expression \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token operator">:</span> <span class="token string">&quot;in a component render function.&quot;</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
            watcher<span class="token punctuation">.</span>vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// keep copies of post queues before resetting state</span>
    <span class="token keyword">var</span> activatedQueue <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> updatedQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">resetSchedulerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// call component updated and activated hooks</span>
    <span class="token function">callActivatedHooks</span><span class="token punctuation">(</span>activatedQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">callUpdatedHooks</span><span class="token punctuation">(</span>updatedQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// devtool hook</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>devtools <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>devtools<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      devtools<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;flush&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br><span class="line-number">445</span><br><span class="line-number">446</span><br><span class="line-number">447</span><br><span class="line-number">448</span><br><span class="line-number">449</span><br><span class="line-number">450</span><br><span class="line-number">451</span><br><span class="line-number">452</span><br><span class="line-number">453</span><br><span class="line-number">454</span><br><span class="line-number">455</span><br><span class="line-number">456</span><br><span class="line-number">457</span><br><span class="line-number">458</span><br><span class="line-number">459</span><br><span class="line-number">460</span><br><span class="line-number">461</span><br><span class="line-number">462</span><br><span class="line-number">463</span><br><span class="line-number">464</span><br><span class="line-number">465</span><br><span class="line-number">466</span><br><span class="line-number">467</span><br><span class="line-number">468</span><br><span class="line-number">469</span><br><span class="line-number">470</span><br><span class="line-number">471</span><br><span class="line-number">472</span><br><span class="line-number">473</span><br><span class="line-number">474</span><br><span class="line-number">475</span><br><span class="line-number">476</span><br><span class="line-number">477</span><br><span class="line-number">478</span><br><span class="line-number">479</span><br><span class="line-number">480</span><br><span class="line-number">481</span><br><span class="line-number">482</span><br><span class="line-number">483</span><br><span class="line-number">484</span><br><span class="line-number">485</span><br><span class="line-number">486</span><br><span class="line-number">487</span><br><span class="line-number">488</span><br><span class="line-number">489</span><br><span class="line-number">490</span><br><span class="line-number">491</span><br><span class="line-number">492</span><br><span class="line-number">493</span><br><span class="line-number">494</span><br><span class="line-number">495</span><br><span class="line-number">496</span><br><span class="line-number">497</span><br><span class="line-number">498</span><br><span class="line-number">499</span><br><span class="line-number">500</span><br><span class="line-number">501</span><br><span class="line-number">502</span><br><span class="line-number">503</span><br><span class="line-number">504</span><br><span class="line-number">505</span><br><span class="line-number">506</span><br><span class="line-number">507</span><br><span class="line-number">508</span><br><span class="line-number">509</span><br><span class="line-number">510</span><br><span class="line-number">511</span><br><span class="line-number">512</span><br><span class="line-number">513</span><br><span class="line-number">514</span><br><span class="line-number">515</span><br><span class="line-number">516</span><br><span class="line-number">517</span><br><span class="line-number">518</span><br><span class="line-number">519</span><br><span class="line-number">520</span><br><span class="line-number">521</span><br><span class="line-number">522</span><br><span class="line-number">523</span><br><span class="line-number">524</span><br><span class="line-number">525</span><br><span class="line-number">526</span><br><span class="line-number">527</span><br><span class="line-number">528</span><br><span class="line-number">529</span><br><span class="line-number">530</span><br><span class="line-number">531</span><br><span class="line-number">532</span><br><span class="line-number">533</span><br><span class="line-number">534</span><br><span class="line-number">535</span><br><span class="line-number">536</span><br><span class="line-number">537</span><br><span class="line-number">538</span><br><span class="line-number">539</span><br><span class="line-number">540</span><br><span class="line-number">541</span><br><span class="line-number">542</span><br><span class="line-number">543</span><br><span class="line-number">544</span><br><span class="line-number">545</span><br><span class="line-number">546</span><br><span class="line-number">547</span><br><span class="line-number">548</span><br><span class="line-number">549</span><br><span class="line-number">550</span><br><span class="line-number">551</span><br><span class="line-number">552</span><br><span class="line-number">553</span><br><span class="line-number">554</span><br><span class="line-number">555</span><br><span class="line-number">556</span><br><span class="line-number">557</span><br><span class="line-number">558</span><br><span class="line-number">559</span><br><span class="line-number">560</span><br><span class="line-number">561</span><br><span class="line-number">562</span><br><span class="line-number">563</span><br><span class="line-number">564</span><br><span class="line-number">565</span><br><span class="line-number">566</span><br><span class="line-number">567</span><br><span class="line-number">568</span><br><span class="line-number">569</span><br><span class="line-number">570</span><br><span class="line-number">571</span><br><span class="line-number">572</span><br><span class="line-number">573</span><br><span class="line-number">574</span><br><span class="line-number">575</span><br><span class="line-number">576</span><br><span class="line-number">577</span><br><span class="line-number">578</span><br><span class="line-number">579</span><br></div></div></details><h5 id="\u5982\u4F55\u5B9E\u73B0this-key-\u8BBF\u95EE\u5230vm-data-key\u7684" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5B9E\u73B0this-key-\u8BBF\u95EE\u5230vm-data-key\u7684" aria-hidden="true">#</a> \u5982\u4F55\u5B9E\u73B0this.key \u8BBF\u95EE\u5230vm._data.key\u7684</h5><p><code>initData</code>\u521D\u59CB\u5316data\u51FD\u6570\u4E2D\u8C03\u7528<code>proxy(vm, &quot;_data&quot;, key)</code>;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">noop</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> sharedPropertyDefinition <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> noop<span class="token punctuation">,</span>
    <span class="token literal-property property">set</span><span class="token operator">:</span> noop
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">proxy</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> sourceKey<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">proxyGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">[</span>sourceKey<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">proxySetter</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">[</span>sourceKey<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,7),Gn={id:"v-model",tabindex:"-1"},Hn=n("a",{class:"header-anchor",href:"#v-model","aria-hidden":"true"},"#",-1),Qn=s(),Kn={href:"https://segmentfault.com/a/1190000015848976",target:"_blank",rel:"noopener noreferrer"},Yn=s("v-model"),Jn=o(`<p>\u5C31\u662F<code>&lt;input type=&quot;text&quot; v-model=&quot;message&quot;&gt;</code>\u53D8\u6210\u4E86</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>if($event.target.composing)return;message = $event.target.value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>event.target.composing</code>\u7528\u4E8E\u5224\u65AD\u6B64\u6B21input\u4E8B\u4EF6\u662F\u5426\u662F<code>IME</code>\u6784\u6210\u89E6\u53D1\u7684\uFF0C\u5982\u679C\u662F<code>IME</code>\u6784\u6210\uFF0C\u76F4\u63A5<code>return</code>\u3002<code>IME</code> \u662F\u8F93\u5165\u6CD5\u7F16\u8F91\u5668(Input Method Editor) \u7684\u82F1\u6587\u7F29\u5199\uFF0CIME\u6784\u6210\u6307\u6211\u4EEC\u5728\u8F93\u5165\u6587\u5B57\u65F6\uFF0C\u5904\u4E8E\u672A\u786E\u8BA4\u72B6\u6001\u7684\u6587\u5B57\u3002</p><h3 id="template\u662F\u5982\u4F55\u7F16\u8BD1\u6210render-function\u7684" tabindex="-1"><a class="header-anchor" href="#template\u662F\u5982\u4F55\u7F16\u8BD1\u6210render-function\u7684" aria-hidden="true">#</a> template\u662F\u5982\u4F55\u7F16\u8BD1\u6210render function\u7684\uFF1F</h3>`,4),Xn={href:"https://mp.weixin.qq.com/s/uuXB0dj7gKRbn_UivcbwFg",target:"_blank",rel:"noopener noreferrer"},Zn=s("Template\u6A21\u7248\u7F16\u8BD1"),ns=o(`<p>Vue\u63D0\u4F9B\u4E86\u4E24\u4E2A\u7248\u672C\uFF0C\u4E00\u4E2A\u662FRuntime+Compiler\u7248\u672C\u7684\uFF0C\u4E00\u4E2A\u662FRuntime only\u7248\u672C\u7684\u3002Runtime+Compiler\u662F\u5305\u542B\u7F16\u8BD1\u4EE3\u7801\u7684\uFF0C\u53EF\u4EE5\u628A\u7F16\u8BD1\u8FC7\u7A0B\u653E\u5728\u8FD0\u884C\u65F6\u6765\u505A\u3002\u800CRuntime only\u662F\u4E0D\u5305\u542B\u7F16\u8BD1\u4EE3\u7801\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u501F\u52A9webpack\u7684vue-loader\u6765\u628A\u6A21\u7248\u7F16\u8BD1\u6210render\u51FD\u6570\u3002</p><p>\u7F16\u8BD1\u4E3B\u8981\u6709\u4E09\u4E2A\u8FC7\u7A0B\uFF1A</p><ul><li>1.\u89E3\u6790\u6A21\u7248\u5B57\u7B26\u4E32\u751F\u6210AST</li></ul><p>AST\uFF08\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u62BD\u8C61\u8BED\u6CD5\u6811\uFF08abstract syntax tree\u6216\u8005\u7F29\u5199\u4E3AAST\uFF09\uFF0C\u6216\u8005\u8BED\u6CD5\u6811\uFF08syntax tree\uFF09\uFF0C\u662F\u6E90\u4EE3\u7801\u7684\u62BD\u8C61\u8BED\u6CD5\u7ED3\u6784\u7684\u6811\u72B6\u8868\u73B0\u5F62\u5F0F\uFF0C\u8FD9\u91CC\u7279\u6307\u7F16\u7A0B\u8BED\u8A00\u7684\u6E90\u4EE3\u7801\u3002\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> ast <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>parse \u4F1A\u7528\u6B63\u5219\u7B49\u65B9\u5F0F\u89E3\u6790 template\u6A21\u677F\u4E2D\u7684\u6307\u4EE4\u3001class\u3001style\u7B49\u6570\u636E\uFF0C\u5F62\u6210AST\u6811\u3002AST\u662F\u4E00\u79CD\u7528Javascript\u5BF9\u8C61\u7684\u5F62\u5F0F\u6765\u63CF\u8FF0\u6574\u4E2A\u6A21\u7248\uFF0C\u6574\u4E2Aparse\u7684\u8FC7\u7A0B\u5C31\u662F\u5229\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u6765\u987A\u5E8F\u5730\u89E3\u6790\u6A21\u7248\uFF0C\u5F53\u89E3\u6790\u5230\u5F00\u59CB\u6807\u7B7E\uFF0C\u95ED\u5408\u6807\u7B7E\uFF0C\u6587\u672C\u7684\u65F6\u5019\u4F1A\u5206\u522B\u5BF9\u5E94\u6267\u884C\u54CD\u5E94\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u4ECE\u800C\u8FBE\u5230\u6784\u9020AST\u6811\u7684\u76EE\u7684\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in sz<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7ECF\u8FC7\u4E00\u7CFB\u5217\u7684\u6B63\u5219\u89E3\u6790\uFF0C\u4F1A\u5F97\u5230\u7684AST\u5982\u4E0B\uFF1A</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token punctuation">{</span>
    <span class="token comment">/* \u6807\u7B7E\u5C5E\u6027\u7684map\uFF0C\u8BB0\u5F55\u4E86\u6807\u7B7E\u4E0A\u5C5E\u6027 */</span>
    <span class="token string-property property">&#39;attrsMap&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;:class&#39;</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;class&#39;</span><span class="token operator">:</span> <span class="token string">&#39;demo&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;v-if&#39;</span><span class="token operator">:</span> <span class="token string">&#39;isShow&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/* \u89E3\u6790\u5F97\u5230\u7684:class */</span>
    <span class="token string-property property">&#39;classBinding&#39;</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">/* \u6807\u7B7E\u5C5E\u6027v-if */</span>
    <span class="token string-property property">&#39;if&#39;</span><span class="token operator">:</span> <span class="token string">&#39;isShow&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">/* v-if\u7684\u6761\u4EF6 */</span>
    <span class="token string-property property">&#39;ifConditions&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;exp&#39;</span><span class="token operator">:</span> <span class="token string">&#39;isShow&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">/* \u6807\u7B7E\u5C5E\u6027class */</span>
    <span class="token string-property property">&#39;staticClass&#39;</span><span class="token operator">:</span> <span class="token string">&#39;demo&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">/* \u6807\u7B7E\u7684tag */</span>
    <span class="token string-property property">&#39;tag&#39;</span><span class="token operator">:</span> <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">/* \u5B50\u6807\u7B7E\u6570\u7EC4 */</span>
    <span class="token string-property property">&#39;children&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;attrsMap&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&#39;v-for&#39;</span><span class="token operator">:</span> <span class="token string">&quot;item in sz&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">/* for\u5FAA\u73AF\u7684\u53C2\u6570 */</span>
            <span class="token string-property property">&#39;alias&#39;</span><span class="token operator">:</span> <span class="token string">&quot;item&quot;</span><span class="token punctuation">,</span>
            <span class="token comment">/* for\u5FAA\u73AF\u7684\u5BF9\u8C61 */</span>
            <span class="token string-property property">&#39;for&#39;</span><span class="token operator">:</span> <span class="token string">&#39;sz&#39;</span><span class="token punctuation">,</span>
            <span class="token comment">/* for\u5FAA\u73AF\u662F\u5426\u5DF2\u7ECF\u88AB\u5904\u7406\u7684\u6807\u8BB0\u4F4D */</span>
            <span class="token string-property property">&#39;forProcessed&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&#39;tag&#39;</span><span class="token operator">:</span> <span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&#39;children&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">/* \u8868\u8FBE\u5F0F\uFF0C_s\u662F\u4E00\u4E2A\u8F6C\u5B57\u7B26\u4E32\u7684\u51FD\u6570 */</span>
                    <span class="token string-property property">&#39;expression&#39;</span><span class="token operator">:</span> <span class="token string">&#39;_s(item)&#39;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&#39;text&#39;</span><span class="token operator">:</span> <span class="token string">&#39;{{item}}&#39;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div></details><p>\u5F53\u6784\u9020\u5B8CAST\u4E4B\u540E\uFF0C\u4E0B\u9762\u5C31\u662F\u4F18\u5316\u8FD9\u9897AST\u6811\u3002</p><ul><li>2.optimize\uFF1A\u4F18\u5316AST\u8BED\u6CD5\u6811</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">optimize</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E3A\u4EC0\u4E48\u6B64\u5904\u4F1A\u6709\u4F18\u5316\u8FC7\u7A0B\uFF1FVue\u662F\u6570\u636E\u9A71\u52A8\uFF0C\u662F\u54CD\u5E94\u5F0F\u7684\uFF0C\u4F46\u662Ftemplate\u6A21\u7248\u4E2D\u5E76\u4E0D\u662F\u6240\u6709\u7684\u6570\u636E\u90FD\u662F\u54CD\u5E94\u5F0F\u7684\uFF0C\u4E5F\u6709\u8BB8\u591A\u6570\u636E\u662F\u521D\u59CB\u5316\u6E32\u67D3\u4E4B\u540E\u5C31\u4E0D\u4F1A\u6709\u53D8\u5316\u7684\uFF0C\u90A3\u4E48\u8FD9\u90E8\u5206\u6570\u636E\u5BF9\u5E94\u7684DOM\u4E5F\u4E0D\u4F1A\u53D1\u751F\u53D8\u5316\u3002\u540E\u9762\u6709\u4E00\u4E2A update \u66F4\u65B0\u754C\u9762\u7684\u8FC7\u7A0B\uFF0C\u5728\u8FD9\u5F53\u4E2D\u4F1A\u6709\u4E00\u4E2A patch \u7684\u8FC7\u7A0B\uFF0C diff \u7B97\u6CD5\u4F1A\u76F4\u63A5\u8DF3\u8FC7\u9759\u6001\u8282\u70B9\uFF0C\u4ECE\u800C\u51CF\u5C11\u4E86\u6BD4\u8F83\u7684\u8FC7\u7A0B\uFF0C\u4F18\u5316\u4E86 patch \u7684\u6027\u80FD\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token doc-comment comment">/**
   * Goal of the optimizer: walk the generated template AST tree
   * and detect sub-trees that are purely static, i.e. parts of
   * the DOM that never needs to change.
   *
   * Once we detect these sub-trees, we can:
   *
   * 1. Hoist them into constants, so that we no longer need to
   *    create fresh nodes for them on each re-render;
   * 2. Completely skip them in the patching process.
   */</span>
  <span class="token keyword">function</span> <span class="token function">optimize</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
    isStaticKey <span class="token operator">=</span> <span class="token function">genStaticKeysCached</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>staticKeys <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    isPlatformReservedTag <span class="token operator">=</span> options<span class="token punctuation">.</span>isReservedTag <span class="token operator">||</span> no<span class="token punctuation">;</span>
    <span class="token comment">// first pass: mark all non-static nodes.</span>
    <span class="token function">markStatic$1</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// second pass: mark static roots.</span>
    <span class="token function">markStaticRoots</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0Coptimize\u5B9E\u9645\u4E0A\u5C31\u505A\u4E862\u4EF6\u4E8B\u60C5\uFF0C\u4E00\u4E2A\u662F\u8C03\u7528markStatic()\u6765\u6807\u8BB0\u9759\u6001\u8282\u70B9\uFF0C\u53E6\u4E00\u4E2A\u662F\u8C03\u7528markStaticRoots()\u6765\u6807\u8BB0\u9759\u6001\u6839\u8282\u70B9\u3002</p><ul><li>3.code generate\uFF1A\u5C06\u4F18\u5316\u540E\u7684AST\u6811\u8F6C\u6362\u6210\u53EF\u6267\u884C\u7684\u4EE3\u7801(\u4E3B\u8981\u529F\u80FD\u5C31\u662F\u6839\u636E AST \u7ED3\u6784\u62FC\u63A5\u751F\u6210 render \u51FD\u6570\u7684\u5B57\u7B26\u4E32\u3002\u901A\u8FC7<code>new Function</code>\u751F\u6210\u53EF\u8FD0\u884C\u7684<code>render function</code>)\u3002 <code>generate</code>\u5C31\u662F\u5C06<code>AST</code>\u8F6C\u5316\u6210<code>render funtion</code>\u5B57\u7B26\u4E32\u7684\u8FC7\u7A0B\uFF0C\u5F97\u5230\u7ED3\u679C\u662F<code>render</code>\u7684\u5B57\u7B26\u4E32\u4EE5\u53CA<code>staticRenderFns</code>\u5B57\u7B26\u4E32\u3002\u6700\u540Erender\u51FD\u6570\u5728\u6267\u884C\u65F6\u5C31\u4F1A\u628A<code>_c</code>\u548C<code>_l</code>\u7B49\u66FF\u6362\u6210\u771F\u6B63\u7684\u51FD\u6570\uFF0C\u4ECE\u800C\u8FD4\u56DE\u4E00\u4E2A<code>vnode</code>\uFF0C\u518D\u7EE7\u7EED\u5B8C\u6210<code>patch</code>\uFF0C\u63D2\u5165<code>\u771F\u5B9Edom\u6811</code>\u5B8C\u6210\u6E32\u67D3\u3002</li></ul><details class="custom-container details"><summary>render function\u4E2D\u6709with\u7684\u539F\u56E0</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">with</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">on</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;click&quot;</span><span class="token operator">:</span>change<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span>     <span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>vue\u5E76\u6CA1\u6709\u5BF9\u6A21\u677F\u4E2D\u7684javascript\u8868\u8FBE\u5F0F\u8FDB\u884Cast\u8BED\u6CD5\u5206\u6790\uFF0C\u5982\u679C\u8981\u79FB\u9664with\uFF0C\u5C31\u9700\u8981\u5BF9javascript\u8868\u8FBE\u5F0F\u8FDB\u884Cast\u8BED\u6CD5\u5206\u6790\uFF0C\u5E76\u4E14\u8FD8\u9700\u8981\u4E00\u4E2A\u4E13\u95E8\u7684\u89E3\u91CA\u5668\u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u89E3\u91CA\uFF0C\u8FD9\u6837\u5C31\u4F1A\u5BFC\u81F4\u5B58\u5728\u4E24\u4E2A\u5E76\u884C\u7684\u89E3\u6790\u5668\uFF0C\u8FD9\u6837\u7EF4\u62A4\u6210\u672C\u9AD8\uFF0C\u8FD8\u53EF\u80FD\u4F1A\u6709\u6F5C\u5728\u7684bug\u98CE\u9669\u3002\u6240\u4EE5\u5462\uFF0C\u4F5C\u8005\u5E76\u6CA1\u6709\u60F3\u505A\u8FD9\u4E2A\u4E8B\u60C5\uFF0C\u9EBB\u70E6\u8D39\u529B\u4E0D\u8BA8\u597D</p></details><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">var</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>template\u6A21\u7248\u7ECF\u5386\u8FC7parse-&gt;optimize-&gt;code generate\u4E09\u4E2A\u8FC7\u7A0B\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u5F97\u5230render function\u51FD\u6570\u4E86\u3002</strong></p>`,20),ss={href:"https://juejin.cn/post/6844903664998416392",target:"_blank",rel:"noopener noreferrer"},as=s("Vue.js\u6E90\u7801\u89D2\u5EA6\uFF1A\u5256\u6790\u6A21\u7248\u548C\u6570\u636E\u6E32\u67D3\u6210\u6700\u7EC8\u7684DOM\u7684\u8FC7\u7A0B"),ps=o(`<details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// \`createCompilerCreator\` allows creating compilers that use alternative</span>
  <span class="token comment">// parser/optimizer/codegen, e.g the SSR optimizing compiler.</span>
  <span class="token comment">// Here we just export a default compiler using the default parts.</span>
  <span class="token keyword">var</span> createCompiler <span class="token operator">=</span> <span class="token function">createCompilerCreator</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">baseCompile</span> <span class="token punctuation">(</span>
    <span class="token parameter">template<span class="token punctuation">,</span>
    options</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> ast <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>optimize <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">optimize</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">ast</span><span class="token operator">:</span> ast<span class="token punctuation">,</span>
      <span class="token literal-property property">render</span><span class="token operator">:</span> code<span class="token punctuation">.</span>render<span class="token punctuation">,</span>
      <span class="token literal-property property">staticRenderFns</span><span class="token operator">:</span> code<span class="token punctuation">.</span>staticRenderFns
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    

  <span class="token keyword">function</span> <span class="token function">createCompilerCreator</span> <span class="token punctuation">(</span><span class="token parameter">baseCompile</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">createCompiler</span> <span class="token punctuation">(</span><span class="token parameter">baseOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">compile</span> <span class="token punctuation">(</span>
        <span class="token parameter">template<span class="token punctuation">,</span>
        options</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> finalOptions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>baseOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> errors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> tips <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> <span class="token function-variable function">warn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> range<span class="token punctuation">,</span> tip</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">(</span>tip <span class="token operator">?</span> tips <span class="token operator">:</span> errors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>outputSourceRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// $flow-disable-line</span>
            <span class="token keyword">var</span> leadingSpaceLength <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

            <span class="token function-variable function">warn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> range<span class="token punctuation">,</span> tip</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> msg <span class="token punctuation">}</span><span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>range<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>range<span class="token punctuation">.</span>start <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  data<span class="token punctuation">.</span>start <span class="token operator">=</span> range<span class="token punctuation">.</span>start <span class="token operator">+</span> leadingSpaceLength<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>range<span class="token punctuation">.</span>end <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  data<span class="token punctuation">.</span>end <span class="token operator">=</span> range<span class="token punctuation">.</span>end <span class="token operator">+</span> leadingSpaceLength<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
              <span class="token punctuation">(</span>tip <span class="token operator">?</span> tips <span class="token operator">:</span> errors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// merge custom modules</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            finalOptions<span class="token punctuation">.</span>modules <span class="token operator">=</span>
              <span class="token punctuation">(</span>baseOptions<span class="token punctuation">.</span>modules <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>modules<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// merge custom directives</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>directives<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            finalOptions<span class="token punctuation">.</span>directives <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span>
              Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>baseOptions<span class="token punctuation">.</span>directives <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              options<span class="token punctuation">.</span>directives
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// copy other options</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token string">&#39;modules&#39;</span> <span class="token operator">&amp;&amp;</span> key <span class="token operator">!==</span> <span class="token string">&#39;directives&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              finalOptions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> options<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        finalOptions<span class="token punctuation">.</span>warn <span class="token operator">=</span> warn<span class="token punctuation">;</span>

        <span class="token keyword">var</span> compiled <span class="token operator">=</span> <span class="token function">baseCompile</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> finalOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">{</span>
          <span class="token function">detectErrors</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>ast<span class="token punctuation">,</span> warn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        compiled<span class="token punctuation">.</span>errors <span class="token operator">=</span> errors<span class="token punctuation">;</span>
        compiled<span class="token punctuation">.</span>tips <span class="token operator">=</span> tips<span class="token punctuation">;</span>
        <span class="token keyword">return</span> compiled
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">compile</span><span class="token operator">:</span> compile<span class="token punctuation">,</span>
        <span class="token literal-property property">compileToFunctions</span><span class="token operator">:</span> <span class="token function">createCompileToFunctionFn</span><span class="token punctuation">(</span>compile<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div></details><h3 id="this-set-\u4E0Ethis-del" tabindex="-1"><a class="header-anchor" href="#this-set-\u4E0Ethis-del" aria-hidden="true">#</a> this.$set() \u4E0Ethis.$del</h3><ul><li>\u5224\u65AD\u662F\u6570\u7EC4\u5219\u8C03\u7528splice\u65B9\u6CD5\u89E6\u53D1\u54CD\u5E94\u5F0F\u66F4\u65B0</li><li>\u5BF9\u8C61\u5219\u8C03\u7528<code>defineReactive$$1</code>\u8BBE\u7F6Egetter\u548Csetter,\u5E76\u901A\u8FC7target\u83B7\u53D6\u521D\u59CB\u5316\u65F6\u7684<code>Observer</code>\u53CA<code>__ob__</code>\u5BF9\u8C61\uFF0C\u8C03\u7528<code>ob.dep.notify()</code>\u901A\u77E5\u66F4\u65B0\u3002</li></ul><p><strong>\u6CE8\u610F\u8FD9\u4E2A<code>__ob__</code>\u4E2Ddep\u600E\u4E48\u6DFB\u52A0\u7684</strong></p><p><code>observe(data)</code>\u65B9\u6CD5\u4E2D<code>new Observer(value)</code>(value\u53CAdata), new\u7684\u65F6\u5019\u8FD9\u91CC\u4E5F<code>new Dep()</code>\uFF0C\u8FD9\u4E2A\u548C<code>defineReactive$$1</code>\u4E2D\u5EFA\u7684dep\u4E0D\u4E00\u6837\uFF0C\u6267\u884C<code> def(value, &#39;__ob__&#39;, this);</code>\u628A<code>__ob__</code>\u5B9A\u4E49\u6210\u5C5E\u6027\u7ED9\u8FD9\u4E2A\u5BF9\u8C61\u548C\u6570\u7EC4\uFF0C \u800C\u8FD9\u4E2A<code>__ob__</code>\u4E2D\u7684dep\u600E\u4E48\u6DFB\u52A0watcher\u7684\uFF1F\u5728<code>defineReactive$$1</code>\u8C03\u7528<code>var childOb = !shallow &amp;&amp; observe(val);</code>\u83B7\u53D6ob\uFF0C\u7136\u540E\u5728getter\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// !!!!\u8FD9\u91CC</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> value
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token doc-comment comment">/**
   * Set a property on an object. Adds the new property and
   * triggers change notification if the property doesn&#39;t
   * already exist.
   */</span>
  <span class="token keyword">function</span> <span class="token function">set</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPrimitive</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot set reactive property on undefined, null, or primitive value: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isValidArrayIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">.</span>length <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      target<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> target <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> ob <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>_isVue <span class="token operator">||</span> <span class="token punctuation">(</span>ob <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">.</span>vmCount<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Avoid adding reactive properties to a Vue instance or its root $data &#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;at runtime - declare it upfront in the data option.&#39;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token function">defineReactive$$1</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span>value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> val
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Delete a property and trigger change if necessary.
   */</span>
  <span class="token keyword">function</span> <span class="token function">del</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPrimitive</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot delete reactive property on undefined, null, or primitive value: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isValidArrayIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> ob <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>_isVue <span class="token operator">||</span> <span class="token punctuation">(</span>ob <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">.</span>vmCount<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Avoid deleting properties on a Vue instance or its root $data &#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;- just set it to null.&#39;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">delete</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Define a reactive property on an Object.
   */</span>
  <span class="token keyword">function</span> <span class="token function">defineReactive$$1</span> <span class="token punctuation">(</span>
    <span class="token parameter">obj<span class="token punctuation">,</span>
    key<span class="token punctuation">,</span>
    val<span class="token punctuation">,</span>
    customSetter<span class="token punctuation">,</span>
    shallow</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> property <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>configurable <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// cater for pre-defined getter/setters</span>
    <span class="token keyword">var</span> getter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
    <span class="token keyword">var</span> setter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>set<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>getter <span class="token operator">||</span> setter<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> value
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
        <span class="token comment">/* eslint-disable no-self-compare */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">/* eslint-enable no-self-compare */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// #7981: for accessor properties without setter</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br></div></div></details><h3 id="\u6570\u7EC4\u54CD\u5E94\u5F0F\u53D8\u5316\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u54CD\u5E94\u5F0F\u53D8\u5316\u539F\u7406" aria-hidden="true">#</a> \u6570\u7EC4\u54CD\u5E94\u5F0F\u53D8\u5316\u539F\u7406</h3><p>\u4E8B\u5B9E\u4E0A\uFF0C<code>Object.defineProperty</code> \u672C\u8EAB\u662F\u53EF\u4EE5\u76D1\u63A7\u5230\u6570\u7EC4\u4E0B\u6807\u7684\u53D8\u5316\u7684\uFF0C\u53EA\u662F\u5728 Vue \u7684\u5B9E\u73B0\u4E2D\uFF0C\u4ECE\u6027\u80FD / \u4F53\u9A8C\u7684\u6027\u4EF7\u6BD4\u8003\u8651\uFF0C\u653E\u5F03\u4E86\u8FD9\u4E2A\u7279\u6027\u3002 \u6570\u7EC4\u5C31\u662F\u4E2A\u5BF9\u8C61\u7684\u5C01\u88C5\uFF0Cindex\u5C31\u662Fkey\uFF0C\u5982\u679C\u52AB\u6301\u4E86get\u548Cset,\u8C03\u7528<code>arr[0]</code>\u548C<code>arr[0] = 1</code>\u662F\u4F1A\u89E6\u53D1getter\u548Csetter\u7684\u3002\u4F46\u662F\u5BF9\u4E8E\u65B0push\u7684\u503C\uFF0C\u7C7B\u4F3C\u4E8Eobject\u4E4B\u524D\u6CA1\u6709\u5B9A\u4E49key\uFF0C\u662F\u6CA1\u6709\u52AB\u6301\u5230\u7684\u3002 \u800C\u4E14\u6BD4\u5982unshift\u65B9\u6CD5\uFF0C\u6570\u7EC4\u4F1A\u4F9D\u6B21\u8BFB\u53D6\u5E76\u590D\u5236\u5230\u4E0B\u4E00\u4F4D\uFF0C\u6240\u4EE5\u4F1A\u591A\u6B21\u89E6\u53D1getter\u548Csetter</p><blockquote><p>\u4F7F\u7528<code>Object.create</code>\u590D\u5236Array\u7684\u539F\u578B\u5BF9\u8C61prototype\u5F97\u5230arrayMethods, \u904D\u5386\u4E00\u4E2A7\u4E2A\u6570\u7EC4\u65B9\u6CD5\u7684\u6570\u7EC4\uFF0C\u5305\u62EC<code>push,pop,shift,unshift,splice,sort\uFF0Creverse</code> \u8FD9\u4E9B\u80FD\u6539\u53D8\u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u4F7F\u7528\u51FD\u6570\u52AB\u6301\uFF0C\u518D\u904D\u5386\u4F7F\u7528<code>Object.defineProperty</code>\u91CD\u5199\u590D\u5236\u7684\u539F\u578B\u5BF9\u8C61arrayMethods\u5BF9\u5E94\u65B9\u6CD5\u7684value,\u5373\u91CD\u5199\u65B9\u6CD5\uFF0C\u4F7F\u7528Array.prototype \u7684\u539F\u51FD\u6570\u65B9\u6CD5<code>apply</code>\u83B7\u53D6\u5E76\u8FD4\u56DE\u7ED3\u679C\uFF0C\u540C\u65F6\u901A\u8FC7<code>var ob = this.__ ob__</code>\u83B7\u53D6Observer,\u8C03\u7528<code>ob.dep.notify()</code>\uFF0C\u901A\u77E5\u66F4\u65B0\uFF1B \u5728Observe\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u5224\u65AD\u5982\u679Cdata\u7684value\u5982\u679C\u662F\u6570\u7EC4\uFF0C1\u3001\u5982\u679C\u8BE5\u6570\u7EC4\u6709<code>__proto__</code>\u5C5E\u6027\uFF0C\u5219\u76F4\u63A5\u628AarrayMethods\u8D4B\u503C\u7ED9<code>__proto__</code> 2\u3001\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u8C03\u7528copyAugment\uFF0C\u904D\u5386arrayMethods\u628A\u65B9\u6CD5\u76F4\u63A5\u8D4B\u503C\u7ED9\u8BE5\u6570\u7EC4 3\u3001\u904D\u5386\u8BE5\u6570\u7EC4\uFF0C\u9012\u5F52\u8C03\u7528<code>observe</code>\u65B9\u6CD5<code>new Observer</code>\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</p></blockquote><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
  <span class="token doc-comment comment">/**
   * Define a property.
   */</span>
  <span class="token keyword">function</span> <span class="token function">def</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> enumerable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> val<span class="token punctuation">,</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>enumerable<span class="token punctuation">,</span>
      <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> arrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token keyword">var</span> arrayMethods <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>arrayProto<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> methodsToPatch <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;splice&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;sort&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;reverse&#39;</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Intercept mutating methods and emit events
   */</span>
  methodsToPatch<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// cache original method</span>
    <span class="token keyword">var</span> original <span class="token operator">=</span> arrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">def</span><span class="token punctuation">(</span>arrayMethods<span class="token punctuation">,</span> method<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">mutator</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span> len<span class="token operator">--</span> <span class="token punctuation">)</span> args<span class="token punctuation">[</span> len <span class="token punctuation">]</span> <span class="token operator">=</span> arguments<span class="token punctuation">[</span> len <span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">original</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> ob <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
      <span class="token keyword">var</span> inserted<span class="token punctuation">;</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;push&#39;</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token string">&#39;unshift&#39;</span><span class="token operator">:</span>
          inserted <span class="token operator">=</span> args<span class="token punctuation">;</span>
          <span class="token keyword">break</span>
        <span class="token keyword">case</span> <span class="token string">&#39;splice&#39;</span><span class="token operator">:</span>
          inserted <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>inserted<span class="token punctuation">)</span> <span class="token punctuation">{</span> ob<span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>inserted<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
      <span class="token comment">// notify change</span>
      ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> result
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  <span class="token keyword">var</span> <span class="token function-variable function">Observer</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Observer</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">def</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6570\u7EC4\u7684\u5904\u7406</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProto<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//   var hasProto = &#39;__proto__&#39; in {};</span>
        <span class="token function">protoAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">copyAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">,</span> arrayKeys<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// var arrayKeys = Object.getOwnPropertyNames(arrayMethods);</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Augment a target Object or Array by intercepting
   * the prototype chain using __proto__
   */</span>
  <span class="token keyword">function</span> <span class="token function">protoAugment</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* eslint-disable no-proto */</span>
    target<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token comment">/* eslint-enable no-proto */</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Augment a target Object or Array by defining
   * hidden properties.
   */</span>
  <span class="token comment">/* istanbul ignore next */</span>
  <span class="token keyword">function</span> <span class="token function">copyAugment</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> src<span class="token punctuation">,</span> keys</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">def</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> src<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div></details>`,11),ts={id:"vue\u4E2D-nexttick\u6E90\u7801\u89E3\u6790",tabindex:"-1"},es=n("a",{class:"header-anchor",href:"#vue\u4E2D-nexttick\u6E90\u7801\u89E3\u6790","aria-hidden":"true"},"#",-1),os=s(),cs={href:"https://juejin.im/post/6844904147804749832",target:"_blank",rel:"noopener noreferrer"},ls=s("Vue\u4E2D$nextTick\u6E90\u7801\u89E3\u6790"),us={href:"https://juejin.cn/post/6891309786290192391",target:"_blank",rel:"noopener noreferrer"},rs=s("\u66F4\u8BE6\u7EC6\u7684\u8BB2\u89E3"),is={href:"https://www.cnblogs.com/WindrunnerMax/p/14429426.html",target:"_blank",rel:"noopener noreferrer"},ks=s("Vue\u4E3A\u4F55\u91C7\u7528\u5F02\u6B65\u6E32\u67D3"),bs=o(`<blockquote><p>Vue \u5728\u66F4\u65B0 DOM \u65F6\u662F\u5F02\u6B65\u6267\u884C\u7684\u3002\u53EA\u8981\u4FA6\u542C\u5230\u6570\u636E\u53D8\u5316\uFF0CVue \u5C06\u5F00\u542F\u4E00\u4E2A\u961F\u5217\uFF0C\u5E76\u7F13\u51B2\u5728\u540C\u4E00\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u53D1\u751F\u7684\u6240\u6709\u6570\u636E\u53D8\u66F4\u3002\u5982\u679C\u540C\u4E00\u4E2A watcher \u88AB\u591A\u6B21\u89E6\u53D1\uFF0C\u53EA\u4F1A\u88AB\u63A8\u5165\u5230\u961F\u5217\u4E2D\u4E00\u6B21\u3002 \u8FD9\u79CD\u5728\u7F13\u51B2\u65F6\u53BB\u9664\u91CD\u590D\u6570\u636E\u5BF9\u4E8E\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u8BA1\u7B97\u548C DOM \u64CD\u4F5C\u662F\u975E\u5E38\u91CD\u8981\u7684\u3002\u7136\u540E\uFF0C\u5728\u4E0B\u4E00\u4E2A\u7684\u4E8B\u4EF6\u5FAA\u73AF\u201Ctick\u201D\u4E2D\uFF0CVue \u5237\u65B0\u961F\u5217\u5E76\u6267\u884C\u5B9E\u9645 (\u5DF2\u53BB\u91CD\u7684) \u5DE5\u4F5C\u3002 Vue \u5728\u5185\u90E8\u5BF9\u5F02\u6B65\u961F\u5217\u5C1D\u8BD5\u4F7F\u7528\u539F\u751F\u7684 Promise.then\u3001MutationObserver \u548C setImmediate\uFF0C\u5982\u679C\u6267\u884C\u73AF\u5883\u4E0D\u652F\u6301\uFF0C\u5219\u4F1A\u91C7\u7528 setTimeout(fn, 0) \u4EE3\u66FF\u3002 vue\u66F4\u65B0Dom\u4E5F\u4F1A\u628A\u66F4\u65B0\u961F\u5217\u6DFB\u52A0\u5230nextTick\u4E2D\u53BB\u6267\u884C</p></blockquote><div class="custom-container tip"><p class="custom-container-title">\u603B\u7ED3\u63CF\u8FF0</p><p>\u4E8B\u4EF6\u5FAA\u73AF\u662F\u5728\u6267\u884C\u6267\u884C\u5B8C\u5B8F\u4EFB\u52A1\u540E\uFF08script\u662F\u7B2C\u4E00\u4E2A\u5B8F\u4EFB\u52A1\uFF09\uFF0C\u6267\u884C\u5B8C\u6240\u6709\u7684\u5FAE\u4EFB\u52A1\uFF0C\u518D\u6267\u884CGUI\u6E32\u67D3\uFF0C\u7136\u540E\u5F00\u542F\u4E8B\u4EF6\u961F\u5217\u4E2D\u7684\u4E0B\u4E00\u4E2A\u5B8F\u4EFB\u52A1\u3002 \u5F53\u6267\u884Cthis.xx = &#39;xx&#39; \u65F6\uFF0C\u80CC\u540E\u66F4\u65B0Dom\u7684\u56DE\u8C03\u4F1A\u52A0\u5230callback\u6570\u7EC4\u4E2D\uFF0C\u5F53\u6267\u884C\u5B8C\u811A\u672C\uFF0C\u4F1A\u6267\u884C\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u8FD9\u65F6\u5C31\u4F1A\u904D\u5386callback\u8FD0\u884C\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>nextTick\u4E2D\u7EF4\u62A4\u4E86\u4E00\u4E2Acallbacks\u961F\u5217\uFF0C\u4E00\u4E2Apending\u9501\uFF0C\u4E00\u4E2AtimerFunc\u3002</p><ul><li>\u8FD9\u4E2AtimerFunc\u5C31\u662F\u6839\u636E\u6D4F\u89C8\u5668\u73AF\u5883\u5224\u65AD\u5F97\u51FA\u7684\u4E00\u4E2A\u80FD\u591F\u4EA7\u751F\u5FAE\u4EFB\u52A1\u6216\u964D\u7EA7\u4E3A\u5B8F\u4EFB\u52A1\u7684api\u8C03\u7528\uFF0C\u6BD4\u5982promise.then\u3002</li><li>callbacks\u961F\u5217\u7684\u4F5C\u7528\u662F\u6536\u96C6\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u5B8F\u4EFB\u52A1\u4E2D\u6240\u6709\u7684nextTick\u56DE\u8C03\uFF0C\u7B49\u5F53\u524D\u5B8F\u4EFB\u52A1\u6267\u884C\u5B8C\u4E4B\u540E\u597D\u4E00\u6B21\u6027for\u5FAA\u73AF\u6267\u884C\u5B8C\u3002</li><li>\u8BD5\u60F3\u5982\u679C\u6CA1\u6709callback\u961F\u5217\u7684\u8BDD\uFF0C\u6BCF\u6B21\u8C03\u7528nextTick\u90FD\u53BB\u521B\u5EFA\u4E00\u4E2AtimerFunc\u5FAE\u4EFB\u52A1\uFF08\u5047\u8BBE\u652F\u6301\uFF09\uFF0C\u90A3\u4E48\u4E5F\u5C31\u4E0D\u9700\u8981pending\u9501\u4E86\u3002</li><li>\u73B0\u5728\u6709\u4E86callbacks\u961F\u5217\u7684\u60C5\u51B5\u4E0B\u5C31\u53EA\u9700\u8981\u521B\u5EFA\u4E00\u4E2AtimerFunc\u5FAE\u4EFB\u52A1\uFF0C\u90A3\u95EE\u9898\u662F\u4EC0\u4E48\u65F6\u5019\u521B\u5EFA\u8BE5\u5FAE\u4EFB\u52A1\u5462\uFF1F \u8FD9\u91CC\u5C31\u8981\u8BB2\u5230pending\u4E86\uFF0C\u5728pending\u4E3Afalse\u7684\u65F6\u5019\u8868\u793A\u7B2C\u4E00\u6B21\u6DFB\u52A0cb\u5230callbacks\u4E2D\uFF0C\u8FD9\u65F6\u5019\u521B\u5EFA\u4E00\u4E2AtimerFunc\u5FAE\u4EFB\u52A1\uFF0C\u5E76\u52A0\u9501\u3002 \u540E\u9762\u8C03\u7528nextTick\u5C31\u53EA\u662F\u5F80callbacks\u6DFB\u52A0\u56DE\u8C03\u3002 \u7B49\u5F53\u524D\u5B8F\u4EFB\u52A1\u4E4B\u540E\u5B8C\u4E4B\u540E\uFF0C\u5C31\u4F1A\u53BB\u6267\u884CtimerFunc\u6E05\u7A7Acallbacks\u961F\u5217\uFF0C\u5E76\u8BBE\u7F6Epending\u4E3Afalse\uFF0C\u4E00\u5207\u5F52\u96F6</li></ul></div><blockquote><p>js \u5F15\u64CE\u7EBF\u7A0B\u548C GUI \u6E32\u67D3\u7EBF\u7A0B\u662F\u4E92\u65A5\u7684\uFF0C\u6267\u884C js \u5F15\u64CE\u7EBF\u7A0B\u8FD0\u884C\u7684\u65F6\u5019\uFF0CGUI \u6E32\u67D3\u7EBF\u7A0B\u662F\u88AB\u6302\u8D77\u7684\u3002\u5728\u6267\u884C $nextTick \u7684\u65F6\u5019\uFF0CDOM \u6811\u5DF2\u7ECF\u88AB\u66F4\u65B0\u4E86\uFF0C\u53EA\u662F\u65B0\u7684 DOM \u8FD8\u6CA1\u6709\u7ED9\u88ABGUI \u6E32\u67D3\uFF0C\u6240\u4EE5\u53EF\u4EE5\u62FF\u5230 \u66F4\u65B0\u540E\u7684 DOM\u3002</p></blockquote><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">flushCallbacks</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> copies <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> copies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      copies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Here we have async deferring wrappers using microtasks.</span>
  <span class="token comment">// In 2.5 we used (macro) tasks (in combination with microtasks).</span>
  <span class="token comment">// However, it has subtle problems when state is changed right before repaint</span>
  <span class="token comment">// (e.g. #6813, out-in transitions).</span>
  <span class="token comment">// Also, using (macro) tasks in event handler would cause some weird behaviors</span>
  <span class="token comment">// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).</span>
  <span class="token comment">// So we now use microtasks everywhere, again.</span>
  <span class="token comment">// A major drawback of this tradeoff is that there are some scenarios</span>
  <span class="token comment">// where microtasks have too high a priority and fire in between supposedly</span>
  <span class="token comment">// sequential events (e.g. #4521, #6690, which have workarounds)</span>
  <span class="token comment">// or even between bubbling of the same event (#6566).</span>
  <span class="token keyword">var</span> timerFunc<span class="token punctuation">;</span>

  <span class="token comment">// The nextTick behavior leverages the microtask queue, which can be accessed</span>
  <span class="token comment">// via either native Promise.then or MutationObserver.</span>
  <span class="token comment">// MutationObserver has wider support, however it is seriously bugged in</span>
  <span class="token comment">// UIWebView in iOS &gt;= 9.3.3 when triggered in touch event handlers. It</span>
  <span class="token comment">// completely stops working after triggering a few times... so, if native</span>
  <span class="token comment">// Promise is available, we will use it:</span>
  <span class="token comment">/* istanbul ignore next, $flow-disable-line */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNative</span><span class="token punctuation">(</span>Promise<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// In problematic UIWebViews, Promise.then doesn&#39;t completely break, but</span>
      <span class="token comment">// it can get stuck in a weird state where callbacks are pushed into the</span>
      <span class="token comment">// microtask queue but the queue isn&#39;t being flushed, until the browser</span>
      <span class="token comment">// needs to do some other work, e.g. handle a timer. Therefore we can</span>
      <span class="token comment">// &quot;force&quot; the microtask queue to be flushed by adding an empty timer.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isIOS<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>noop<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isIE <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> MutationObserver <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
    <span class="token function">isNative</span><span class="token punctuation">(</span>MutationObserver<span class="token punctuation">)</span> <span class="token operator">||</span>
    <span class="token comment">// PhantomJS and iOS 7.x</span>
    MutationObserver<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object MutationObserverConstructor]&#39;</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Use MutationObserver where native Promise is not available,</span>
    <span class="token comment">// e.g. PhantomJS, iOS7, Android 4.4</span>
    <span class="token comment">// (#6466 MutationObserver is unreliable in IE11)</span>
    <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>textNode<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">characterData</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      counter <span class="token operator">=</span> <span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">;</span>
      textNode<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> setImmediate <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNative</span><span class="token punctuation">(</span>setImmediate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Fallback to setImmediate.</span>
    <span class="token comment">// Technically it leverages the (macro) task queue,</span>
    <span class="token comment">// but it is still a better choice than setTimeout.</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setImmediate</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Fallback to setTimeout.</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">nextTick</span> <span class="token punctuation">(</span><span class="token parameter">cb<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _resolve<span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> <span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">_resolve</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">timerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// $flow-disable-line</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cb <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _resolve <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br></div></div></details>`,4),ms={id:"\u751F\u547D\u5468\u671F",tabindex:"-1"},ds=n("a",{class:"header-anchor",href:"#\u751F\u547D\u5468\u671F","aria-hidden":"true"},"#",-1),hs=s(),fs={href:"https://juejin.im/post/6844904114879463437",target:"_blank",rel:"noopener noreferrer"},ys=s("\u751F\u547D\u5468\u671F"),ws={href:"https://juejin.im/post/6844903780736040973",target:"_blank",rel:"noopener noreferrer"},gs=s("\u751F\u547D\u5468\u671F"),vs=n("img",{src:f,alt:"An image"},null,-1),_s=n("p",null,[n("img",{src:y,alt:"An image"})],-1),xs=o("<li><p><code>initLifecycle(vm);initEvents(vm);initRender(vm);</code>\uFF0C<code>initLifecycle</code>\uFF1A\u521D\u59CB\u5316\u53C2\u6570\uFF0C\u627E\u5230\u7236\u8282\u70B9\uFF0C\u8BBE\u7F6E\u5B50\u8282\u70B9\uFF0C<code>$refs</code>\u4E3A\u7A7A\u6570\u7EC4\uFF0C\u521D\u59CB\u5316\u7EC4\u4EF6\u53D8\u91CF\uFF0C<code>_isMounted</code>\uFF0C<code>_isDestroyed</code>\u7B49\uFF0C <code>initEvents</code>\uFF1A\u521D\u59CB\u5316\u4E8B\u4EF6\uFF0C\u5982\u679C _parentListeners \u5B58\u5728\u7684\u8BDD\uFF0C\u66F4\u65B0\u7EC4\u4EF6\u7684\u4E8B\u4EF6\u76D1\u542C\uFF1B</p></li><li><p><code>beforeCreate</code>\u4E4B\u524D\u5408\u5E76\u914D\u7F6E\uFF0C\u521D\u59CB\u5316\u751F\u547D\u5468\u671F\uFF0C\u521D\u59CB\u5316\u4E8B\u4EF6\u4E2D\u5FC3\uFF0C\u521D\u59CB\u5316\u6E32\u67D3</p></li><li><p><code>created</code>\u4E4B\u524D\u8C03\u7528<code>initInjections</code>\uFF0C<code>initState</code>, <code>initProvide</code>\uFF0C\u521D\u59CB\u5316 data\u3001props\u3001computed\u3001watcher\uFF1B</p></li><li><p><code>beforeMount</code>\uFF08\u6E32\u67D3dom\u524D\uFF09\uFF1A\u5224\u65AD<code>$options</code>\u4E2D\u662F\u5426\u6709\u6302\u8F7Del\uFF0C\u5373\u68C0\u67E5\u662F\u5426\u6709\u6E32\u67D3\u4F4D\u7F6E\u3002\u6709\u7684\u8BDD\u6267\u884C<code>vm.$mount(vm.$options.el)</code>\uFF0C\u6CE8\u610F\u8FD9\u4E2A<code>$mount()</code>\u6267\u884C\u7684\u662F11879\u884C\u7684\u65B9\u6CD5\uFF0C\u5148<code>var mount = Vue.prototype.$mount;</code>\u4FDD\u5B58\u4E4B\u524D\u7684\uFF0C\u5728\u6700\u540E<code>mount.call(this, el, hydrating)</code>, \u5728$mount()\u4E2D\uFF0C\u4F1A\u5224\u65AD<code>options</code>\u662F\u5426\u6709render\uFF0C\u6CA1\u6709\u5C31\u5F00\u59CB\u7F16\u8BD1\u6A21\u677F\uFF0C\u6A21\u677Fparse,optimize,generate,\u540E\u5F97\u5230render\u7684\u5B57\u7B26\u4E32\u8868\u8FBE\u5F0F\uFF0C\u901A\u8FC7<code>new Function</code>\u751F\u6210<code>render function</code></p></li><li><p>\u63A5\u7740\u5230<code>mountComponent</code>,<code>callHook(vm, &#39;beforeMount&#39;);</code></p></li><li><p>\u6267\u884C\u4E86 <code>beforeMount</code> \u94A9\u5B50\u51FD\u6570\u540E\uFF0C\u4E3A\u7EC4\u4EF6<code>new Watcher</code>, \u5728 <code>new Watcher</code> \u7684\u65F6\u5019\uFF0C\u5176\u5B9E\u5C31\u662F\u6267\u884C\u4E86<code>updateComponent</code>,\u8C03\u7528\u4E86<code> _render</code> \u65B9\u6CD5\u5F97\u5230Vdom, <code>_update</code>\u4E2Dpatch\uFF0C\u5B9E\u73B0\u4E86 <code>dom</code> \u7684\u6E32\u67D3\uFF0C\u5373\u5728\u6267\u884C\u5B8C <code>vm._update()</code> \u628A VNode patch \u5230\u771F\u5B9E DOM \u540E\uFF0C\u6267\u884C <code>mounted</code> \u94A9\u5B50\u3002</p></li><li><p><code>beforeUpdate</code>: \u5B9E\u9645\u4E0A\u662F\u5728<code>watcher.run()</code>\u4E4B\u524D\u8C03\u7528\u4E86<code>watcher.before();</code>\u89E6\u53D1\u4E86\u8FD9\u4E2AbeforeUpdate\uFF0C\u5176\u4ED6\u6CA1\u505A\u4EC0\u4E48\u3002<strong>\u6570\u636E\u66F4\u65B0\u65F6\u8C03\u7528\uFF0C\u53D1\u751F\u5728\u865A\u62DF DOM \u6253\u8865\u4E01\u4E4B\u524D\u3002</strong>\uFF0CbeforeUpdate\u662F\u9488\u5BF9\u89C6\u56FE\u5C42\uFF0C\u89C6\u56FE\u5C42\u7684\u6570\u636E\u53D1\u751F\u6539\u53D8\u624D\u4F1A\u89E6\u53D1(\u5E9F\u8BDD\uFF0C\u53EA\u6709\u8BBF\u95EE\u4E86\u6570\u636E\u7684get\u624D\u4F1A\u6536\u96C6\u4F9D\u8D56)</p></li><li><p>\u5728watcher.run\u4E4B\u540E\u8C03\u7528\u4E86<code>callUpdatedHooks</code>, \u56E0\u4E3A\u6709\u591A\u4E2A\u7EC4\u4EF6\u7684\u65F6\u5019\uFF0C\u4F1A\u6709\u5F88\u591A\u4E2A watcher \uFF0C\u5728\u8FD9\u91CC\uFF0C\u5C31\u662F\u68C0\u67E5\u5F53\u524D\u7684\u5F97 watcher \u662F\u54EA\u4E2A\uFF0C\u662F\u5F53\u524D\u7684\u8BDD\uFF0C\u5C31\u76F4\u63A5\u6267\u884C\u5F53\u524D updated \u94A9\u5B50\u3002</p></li><li><p>beforeDestroy\uFF08\u5378\u8F7D\u7EC4\u4EF6\u524D\uFF09: \u5728\u5378\u8F7D\u524D\uFF0C\u68C0\u67E5\u662F\u5426\u5DF2\u7ECF\u88AB\u5378\u8F7D\uFF0C\u5982\u679C\u5DF2\u7ECF\u88AB\u5378\u8F7D\uFF0C\u5C31\u76F4\u63A5 return \u51FA\u53BB\uFF1B\u6267\u884C <code>beforeDestroy</code> \u94A9\u5B50</p></li><li><p>destroyed\u524D\uFF1A \u4ECE\u7236\u7EA7\u7EC4\u4EF6\u90A3\u91CC\u5220\u9664\u81EA\u5DF1\uFF0C<code>vm._watcher.teardown()</code> \u62C6\u89E3\u89C2\u5BDF\u8005\uFF0C\u628A\u6240\u6709\u6709\u5173\u81EA\u5DF1\u75D5\u8FF9\u7684\u5730\u65B9\uFF0C\u90FD\u7ED9\u5220\u9664\u6389\u3002</p></li>",10),Vs=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> updateComponent<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">before</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">before</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeUpdate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* isRenderWatcher */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">callUpdatedHooks</span> <span class="token punctuation">(</span><span class="token parameter">queue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> watcher <span class="token operator">=</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> vm <span class="token operator">=</span> watcher<span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_watcher <span class="token operator">===</span> watcher <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;updated&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_init</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
      <span class="token comment">// a uid</span>
      vm<span class="token punctuation">.</span>_uid <span class="token operator">=</span> uid$3<span class="token operator">++</span><span class="token punctuation">;</span>

      <span class="token keyword">var</span> startTag<span class="token punctuation">,</span> endTag<span class="token punctuation">;</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>performance <span class="token operator">&amp;&amp;</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        startTag <span class="token operator">=</span> <span class="token string">&quot;vue-perf-start:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        endTag <span class="token operator">=</span> <span class="token string">&quot;vue-perf-end:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">mark</span><span class="token punctuation">(</span>startTag<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// a flag to avoid this being observed</span>
      vm<span class="token punctuation">.</span>_isVue <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token comment">// merge options</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>_isComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// optimize internal component instantiation</span>
        <span class="token comment">// since dynamic options merging is pretty slow, and none of the</span>
        <span class="token comment">// internal component options needs special treatment.</span>
        <span class="token function">initInternalComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>
          <span class="token function">resolveConstructorOptions</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">,</span>
          options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* istanbul ignore else */</span>
      <span class="token punctuation">{</span>
        <span class="token function">initProxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// expose real self</span>
      vm<span class="token punctuation">.</span>_self <span class="token operator">=</span> vm<span class="token punctuation">;</span>
      <span class="token function">initLifecycle</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">initEvents</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">initRender</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeCreate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">initInjections</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// resolve injections before data/props</span>
      <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">initProvide</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// resolve provide after data/props</span>
      <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;created&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>performance <span class="token operator">&amp;&amp;</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span>_name <span class="token operator">=</span> <span class="token function">formatComponentName</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">mark</span><span class="token punctuation">(</span>endTag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">measure</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;vue &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; init&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> startTag<span class="token punctuation">,</span> endTag<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div></details><h3 id="vue\u4E8B\u4EF6\u7ED1\u5B9A\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#vue\u4E8B\u4EF6\u7ED1\u5B9A\u539F\u7406" aria-hidden="true">#</a> Vue\u4E8B\u4EF6\u7ED1\u5B9A\u539F\u7406</h3><p>\u539F\u751F\u4E8B\u4EF6\u7ED1\u5B9A\u662F\u901A\u8FC7<code>addEventListener</code>\u7ED1\u5B9A\u7ED9\u771F\u5B9E\u5143\u7D20\u7684\uFF0C\u7EC4\u4EF6\u4E8B\u4EF6\u7ED1\u5B9A\u662F\u901A\u8FC7Vue\u81EA\u5B9A\u4E49\u7684<code>$on</code>\u5B9E\u73B0\u7684\u3002</p><h3 id="\u62BD\u8C61\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u62BD\u8C61\u7EC4\u4EF6" aria-hidden="true">#</a> \u62BD\u8C61\u7EC4\u4EF6</h3><p>\u5E38\u7528\u7684<code>transition</code>\u548C<code>keep-alive</code>\u5C31\u662F\u4E00\u4E2A\u62BD\u8C61\u7EC4\u4EF6\u3002\u62BD\u8C61\u7EC4\u4EF6\u662F\u65E0\u72B6\u6001\u7684\uFF0C\u540C\u6837\u4E5F\u662F\u201C\u4E0D\u5B58\u5728\u7684\u201D\uFF0C\u5B83\u81EA\u5DF1\u5E76\u4E0D\u4F1A\u88AB\u6E32\u67D3\u4E3A\u5B9E\u9645\u7684<code>DOM</code>\uFF0C\u800C\u662F\u76F4\u63A5\u8FD4\u56DE\u4EE5\u53CA\u64CD\u4F5C\u5B83\u7684\u5B50\u5143\u7D20\u3002</p><h3 id="vue\u51FD\u6570\u5F0F\u7EC4\u4EF6functional" tabindex="-1"><a class="header-anchor" href="#vue\u51FD\u6570\u5F0F\u7EC4\u4EF6functional" aria-hidden="true">#</a> vue\u51FD\u6570\u5F0F\u7EC4\u4EF6functional</h3><p>\u4EC0\u4E48\u662F\u51FD\u6570\u5F0F\u7EC4\u4EF6: \u6CA1\u6709\u7BA1\u7406\u4EFB\u4F55\u72B6\u6001\uFF0C\u4E5F\u6CA1\u6709\u76D1\u542C\u4EFB\u4F55\u4F20\u9012\u7ED9\u5B83\u7684\u72B6\u6001\uFF0C\u4E5F\u6CA1\u6709\u751F\u547D\u5468\u671F\u65B9\u6CD5\uFF0C\u5B83\u53EA\u662F\u4E00\u4E2A\u63A5\u53D7\u4E00\u4E9B <code>prop</code> \u7684\u51FD\u6570\u3002\u7B80\u5355\u6765\u8BF4\u662F <strong>\u4E00\u4E2A\u65E0\u72B6\u6001(\u6CA1\u6709\u54CD\u5E94\u5F0F\u6570\u636E)\u548C\u65E0\u5B9E\u4F8B\u7684\u7EC4\u4EF6(\u6CA1\u6709 this \u4E0A\u4E0B\u6587)</strong></p><p>\u51FD\u6570\u5F0F\u7EC4\u4EF6\u548C\u666E\u901A\u7684\u5BF9\u8C61\u7C7B\u578B\u7684\u7EC4\u4EF6\u4E0D\u540C\uFF0C\u662F\u901A\u8FC7<code>createFunctionalComponent</code>\u521B\u5EFA\uFF0C\u5B83\u4E0D\u4F1A\u88AB\u770B\u4F5C\u6210\u4E00\u4E2A\u771F\u6B63\u7684\u7EC4\u4EF6\uFF0C\u5728 <code>patch</code> \u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u9047\u5230\u4E00\u4E2A\u8282\u70B9\u662F\u7EC4\u4EF6 <code>vnode</code>\uFF0C\u4F1A\u9012\u5F52\u6267\u884C\u5B50\u7EC4\u4EF6\u7684\u521D\u59CB\u5316\u8FC7\u7A0B\uFF1B\u800C\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684 <code>render</code> \u751F\u6210\u7684\u662F\u666E\u901A\u7684 <code>vnode</code>\uFF0C\u4E0D\u4F1A\u6709\u9012\u5F52\u5B50\u7EC4\u4EF6\u7684\u8FC7\u7A0B\uFF0C\u56E0\u6B64\u6E32\u67D3\u5F00\u9500\u4F1A\u4F4E\u5F88\u591A\u3002 \u56E0\u6B64\uFF0C\u51FD\u6570\u5F0F\u7EC4\u4EF6\u4E5F\u4E0D\u4F1A\u6709\u72B6\u6001\uFF0C\u4E0D\u4F1A\u6709\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u751F\u547D\u5468\u671F\u94A9\u5B50\u51FD\u6570\u8FD9\u4E9B\u4E1C\u897F\u3002\u53EF\u4EE5\u628A\u5B83\u5F53\u6210\u628A\u666E\u901A\u7EC4\u4EF6\u6A21\u677F\u4E2D\u7684\u4E00\u90E8\u5206 <code>DOM</code> \u5265\u79BB\u51FA\u6765\uFF0C\u901A\u8FC7\u51FD\u6570\u7684\u65B9\u5F0F\u6E32\u67D3\u51FA\u6765\uFF0C\u662F\u4E00\u79CD\u5728 <code>DOM</code> \u5C42\u9762\u7684\u590D\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;my-component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">functional</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// Props \u662F\u53EF\u9009\u7684</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u4E3A\u4E86\u5F25\u8865\u7F3A\u5C11\u7684\u5B9E\u4F8B</span>
  <span class="token comment">// \u63D0\u4F9B\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F5C\u4E3A\u4E0A\u4E0B\u6587</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">createElement<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6216\u8005\u5355\u6587\u4EF6\u5B9A\u4E49\u51FD\u6570\u5F0F\u7EC4\u4EF6\uFF082.5\u7248\u672C\u540E\uFF09</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">functional</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data.attrs<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>listeners<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createComponent</span> <span class="token punctuation">(</span>
    <span class="token parameter">Ctor<span class="token punctuation">,</span>
    data<span class="token punctuation">,</span>
    context<span class="token punctuation">,</span>
    children<span class="token punctuation">,</span>
    tag</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">var</span> baseCtor <span class="token operator">=</span> context<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_base<span class="token punctuation">;</span>
 
    <span class="token comment">// \u7701\u7565N\u884C</span>
    <span class="token comment">// functional component</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>functional<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5728\u6B64\u5224\u65AD\u662F\u5426\u662F\u51FD\u6570\u5F0F\u7EC4\u4EF6\uFF0C\u5982\u679C\u662Freturn \u81EA\u5B9A\u4E49render\u51FD\u6570\u8FD4\u56DE\u7684Vnode\uFF0C\u8DF3\u8FC7\u5E95\u4E0B\u521D\u59CB\u5316\u7684\u6D41\u7A0B</span>
      <span class="token keyword">return</span> <span class="token function">createFunctionalComponent</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">,</span> propsData<span class="token punctuation">,</span> data<span class="token punctuation">,</span> context<span class="token punctuation">,</span> children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7701\u7565N\u884C</span>
    <span class="token comment">// install component management hooks onto the placeholder node</span>
    <span class="token function">installComponentHooks</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6B63\u5E38\u7684\u7EC4\u4EF6\u662F\u5728\u6B64\u8FDB\u884C\u521D\u59CB\u5316\u65B9\u6CD5\uFF08\u5305\u62EC\u54CD\u5E94\u6570\u636E\u548C\u94A9\u5B50\u51FD\u6570\u7684\u6267\u884C\uFF09</span>
 
    <span class="token comment">// return a placeholder vnode</span>
    <span class="token keyword">var</span> name <span class="token operator">=</span> Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>name <span class="token operator">||</span> tag<span class="token punctuation">;</span>
    <span class="token keyword">var</span> vnode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token string">&quot;vue-component-&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>Ctor<span class="token punctuation">.</span>cid<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>name <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      data<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> context<span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">Ctor</span><span class="token operator">:</span> Ctor<span class="token punctuation">,</span> <span class="token literal-property property">propsData</span><span class="token operator">:</span> propsData<span class="token punctuation">,</span> <span class="token literal-property property">listeners</span><span class="token operator">:</span> listeners<span class="token punctuation">,</span> <span class="token literal-property property">tag</span><span class="token operator">:</span> tag<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> children <span class="token punctuation">}</span><span class="token punctuation">,</span>
      asyncFactory
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">return</span> vnode
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u6B63\u662F\u56E0\u4E3A\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7CBE\u7B80\u4E86\u5F88\u591A\u4F8B\u5982\u54CD\u5E94\u5F0F\u548C\u94A9\u5B50\u51FD\u6570\u7684\u5904\u7406\uFF0C\u56E0\u6B64\u6E32\u67D3\u6027\u80FD\u4F1A\u6709\u4E00\u5B9A\u7684\u63D0\u9AD8\uFF0C\u6240\u4EE5\u5982\u679C\u4E1A\u52A1\u7EC4\u4EF6\u662F\u4E00\u4E2A\u7EAF\u5C55\u793A\u4E14\u4E0D\u9700\u8981\u6709\u54CD\u5E94\u5F0F\u6570\u636E\u72B6\u6001\u7684\u5904\u7406\u7684\uFF0C\u90A3\u51FD\u6570\u5F0F\u7EC4\u4EF6\u4F1A\u662F\u4E00\u4E2A\u975E\u5E38\u597D\u7684\u9009\u62E9\u3002</p><p>\u548C\u6B63\u5E38\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u7684\u533A\u522B\uFF1F</p><ul><li>\u4E0D\u7EF4\u62A4\u54CD\u5E94\u6570\u636E</li><li>\u65E0\u94A9\u5B50\u51FD\u6570</li><li>\u6CA1\u6709instance\u5B9E\u4F8B, \u6240\u4EE5\u5728\u7EC4\u4EF6\u5185\u90E8\u6CA1\u6709\u529E\u6CD5\u50CF\u4F20\u7EDF\u7EC4\u4EF6\u4E00\u6837\u901A\u8FC7this\u6765\u8BBF\u95EE\u7EC4\u4EF6\u5C5E\u6027</li></ul><p>\u5728\u4E00\u4E9B\u5C55\u793A\u7EC4\u4EF6\u3002\u4F8B\u5982\uFF0C <code>buttons</code>\uFF0C <code>tags</code>, <code>cards</code>\uFF0C\u6216\u8005\u9875\u9762\u662F\u9759\u6001\u6587\u672C\uFF0C\u5C31\u5F88\u9002\u5408\u4F7F\u7528\u51FD\u6570\u5F0F\u7EC4\u4EF6\u3002</p><p>\u8BE5\u5E94\u7528\u4E8E\u4EE5\u4E0B\u573A\u666F\uFF1A</p><ul><li>\u9700\u8981\u901A\u8FC7\u7F16\u7A0B\u5B9E\u73B0\u5728\u591A\u79CD\u7EC4\u4EF6\u4E2D\u9009\u62E9\u4E00\u79CD\u3002</li><li>children\u3001props \u6216\u8005 data \u5728\u4F20\u9012\u7ED9\u5B50\u7EC4\u4EF6\u4E4B\u524D\uFF0C\u5904\u7406\u5B83\u4EEC\u3002</li></ul>`,19),qs={id:"\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD",tabindex:"-1"},Es=n("a",{class:"header-anchor",href:"#\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD","aria-hidden":"true"},"#",-1),Cs=s(),Ss={href:"https://cn.vuejs.org/v2/guide/components-slots.html",target:"_blank",rel:"noopener noreferrer"},js=s("\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD"),Ds=n("p",null,"\u5177\u540D\u63D2\u69FD\uFF1A \u5B9E\u9645\u4E0A\u5C31\u662F\u5B9E\u73B0\u7EC4\u4EF6children\u5185\u5BB9\u6309name\u5206\u53D1",-1),Is={id:"\u4F5C\u7528\u57DF\u63D2\u69FD",tabindex:"-1"},Os=n("a",{class:"header-anchor",href:"#\u4F5C\u7528\u57DF\u63D2\u69FD","aria-hidden":"true"},"#",-1),As=s(),Ts={href:"https://mp.weixin.qq.com/s/58P3kkHOL-h-gkfcXTgAOA",target:"_blank",rel:"noopener noreferrer"},Ms=s("\u4F5C\u7528\u57DF\u63D2\u69FD"),Ns=n("p",null,"\u4F5C\u7528\uFF1A\u8BA9\u63D2\u69FD\u5185\u5BB9\u80FD\u591F\u8BBF\u95EE\u5B50\u7EC4\u4EF6\u4E2D\u7684\u6570\u636E\u3002",-1),Fs=n("p",null,"\u4F7F\u7528",-1),Rs=n("ul",null,[n("li",null,[s("\u5B50\u7EC4\u4EF6"),n("code",null,"v-bind"),s("\u63D0\u4F9B\u53EF\u8BBF\u95EE\u7684\u6570\u636E")]),n("li",null,[s("\u5728\u7236\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u5B50\u7EC4\u4EF6\u65F6\uFF0C\u63D2\u69FD\u5BB9\u5668\u4E0A\u901A\u8FC7slot-scope\u6765\u63A5\u6536 \u5B50\u7EC4\u4EF6\u4E2D\u63D2\u69FD\u629B\u51FA\u6765\u7684\u6570\u636E\u3002\u81EA 2.6.0 \u8D77\u6709\u6240\u66F4\u65B0, \u4F7F\u7528"),n("code",null,"v-slot")])],-1),Ps=n("p",null,[n("strong",null,"\u7236\u7EA7\u6A21\u677F\u91CC\u7684\u6240\u6709\u5185\u5BB9\u90FD\u662F\u5728\u7236\u7EA7\u4F5C\u7528\u57DF\u4E2D\u7F16\u8BD1\u7684\uFF1B\u5B50\u6A21\u677F\u91CC\u7684\u6240\u6709\u5185\u5BB9\u90FD\u662F\u5728\u5B50\u4F5C\u7528\u57DF\u4E2D\u7F16\u8BD1\u7684\u3002")],-1),Bs={href:"https://juejin.cn/post/6844904115886096392",target:"_blank",rel:"noopener noreferrer"},$s=s("\u5728 Vue 2.6 \u4E2D"),Ls=o(`<ol><li><code>slot</code> \u548C <code>slot-scope</code> \u5728\u7EC4\u4EF6\u5185\u90E8\u88AB\u7EDF\u4E00\u6574\u5408\u6210\u4E86 <strong>\u51FD\u6570</strong></li><li>\u4ED6\u4EEC\u7684\u6E32\u67D3\u4F5C\u7528\u57DF\u90FD\u662F <strong>\u5B50\u7EC4\u4EF6</strong></li><li>\u5E76\u4E14\u90FD\u80FD\u901A\u8FC7 <code>this.$slotScopes</code>\u53BB\u8BBF\u95EE</li></ol><p>\u7F16\u8BD1\u8FC7\u7A0B</p><ol><li>\u666E\u901A\u63D2\u69FD</li></ol><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token comment">&lt;!-- \u573A\u666F\u8BBE\u7F6E --&gt;</span>
<span class="token comment">&lt;!-- \u7236\u7EC4\u4EF6 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span><span class="token punctuation">&gt;</span></span>\u6211\u662Fslot\u4E2D\u7684\u5185\u5BB9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \u5B50\u7EC4\u4EF6:test --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span>
    \u6211\u5728\u5B50\u7EC4\u4EF6\u4E2D
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u7236\u7EC4\u4EF6\u5148\u89E3\u6790\uFF0C\u5C06<code>test</code>\u4F5C\u4E3A\u5B50\u7EC4\u4EF6\u5904\u7406\uFF0C\u751F\u6210\u8FD9\u6837\u7684\u8282\u70B9</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    tag: &#39;div&#39;,
    children: [{
        tag: &#39;test&#39;,
        children: [&#39;\u63D2\u5165slot\u4E2D&#39;]
    }]
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5B50\u7EC4\u4EF6\u89E3\u6790\uFF0Cslot\u4F5C\u4E3A\u4E00\u4E2A\u5360\u4F4D\u7B26\uFF0C\u4F1A\u88AB\u89E3\u6790\u6210\u4E00\u4E2A\u51FD\u6570</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    tag: &#39;main&#39;,
    children: [
        &#39;\u6211\u5728\u5B50\u7EC4\u4EF6\u91CC\u9762&#39;,
        // \u4E0D\u4F20\u9012\u63D2\u69FD\u7684\u540D\u79F0\u9ED8\u8BA4\u5C31\u662Fdefault, \u5982\u679C\u4F20\u4E86\u5C31\u662F\u4F20\u5165\u7684\u540D\u79F0
        _t(&#39;default&#39;)
    ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>\u4F5C\u7528\u57DF\u63D2\u69FD</li></ol><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token comment">&lt;!-- \u573A\u666F\u8BBE\u7F6E --&gt;</span>
<span class="token comment">&lt;!-- \u7236\u7EC4\u4EF6 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slotProps<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            \u63D2\u5165slot\u4E2D{{slotProps}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- \u5B50\u7EC4\u4EF6:test --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span>
    \u6211\u5728\u5B50\u7EC4\u4EF6\u4E2D
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">:child</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>child<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>

data() {
    return { child: 123 }
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u7236\u7EC4\u4EF6\u5148\u89E3\u6790</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    tag: &#39;div&#39;,
    children: [{
        tag: &#39;test&#39;,
        scopeSlots: {
            default(slotProps) {
                return [&#39;\u63D2\u5165slot\u4E2D&#39; + slotProps]
            }
        }
    }]
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5B50\u7EC4\u4EF6\u89E3\u6790\uFF0Cslot\u4F5C\u4E3A\u4E00\u4E2A\u5360\u4F4D\u7B26\uFF0C\u4F1A\u88AB\u89E3\u6790\u6210\u4E00\u4E2A\u51FD\u6570</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    tag: &#39;main&#39;,
    children: [
        &#39;\u6211\u5728\u5B50\u7EC4\u4EF6\u4E2D&#39;,
        // \u8FD9\u91CC\u7684{ child: 123 }\u5C31\u662F\u4F20\u9012\u7ED9\u63D2\u69FD\u4E2D\u7684\u6570\u636E
        _t(&#39;default&#39;, { child: 123 })
    ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6700\u7EC8\u4F1A\u89E3\u6790\u6210</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    tag: &#39;main&#39;,
    children: [
        &#39;\u6211\u5728\u5B50\u7EC4\u4EF6\u91CC\u9762&#39;, 
        &#39;\u63D2\u5165slot \u4E2D {child:123}&#39;
    ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="computed\u548Cwatch" tabindex="-1"><a class="header-anchor" href="#computed\u548Cwatch" aria-hidden="true">#</a> computed\u548Cwatch</h3>`,17),zs={href:"https://juejin.cn/post/6844904120290131982",target:"_blank",rel:"noopener noreferrer"},Ws=s("Vue\u7684Computed\u539F\u7406"),Us={href:"https://juejin.cn/post/6844904199596015624",target:"_blank",rel:"noopener noreferrer"},Gs=s("\u624B\u6478\u624B\u5E26\u4F60\u7406\u89E3Vue\u7684Computed\u539F\u7406"),Hs={href:"https://juejin.cn/post/6844903667884097543",target:"_blank",rel:"noopener noreferrer"},Qs=s("Vue.js\u7684computed\u548Cwatch\u662F\u5982\u4F55\u5DE5\u4F5C\u7684"),Ks=o(`<p>\u5728<code>initState</code>\u65F6<code>initComputed</code>\u548C<code>initWatch</code></p><ul><li>1.\u5B9E\u4F8B\u4E0A\u5B9A\u4E49<code> _computedWatchers</code> \u5BF9\u8C61\uFF0C\u7528\u4E8E\u5B58\u50A8\u201C\u8BA1\u7B97\u5C5E\u6027Watcher\u201D;</li><li>2.\u83B7\u53D6\u8BA1\u7B97\u5C5E\u6027\u7684 <code>getter</code>\uFF0C\u9700\u8981\u5224\u65AD\u662F\u51FD\u6570\u58F0\u660E\u8FD8\u662F\u5BF9\u8C61\u58F0\u660E;</li><li>3.\u521B\u5EFA\u201C\u8BA1\u7B97\u5C5E\u6027Watcher\u201D\uFF0C<code>getter</code> \u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF0C\u5B83\u4F1A\u5728\u4F9D\u8D56\u5C5E\u6027\u66F4\u65B0\u65F6\u8FDB\u884C\u8C03\u7528\uFF0C\u5E76\u5BF9\u8BA1\u7B97\u5C5E\u6027\u91CD\u65B0\u53D6\u503C\u3002\u9700\u8981\u6CE8\u610F Watcher \u7684 lazy \u914D\u7F6E\uFF0C\u8FD9\u662F\u5B9E\u73B0\u7F13\u5B58\u7684\u6807\u8BC6;</li><li>4.<code>defineComputed</code> \u5BF9\u8BA1\u7B97\u5C5E\u6027\u8FDB\u884C\u6570\u636E\u52AB\u6301;</li></ul><p><code>computed</code>\u6838\u5FC3\u662F<code>computedGetter</code>\u91CC\u7684\u6267\u884C\uFF0C\u83B7\u53D6\u7F13\u5B58\u7684<code>_computedWatchers</code>\uFF0C\u5177\u4F53\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">computedGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u521D\u59CB\u5316\u65F6\u8FD9\u91CC\u4F9D\u8D56\u5C5E\u6027\u662F\u5148\u6536\u96C6\u7684computed\u7684watcher</span>
			watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD9\u91CC\u5176\u5B9E\u662F\u7ED9\u4F9D\u8D56\u7684\u5C5E\u6027\u7684dep\u6DFB\u52A0\u6E32\u67D3\u7684watcher\uFF08\u5982\u679C\u5DF2\u7ECF\u6DFB\u52A0\u4F1A\u6709\u53BB\u91CD\u6821\u9A8C\u4E0D\u518D\u6DFB\u52A0\uFF09</span>
			watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">evaluate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">evaluate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>watcher.dirty \u662F\u5B9E\u73B0\u8BA1\u7B97\u5C5E\u6027\u7F13\u5B58\u7684\u89E6\u53D1\u70B9\uFF0Cwatcher.evaluate\u662F\u5BF9\u8BA1\u7B97\u5C5E\u6027\u91CD\u65B0\u6C42\u503C\uFF0C\u4F9D\u8D56\u5C5E\u6027\u6536\u96C6\u201C\u6E32\u67D3Watcher\u201D\uFF0C\u8BA1\u7B97\u5C5E\u6027\u6C42\u503C\u540E\u4F1A\u5C06\u503C\u5B58\u50A8\u5728 value \u4E2D\uFF0Cget \u8FD4\u56DE\u8BA1\u7B97\u5C5E\u6027\u7684\u503C\uFF1B dirty\u4E3Afalse\u8FD4\u56DE\u4E0A\u6B21\u7684\u6C42\u503C\u7ED3\u679C<code>watcher.value</code>\uFF0C\u4E3Atrue\u6267\u884C<code>watcher.evaluate()</code>\u91CD\u65B0\u6C42\u804C\u3002\u5B9E\u9645\u4E0A\u662F<code>defineReactive</code>\u4E2D\u7684<code>get</code>\u65B9\u6CD5\u7684<code>dep.depend()</code>\u5C06<code>computed</code>\u7684<code>watcher</code>\u63A8\u5165\u4F9D\u8D56<code>data</code>\u7684<code>dep</code>\u7684<code>sub\u961F\u5217</code>\u4E2D\uFF0C\u8FD9\u6B63\u662F\u4F9D\u8D56data\u7684\u4FEE\u6539\u53EF\u4EE5\u89E6\u53D1<code>dirty=true</code>\u7684\u539F\u56E0</p><p>\u8BA1\u7B97\u5C5E\u6027\u66F4\u65B0\u7684\u8DEF\u5F84</p><ol><li>computed\u4F7F\u7528\u7684\u54CD\u5E94\u5F0F\u7684\u503C\u66F4\u65B0</li><li>\u540C\u65F6\u901A\u77E5 <code>computed watcher</code> \u548C <code>\u6E32\u67D3 watcher</code> \u66F4\u65B0</li><li><code>computed watcher</code> \u628A <code>dirty</code> \u8BBE\u7F6E\u4E3A <code>true</code></li><li>\u89C6\u56FE\u6E32\u67D3\u8BFB\u53D6\u5230 <code>computed</code> \u7684\u503C\uFF0C\u7531\u4E8E <code>dirty</code> \u6240\u4EE5 <code>computed watcher</code> \u91CD\u65B0\u6C42\u503C</li></ol><p>ComputedWatcher \u548C\u666E\u901A Watcher \u7684\u533A\u522B\uFF1A</p><ol><li>\u7528 <code>lazy</code> \u4E3A <code>true</code> \u6807\u793A\u4E3A\u5B83\u662F\u4E00\u4E2A<code>\u8BA1\u7B97Watcher</code></li><li><code>\u8BA1\u7B97Watcher</code>\u7684<code>get</code>\u548C<code>set</code>\u662F\u5728\u521D\u59CB\u5316(initComputed)\u65F6\u7ECF\u8FC7 defineComputed() \u65B9\u6CD5\u91CD\u5199\u4E86\u7684</li><li>\u5F53\u5B83\u6240\u4F9D\u8D56\u7684\u5C5E\u6027\u53D1\u751F\u6539\u53D8\u65F6\u867D\u7136\u4E5F\u4F1A\u8C03\u7528ComputedWatcher.update()\uFF0C\u4F46\u662F\u56E0\u4E3A\u5B83\u7684lazy\u5C5E\u6027\u4E3Atrue\uFF0C\u6240\u4EE5\u53EA\u6267\u884C\u628Adirty\u8BBE\u7F6E\u4E3Atrue\u8FD9\u4E00\u4E2A\u64CD\u4F5C\uFF0C\u5E76\u4E0D\u4F1A\u50CF\u5176\u5B83\u7684Watcher\u4E00\u6837\u6267\u884CqueueWatcher()\u6216\u8005run()</li><li>\u5F53\u6709\u7528\u5230\u8FD9\u4E2AComputedWatcher\u7684\u65F6\u5019\uFF0C\u4F8B\u5982\u89C6\u56FE\u6E32\u67D3\u65F6\u8C03\u7528\u4E86\u5B83\u65F6\uFF0C\u624D\u4F1A\u89E6\u53D1ComputedWatcher\u7684get\uFF0C\u4F46\u53C8\u7531\u4E8E\u8FD9\u4E2Aget\u5728\u521D\u59CB\u5316\u65F6\u88AB\u91CD\u5199\u4E86\uFF0C\u5176\u5185\u90E8\u4F1A\u5224\u65ADdirty\u7684\u503C\u662F\u5426\u4E3Atrue\u6765\u51B3\u5B9A\u662F\u5426\u9700\u8981\u6267\u884Cevaluate()\u91CD\u65B0\u8BA1\u7B97</li><li>\u56E0\u6B64\u624D\u6709\u4E86\u8FD9\u4E48\u4E00\u53E5\u8BDD\uFF1A\u5F53\u8BA1\u7B97\u5C5E\u6027\u6240\u4F9D\u8D56\u7684\u5C5E\u6027\u53D1\u751F\u53D8\u5316\u65F6\u5E76\u4E0D\u4F1A\u9A6C\u4E0A\u91CD\u65B0\u8BA1\u7B97(\u53EA\u662F\u5C06dirty\u8BBE\u7F6E\u4E3A\u4E86true\u800C\u5DF2)\uFF0C\u800C\u662F\u8981\u7B49\u5230\u5176\u5B83\u5730\u65B9\u8BFB\u53D6\u8FD9\u4E2A\u8BA1\u7B97\u5C5E\u6027\u7684\u65F6\u5019(\u4F1A\u89E6\u53D1\u91CD\u5199\u7684get)\u65F6\u624D\u91CD\u65B0\u8BA1\u7B97\uFF0C\u56E0\u6B64\u5B83\u5177\u5907\u61D2\u8BA1\u7B97\u7279\u6027\u3002</li></ol><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> computedWatcherOptions <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">initComputed</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> computed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// $flow-disable-line</span>
    <span class="token keyword">var</span> watchers <span class="token operator">=</span> vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// computed properties are just getters during SSR</span>
    <span class="token keyword">var</span> isSSR <span class="token operator">=</span> <span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> getter <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> userDef <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Getter is missing for computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// create internal watcher for the computed property.</span>
        watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
          vm<span class="token punctuation">,</span>
          getter <span class="token operator">||</span> noop<span class="token punctuation">,</span>
          noop<span class="token punctuation">,</span>
          computedWatcherOptions
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// component-defined computed properties are already defined on the</span>
      <span class="token comment">// component prototype. We only need to define computed properties defined</span>
      <span class="token comment">// at instantiation here.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;The computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already defined in data.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;The computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already defined as a prop.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">defineComputed</span> <span class="token punctuation">(</span>
    <span class="token parameter">target<span class="token punctuation">,</span>
    key<span class="token punctuation">,</span>
    userDef</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> shouldCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> shouldCache
        <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> noop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> userDef<span class="token punctuation">.</span>get
        <span class="token operator">?</span> shouldCache <span class="token operator">&amp;&amp;</span> userDef<span class="token punctuation">.</span>cache <span class="token operator">!==</span> <span class="token boolean">false</span>
          <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
          <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">.</span>get<span class="token punctuation">)</span>
        <span class="token operator">:</span> noop<span class="token punctuation">;</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> userDef<span class="token punctuation">.</span>set <span class="token operator">||</span> noop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">===</span> noop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; was assigned to but it has no setter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token keyword">this</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5F00\u59CB\u65F6\u521D\u59CB\u5316\u7684dirty\u4E3Atrue\uFF0C\u6267\u884Cevaluate\uFF0C\u53CA\u6267\u884Cwatcher\u7684get\uFF0C\u8FD9\u4E00\u6B65\u76F8\u5F53\u4E8E\uFF0C\u4F9D\u8D56\u7684data\u7684dep\u6536\u96C6\u4E86\u8FD9\u4E2Awatcher</span>
          watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6536\u96C6\u4E86\u6E32\u67D3watcher</span>
          watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">initMethods</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> methods</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; has type \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot; in the component definition. &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;Did you reference the function correctly?&quot;</span><span class="token punctuation">,</span>
            vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span><span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; has already been defined as a prop.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; conflicts with an existing Vue instance method. &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;Avoid defining component methods that start with _ or $.&quot;</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      vm<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> noop <span class="token operator">:</span> <span class="token function">bind</span><span class="token punctuation">(</span>methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">initWatch</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> watch</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> handler <span class="token operator">=</span> watch<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> handler<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">createWatcher</span> <span class="token punctuation">(</span>
    <span class="token parameter">vm<span class="token punctuation">,</span>
    expOrFn<span class="token punctuation">,</span>
    handler<span class="token punctuation">,</span>
    options</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options <span class="token operator">=</span> handler<span class="token punctuation">;</span>
      handler <span class="token operator">=</span> handler<span class="token punctuation">.</span>handler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> handler <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      handler <span class="token operator">=</span> vm<span class="token punctuation">[</span>handler<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br></div></div></details><h3 id="vue\u4E2D\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#vue\u4E2D\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F" aria-hidden="true">#</a> Vue\u4E2D\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F</h3><blockquote><p>\u7EC4\u4EF6\u7684\u8C03\u7528\u987A\u5E8F\u90FD\u662F<strong>\u5148\u7236\u540E\u5B50</strong>\uFF0C\u6E32\u67D3\u5B8C\u6210\u7684\u987A\u5E8F\u662F<strong>\u5148\u5B50\u540E\u7236</strong> \u7EC4\u4EF6\u7684\u9500\u6BC1\u64CD\u4F5C\u662F\u5148\u7236\u540E\u5B50\uFF0C\u9500\u6BC1\u5B8C\u6210\u7684\u987A\u5E8F\u662F\u5148\u5B50\u540E\u7236</p></blockquote><ul><li>\u52A0\u8F7D\u6E32\u67D3\u8FC7\u7A0B(\u5728\u7236\u7EC4\u4EF6mounted\u6267\u884C\u5B50\u7EC4\u4EF6beforeCreate\u5230mounted\u7684\u8FC7\u7A0B) \u7236beforeCreate-&gt;\u7236created-&gt;\u7236beforeMount-&gt;\u5B50beforeCreate-&gt;\u5B50created-&gt;\u5B50beforeMount- &gt;\u5B50mounted-&gt;\u7236mounted</li><li>\u5B50\u7EC4\u4EF6\u66F4\u65B0\u8FC7\u7A0B \u7236beforeUpdate-&gt;\u5B50beforeUpdate-&gt;\u5B50updated-&gt;\u7236updated</li><li>\u7236\u7EC4\u4EF6\u66F4\u65B0\u8FC7\u7A0B \u7236 beforeUpdate -&gt; \u7236 updated</li><li>\u9500\u6BC1\u8FC7\u7A0B \u7236beforeDestroy-&gt;\u5B50beforeDestroy-&gt;\u5B50destroyed-&gt;\u7236destroyed</li><li>\u8DEF\u7531\u5B88\u536BbeforeRouteEnter\u7684next\u56DE\u8C03\u4F1A\u5728\u7EC4\u4EF6mounted\u540E\u6267\u884C</li></ul><h3 id="\u89C6\u56FE\u6E32\u67D3\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u89C6\u56FE\u6E32\u67D3\u8FC7\u7A0B" aria-hidden="true">#</a> \u89C6\u56FE\u6E32\u67D3\u8FC7\u7A0B</h3><p><img src="`+w+'" alt=""></p>',15),Ys={id:"vue-diff",tabindex:"-1"},Js=n("a",{class:"header-anchor",href:"#vue-diff","aria-hidden":"true"},"#",-1),Xs=s(),Zs={href:"https://mp.weixin.qq.com/s?__biz=MzUxNjQ1NjMwNw==&mid=2247484449&idx=1&sn=7f346b97a177218cc09fc50562ed121c&chksm=f9a66e3dced1e72b8a88fd0d78b5a5b8bd2e0ec95552e675d44923d368bba2ec438c520cd7be&token=946193943&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},na=s("vue Diff"),sa={href:"https://mp.weixin.qq.com/s/CMkXz-CbWIvR52ZzffcnOg",target:"_blank",rel:"noopener noreferrer"},aa=s("patch \u673A\u5236"),pa=s("--\u68B3\u7406\u7684\u6BD4\u8F83\u6E05\u695A"),ta={href:"https://www.jianshu.com/p/92a7496af50c",target:"_blank",rel:"noopener noreferrer"},ea=s("vue2.0\u7684diff\u7B97\u6CD5\u8BE6\u89E3"),oa={href:"https://juejin.cn/post/6844903895467032589",target:"_blank",rel:"noopener noreferrer"},ca=s("\u6DF1\u5165\u5256\u6790\uFF1AVue\u6838\u5FC3\u4E4B\u865A\u62DFDOM"),la=o(`<p>\u5BF9\u6BD4 oldVnode \u548C vnode(<code>patch</code>)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patch</span> <span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> parentElm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">removeVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldVnode<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldVnode<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">removeVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldVnode<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldVnode<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>1\u3001\u6CA1\u6709\u65E7\u8282\u70B9</li></ul><blockquote><p>\u6CA1\u6709\u65E7\u8282\u70B9\uFF0C\u8BF4\u660E\u662F\u9875\u9762\u521A\u5F00\u59CB\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u6B64\u65F6\uFF0C\u6839\u672C\u4E0D\u9700\u8981\u6BD4\u8F83\u4E86\uFF0C\u76F4\u63A5\u5168\u90E8\u90FD\u662F\u65B0\u5EFA\uFF0C\u6240\u4EE5\u53EA\u8C03\u7528 <code>createElm</code></p></blockquote><ul><li>2\u3001\u65E7\u8282\u70B9 \u548C \u65B0\u8282\u70B9 \u81EA\u8EAB\u4E00\u6837\uFF08\u4E0D\u5305\u62EC\u5176\u5B50\u8282\u70B9\uFF09</li></ul><blockquote><p>\u901A\u8FC7 <code>sameVnode</code> \u5224\u65AD\u8282\u70B9\u662F\u5426\u4E00\u6837\uFF0C\u65E7\u8282\u70B9 \u548C \u65B0\u8282\u70B9\u81EA\u8EAB\u4E00\u6837\u65F6\uFF0C\u76F4\u63A5\u8C03\u7528 <code>patchVnode</code> \u53BB\u5904\u7406\u8FD9\u4E24\u4E2A\u8282\u70B9; \u5F53\u4E24\u4E2AVnode\u81EA\u8EAB\u4E00\u6837\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u9700\u8981\u505A\u4EC0\u4E48\uFF1F \u9996\u5148\uFF0C\u81EA\u8EAB\u4E00\u6837\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5148\u7B80\u5355\u7406\u89E3\uFF0C\u662F Vnode \u7684\u4E24\u4E2A\u5C5E\u6027 <code>tag</code> \u548C <code>key</code> \u4E00\u6837; \u90A3\u4E48\uFF0C\u6211\u4EEC\u662F\u4E0D\u77E5\u9053\u5176\u5B50\u8282\u70B9\u662F\u5426\u4E00\u6837\u7684\uFF0C\u6240\u4EE5\u80AF\u5B9A\u9700\u8981\u6BD4\u8F83\u5B50\u8282\u70B9; \u6240\u4EE5\uFF0C<code>patchVnode</code>\u5176\u4E2D\u7684\u4E00\u4E2A\u4F5C\u7528\uFF0C\u5C31\u662F\u6BD4\u8F83\u5B50\u8282\u70B9\u3002</p></blockquote><ul><li>3\u3001\u65E7\u8282\u70B9 \u548C \u65B0\u8282\u70B9\u81EA\u8EAB\u4E0D\u4E00\u6837</li></ul><blockquote><p>\u5F53\u4E24\u4E2A\u8282\u70B9\u4E0D\u4E00\u6837\u7684\u65F6\u5019\uFF0C\u4E0D\u96BE\u7406\u89E3\uFF0C\u76F4\u63A5\u521B\u5EFA\u65B0\u8282\u70B9\uFF0C\u5220\u9664\u65E7\u8282\u70B9</p></blockquote><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">sameVnode</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      a<span class="token punctuation">.</span>key <span class="token operator">===</span> b<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span>
          a<span class="token punctuation">.</span>tag <span class="token operator">===</span> b<span class="token punctuation">.</span>tag <span class="token operator">&amp;&amp;</span>
          a<span class="token punctuation">.</span>isComment <span class="token operator">===</span> b<span class="token punctuation">.</span>isComment <span class="token operator">&amp;&amp;</span>
          <span class="token function">isDef</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">isDef</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          <span class="token function">sameInputType</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>
          <span class="token function">isTrue</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>isAsyncPlaceholder<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          a<span class="token punctuation">.</span>asyncFactory <span class="token operator">===</span> b<span class="token punctuation">.</span>asyncFactory <span class="token operator">&amp;&amp;</span>
          <span class="token function">isUndef</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>asyncFactory<span class="token punctuation">.</span>error<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">sameInputType</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>tag <span class="token operator">!==</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token keyword">var</span> i<span class="token punctuation">;</span>
    <span class="token keyword">var</span> typeA <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> a<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
    <span class="token keyword">var</span> typeB <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> b<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
    <span class="token keyword">return</span> typeA <span class="token operator">===</span> typeB <span class="token operator">||</span> <span class="token function">isTextInputType</span><span class="token punctuation">(</span>typeA<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isTextInputType</span><span class="token punctuation">(</span>typeB<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">patch</span> <span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">var</span> isInitialPatch <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> insertedVnodeQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// empty mount (likely as component), create new root element</span>
        isInitialPatch <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> isRealElement <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRealElement <span class="token operator">&amp;&amp;</span> <span class="token function">sameVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// patch existing root node</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// mounting to a real element</span>
            <span class="token comment">// check if this is server-rendered content and if we can perform</span>
            <span class="token comment">// a successful hydration.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> oldVnode<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              oldVnode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              hydrating <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>hydrating<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> oldVnode
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">warn</span><span class="token punctuation">(</span>
                  <span class="token string">&#39;The client-side rendered virtual DOM tree is not matching &#39;</span> <span class="token operator">+</span>
                  <span class="token string">&#39;server-rendered content. This is likely caused by incorrect &#39;</span> <span class="token operator">+</span>
                  <span class="token string">&#39;HTML markup, for example nesting block-level elements inside &#39;</span> <span class="token operator">+</span>
                  <span class="token string">&#39;&lt;p&gt;, or missing &lt;tbody&gt;. Bailing hydration and performing &#39;</span> <span class="token operator">+</span>
                  <span class="token string">&#39;full client-side render.&#39;</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// either not server-rendered, or hydration failed.</span>
            <span class="token comment">// create an empty node and replace it</span>
            oldVnode <span class="token operator">=</span> <span class="token function">emptyNodeAt</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token comment">// replacing existing element</span>
          <span class="token keyword">var</span> oldElm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
          <span class="token keyword">var</span> parentElm <span class="token operator">=</span> nodeOps<span class="token punctuation">.</span><span class="token function">parentNode</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// create new node</span>
          <span class="token function">createElm</span><span class="token punctuation">(</span>
            vnode<span class="token punctuation">,</span>
            insertedVnodeQueue<span class="token punctuation">,</span>
            <span class="token comment">// extremely rare edge case: do not insert if old element is in a</span>
            <span class="token comment">// leaving transition. Only happens when combining transition +</span>
            <span class="token comment">// keep-alive + HOCs. (#4590)</span>
            oldElm<span class="token punctuation">.</span>_leaveCb <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> parentElm<span class="token punctuation">,</span>
            nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// update parent placeholder node element, recursively</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> ancestor <span class="token operator">=</span> vnode<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
            <span class="token keyword">var</span> patchable <span class="token operator">=</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>destroy<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cbs<span class="token punctuation">.</span>destroy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              ancestor<span class="token punctuation">.</span>elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>patchable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i$1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i$1 <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>create<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i$1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  cbs<span class="token punctuation">.</span>create<span class="token punctuation">[</span>i$1<span class="token punctuation">]</span><span class="token punctuation">(</span>emptyNode<span class="token punctuation">,</span> ancestor<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// #6513</span>
                <span class="token comment">// invoke insert hooks that may have been merged by create hooks.</span>
                <span class="token comment">// e.g. for directives that uses the &quot;inserted&quot; hook.</span>
                <span class="token keyword">var</span> insert <span class="token operator">=</span> ancestor<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hook<span class="token punctuation">.</span>insert<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>insert<span class="token punctuation">.</span>merged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// start at index 1 to avoid re-invoking component mounted hook</span>
                  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i$2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i$2 <span class="token operator">&lt;</span> insert<span class="token punctuation">.</span>fns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i$2<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    insert<span class="token punctuation">.</span>fns<span class="token punctuation">[</span>i$2<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">registerRef</span><span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              ancestor <span class="token operator">=</span> ancestor<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>

          <span class="token comment">// destroy old node</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">removeVnodes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>oldVnode<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> isInitialPatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>elm
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br></div></div></details><h5 id="patchvnode-\u6BD4\u8F83\u4E24\u4E2Avnode-\u7684\u5B50\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#patchvnode-\u6BD4\u8F83\u4E24\u4E2Avnode-\u7684\u5B50\u8282\u70B9" aria-hidden="true">#</a> patchVnode(\u6BD4\u8F83\u4E24\u4E2AVnode \u7684\u5B50\u8282\u70B9)</h5><p>\u603B\u7684\u6765\u8BF4\uFF0C\u8FD9\u4E2A\u51FD\u6570\u7684\u4F5C\u7528\u662F</p><ul><li><p>1\u3001Vnode \u662F\u6587\u672C\u8282\u70B9\uFF0C\u5219\u66F4\u65B0\u6587\u672C\uFF08\u6587\u672C\u8282\u70B9\u4E0D\u5B58\u5728\u5B50\u8282\u70B9\uFF09</p></li><li><p>2\u3001Vnode \u6709\u5B50\u8282\u70B9\uFF0C\u5219\u5904\u7406\u6BD4\u8F83\u66F4\u65B0\u5B50\u8282\u70B9, \u6B64\u65F6\u67093\u79CD\u60C5\u51B5\u3002</p><ul><li><p>1\u3001\u65B0\u65E7\u8282\u70B9 \u90FD\u6709\u5B50\u8282\u70B9\uFF0C\u800C\u4E14\u4E0D\u4E00\u6837,\u8C03\u7528<code>updateChildren</code>\uFF08\u7EC6\u8282\u5F88\u591A\uFF09</p></li><li><p>2\u3001\u53EA\u6709\u65B0\u8282\u70B9(\u4E0D\u7528\u6BD4\u8F83\uFF0C\u76F4\u63A5\u521B\u5EFA\u51FA\u6240\u6709\u65B0DOM\uFF0C\u5E76\u4E14\u6DFB\u52A0\u8FDB\u7236\u8282\u70B9\u7684)</p></li><li><p>3\u3001\u53EA\u6709\u65E7\u8282\u70B9(\u628A\u6240\u6709\u7684\u65E7\u8282\u70B9\u5220\u9664,\u4E5F\u5C31\u662F\u76F4\u63A5\u628ADOM \u5220\u9664)</p></li></ul></li></ul><p>\u4E24\u4E2A\u8282\u70B9\u503C\u5F97\u6BD4\u8F83\u65F6\uFF0C\u4F1A\u8C03\u7528patchVnode\u51FD\u6570</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u903B\u8F91\u63D0\u53D6</span>
<span class="token keyword">function</span> <span class="token function">patchVnode</span> <span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode <span class="token operator">===</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isStatic <span class="token operator">&amp;&amp;</span> oldVnode<span class="token punctuation">.</span>isStatic <span class="token operator">&amp;&amp;</span> vnode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVnode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
        vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
    <span class="token keyword">const</span> oldCh <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
    <span class="token keyword">const</span> ch <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldCh <span class="token operator">!==</span> ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">updateChildren</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">addVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">removeVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">patchVnode</span> <span class="token punctuation">(</span>
  <span class="token parameter">oldVnode<span class="token punctuation">,</span>
  vnode<span class="token punctuation">,</span>
  insertedVnodeQueue<span class="token punctuation">,</span>
  ownerArray<span class="token punctuation">,</span>
  index<span class="token punctuation">,</span>
  removeOnly</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode <span class="token operator">===</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ownerArray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// clone reused vnode</span>
    vnode <span class="token operator">=</span> ownerArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cloneVNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isAsyncPlaceholder<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>asyncFactory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      vnode<span class="token punctuation">.</span>isAsyncPlaceholder <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// reuse element for static trees.</span>
  <span class="token comment">// note we only do this if the vnode is cloned -</span>
  <span class="token comment">// if the new node is not cloned it means the render functions have been</span>
  <span class="token comment">// reset by the hot-reload-api and we need to do a proper re-render.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    vnode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVnode<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isCloned<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isOnce<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">;</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> i<span class="token punctuation">;</span>
  <span class="token keyword">var</span> data <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>prepatch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> oldCh <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token keyword">var</span> ch <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>update<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh <span class="token operator">!==</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">{</span>
        <span class="token function">checkDuplicateKeys</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
      <span class="token function">addVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text <span class="token operator">!==</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>postpatch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br></div></div></details><p><code>const el = vnode.el = oldVnode.el</code> \u8FD9\u662F\u5F88\u91CD\u8981\u7684\u4E00\u6B65\uFF0C\u8BA9vnode.el\u5F15\u7528\u5230\u73B0\u5728\u7684\u771F\u5B9Edom\uFF0C\u5F53el\u4FEE\u6539\u65F6\uFF0Cvnode.el\u4F1A\u540C\u6B65\u53D8\u5316\u3002</p><p>\u8282\u70B9\u7684\u6BD4\u8F83\u67095\u79CD\u60C5\u51B5:</p><p>\u989D\u5916\uFF1A\u5728\u5F53\u65B0\u8001 VNode \u8282\u70B9\u90FD\u662F isStatic\uFF08\u9759\u6001\u7684\uFF09\uFF0C\u5E76\u4E14 key \u76F8\u540C\u65F6\uFF0C\u53EA\u8981\u5C06 componentInstance \u4E0E elm \u4ECE\u8001 VNode \u8282\u70B9\u201C\u62FF\u8FC7\u6765\u201D\u5373\u53EF\u3002\u8FD9\u91CC\u7684 isStatic \u4E5F\u5C31\u662F\u524D\u9762\u63D0\u5230\u8FC7\u7684\u300C\u7F16\u8BD1\u300D\u7684\u65F6\u5019\u4F1A\u5C06\u9759\u6001\u8282\u70B9\u6807\u8BB0\u51FA\u6765\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u8DF3\u8FC7\u6BD4\u5BF9\u7684\u8FC7\u7A0B\u3002</p><ul><li><ol><li><code>if (oldVnode === vnode)</code>\uFF0C\u4ED6\u4EEC\u7684\u5F15\u7528\u4E00\u81F4\uFF0C\u53EF\u4EE5\u8BA4\u4E3A\u6CA1\u6709\u53D8\u5316\u3002</li></ol></li><li><ol start="2"><li><code>if(oldVnode.text !== null &amp;&amp; vnode.text !== null &amp;&amp; oldVnode.text !== vnode.text)</code>\uFF0C\u6587\u672C\u8282\u70B9\u7684\u6BD4\u8F83\uFF0C\u9700\u8981\u4FEE\u6539\uFF0C\u5219\u4F1A\u8C03\u7528<code>Node.textContent = vnode.text</code>\u3002</li></ol></li><li><ol start="3"><li><code>if( oldCh &amp;&amp; ch &amp;&amp; oldCh !== ch )</code>, \u4E24\u4E2A\u8282\u70B9\u90FD\u6709\u5B50\u8282\u70B9\uFF0C\u800C\u4E14\u5B83\u4EEC\u4E0D\u4E00\u6837\uFF0C\u8FD9\u6837\u6211\u4EEC\u4F1A\u8C03\u7528updateChildren\u51FD\u6570\u6BD4\u8F83\u5B50\u8282\u70B9\uFF0C\u8FD9\u662Fdiff\u7684\u6838\u5FC3\uFF0C\u89C1\u4E0B<a href="#updatechildren">updateChildren</a>\u3002</li></ol></li><li><ol start="4"><li><code>else if (ch)</code>\uFF0C\u53EA\u6709\u65B0\u7684\u8282\u70B9\u6709\u5B50\u8282\u70B9\uFF0C\u8C03\u7528<code>createEle(vnode)</code>\uFF0Cvnode.el\u5DF2\u7ECF\u5F15\u7528\u4E86\u8001\u7684dom\u8282\u70B9\uFF0CcreateEle\u51FD\u6570\u4F1A\u5728\u8001dom\u8282\u70B9\u4E0A\u6DFB\u52A0\u5B50\u8282\u70B9\u3002</li></ol></li><li><ol start="5"><li><code>else if (oldCh)</code>\uFF0C\u65B0\u8282\u70B9\u6CA1\u6709\u5B50\u8282\u70B9\uFF0C\u8001\u8282\u70B9\u6709\u5B50\u8282\u70B9\uFF0C\u76F4\u63A5\u5220\u9664\u8001\u8282\u70B9\u3002</li></ol></li></ul><h4 id="vue\u4E2Dkey\u5C5E\u6027\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#vue\u4E2Dkey\u5C5E\u6027\u7684\u4F5C\u7528" aria-hidden="true">#</a> Vue\u4E2Dkey\u5C5E\u6027\u7684\u4F5C\u7528</h4><blockquote><p>\u5F53 Vue.js \u7528<code>v-for</code>\u6B63\u5728\u66F4\u65B0\u5DF2\u6E32\u67D3\u8FC7\u7684\u5143\u7D20\u5217\u8868\u65F6\uFF0C\u5B83\u9ED8\u8BA4\u7528\u201C\u5C31\u5730\u590D\u7528\u201D\u7B56\u7565\u3002\u5982\u679C\u6570\u636E\u9879\u7684\u987A\u5E8F\u88AB\u6539\u53D8\uFF0CVue \u5C06\u4E0D\u4F1A\u79FB\u52A8 DOM \u5143\u7D20\u6765\u5339\u914D\u6570\u636E\u9879\u7684\u987A\u5E8F\uFF0C \u800C\u662F\u7B80\u5355\u590D\u7528\u6B64\u5904\u6BCF\u4E2A\u5143\u7D20\uFF0C\u5E76\u4E14\u786E\u4FDD\u5B83\u5728\u7279\u5B9A\u7D22\u5F15\u4E0B\u663E\u793A\u5DF2\u88AB\u6E32\u67D3\u8FC7\u7684\u6BCF\u4E2A\u5143\u7D20\u3002\u2014\u2014\u2014\u2014\u5B98\u65B9\u6587\u6863</p></blockquote>`,20),ua={id:"\u7528-index-\u505A\u4E3A-key",tabindex:"-1"},ra=n("a",{class:"header-anchor",href:"#\u7528-index-\u505A\u4E3A-key","aria-hidden":"true"},"#",-1),ia=s(),ka={href:"https://zhuanlan.zhihu.com/p/124019708",target:"_blank",rel:"noopener noreferrer"},ba=s("\u7528 index \u505A\u4E3A key"),ma=o(`<ol><li>\u867D\u7136\u627E\u5230\u4E86\u4EE5index\u4E3Akey\u7684\u8282\u70B9\u590D\u7528\u4E86\uFF0C\u5728\u8FDB\u884C <code>patchVnode</code> \u7684\u65F6\u5019\uFF0C \u4F46\u662Fprops\u53D8\u4E86\uFF0Cvue\u4F1A\u6539\u53D8props\uFF0C\u66F4\u65B0\u8FD9\u4E2A\u54CD\u5E94\u5F0F\u7684\u503C\uFF0C\u89E6\u53D1 <code>dep.notify</code>\uFF0C\u89E6\u53D1\u5B50\u7EC4\u4EF6\u89C6\u56FE\u7684\u91CD\u65B0\u6E32\u67D3\u7B49\u4E00\u5957\u5F88\u91CD\u7684\u903B\u8F91\u3002</li></ol><p>\u7136\u540E\uFF0C\u8FD8\u4F1A\u989D\u5916\u7684\u89E6\u53D1\u4EE5\u4E0B\u51E0\u4E2A\u94A9\u5B50\uFF0C\u5047\u8BBE\u6211\u4EEC\u7684\u7EC4\u4EF6\u4E0A\u5B9A\u4E49\u4E86\u4E00\u4E9Bdom\u7684\u5C5E\u6027\u6216\u8005\u7C7B\u540D\u3001\u6837\u5F0F\u3001\u6307\u4EE4\uFF0C\u90A3\u4E48\u90FD\u4F1A\u88AB\u5168\u91CF\u7684\u66F4\u65B0\u3002</p><ol><li>updateAttrs</li><li>updateClass</li><li>updateDOMListeners</li><li>updateDOMProps</li><li>updateStyle</li><li>updateDirectives</li></ol><p><strong>\u7B80\u5355\u8BF4\u5C31\u662F\u6027\u80FD\u635F\u8017</strong></p><ol start="2"><li>\u8282\u70B9\u5220\u9664\u573A\u666F:\u53EF\u80FD\u5BFC\u81F4\u9519\u8BEF\u5220\u9664</li></ol><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(value, index) in arr<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">:index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>index<span class="token punctuation">&#39;</span></span><span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>this.handleDelete<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">handleDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5220\u9664\u7684\u7B2C\u4E00\u9879\uFF0C\u5B9E\u9645\u5220\u9664\u7684\u6700\u540E\u4E00\u9879\uFF0C \u5982\u679Cprops\u4F20\u7684value\uFF0C\u53EF\u4EE5\u6B63\u786E\u5220\u9664</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&quot;&lt;li&gt;{{Math.random()}} - {{ index }} &lt;/li&gt;&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h4 id="updatechildren" tabindex="-1"><a class="header-anchor" href="#updatechildren" aria-hidden="true">#</a> updateChildren</h4><p>\u8FC7\u7A0B\u53EF\u4EE5\u6982\u62EC\u4E3A\uFF1A<code>oldCh</code>\u548C<code>newCh</code>\u5404\u6709\u4E24\u4E2A\u5934\u5C3E\u7684\u53D8\u91CF<code>StartIdx</code>\u548C<code>EndIdx</code>\uFF0C\u5B83\u4EEC\u76842\u4E2A\u53D8\u91CF\u76F8\u4E92\u6BD4\u8F83\uFF0C\u4E00\u5171\u67094\u79CD\u6BD4\u8F83\u65B9\u5F0F\u3002\u5982\u679C4\u79CD\u6BD4\u8F83\u90FD\u6CA1\u5339\u914D\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86<code>key</code>\uFF0C\u5C31\u4F1A\u7528<code>key</code>\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5728\u6BD4\u8F83\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u53D8\u91CF\u4F1A\u5F80\u4E2D\u95F4\u9760\uFF0C\u4E00\u65E6<code>StartIdx&gt;EndIdx</code>\u8868\u660E<code>oldCh</code>\u548C<code>newCh</code>\u81F3\u5C11\u6709\u4E00\u4E2A\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u5C31\u4F1A\u7ED3\u675F\u6BD4\u8F83\u3002</p><ul><li><ol><li>\u65E7\u8282\u70B9<code>oldStartVnode</code>\u6216<code>oldEndVnode</code>\u4E3A<code>undefined</code>\u6216null\uFF0C\u5219index++</li></ol></li><li><ol start="2"><li>\u65B0\u65E7\u5F00\u59CB\u548C\u7ED3\u675F\u8282\u70B9\u6BD4\u8F83\uFF0C\u56DB\u79CD\u60C5\u51B5\u5176\u5B9E\u662F\u6307\u5B9Akey\u7684\u65F6\u5019\uFF0C\u5224\u5B9A\u4E3A\u540C\u4E00\u4E2AVNode\uFF0C\u5219\u76F4\u63A5patchVnode\u5373\u53EF\uFF0C\u5206\u522B\u6BD4\u8F83oldCh\u4EE5\u53CAnewCh\u7684\u4E24\u5934\u8282\u70B92*2=4\u79CD\u60C5\u51B5</li></ol><ul><li>oldStartVnode === newStartVnode =\u300B patchVnode</li><li>oldEndVnode === newEndVnode =\u300B patchVnode</li><li>oldStartVnode === newEndVnode =\u300B pathVode \u5E76\u4E14\uFF0ColdStartVnode\u79FB\u52A8\u5230\u53F3\u8FB9\uFF0C\u5373\u628A\u65E7\u7684\u5F00\u59CB\u8282\u70B9\u63D2\u5165\u5230\u65E7\u7684\u7ED3\u675F\u8282\u70B9\u540E\u9762\u3002\u5C31\u662F\u8001 <code>VNode</code> \u8282\u70B9\u7684\u5934\u90E8\u4E0E\u65B0 <code>VNode</code> \u8282\u70B9\u7684\u5C3E\u90E8\u662F\u540C\u4E00\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u5C06 <code>oldStartVnode.elm</code> \u8FD9\u4E2A\u8282\u70B9\u76F4\u63A5\u79FB\u52A8\u5230 <code>oldEndVnode.elm</code> \u8FD9\u4E2A\u8282\u70B9\u7684\u540E\u9762\u5373\u53EF\u3002\u7136\u540E <code>oldStartIdx</code> \u5411\u540E\u79FB\u52A8\u4E00\u4F4D\uFF0C<code>newEndIdx</code> \u5411\u524D\u79FB\u52A8\u4E00\u4F4D\u3002</li><li>oldEndVnode === newStartVnode =\u300B pathVode \u5E76\u4E14\uFF0ColdEndVnode\u79FB\u52A8\u5230\u5DE6\u8FB9\uFF0C\u5373\u628A\u65E7\u7684\u7ED3\u675F\u8282\u70B9\u63D2\u5165\u5230\u65E7\u7684\u5F00\u59CB\u8282\u70B9\u524D\u9762\u3002\u5C31\u662F\u8001 <code>VNode</code> \u8282\u70B9\u7684\u5C3E\u90E8\u4E0E\u65B0 <code>VNode</code> \u8282\u70B9\u7684\u5934\u90E8\u662F\u540C\u4E00\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u5C06 <code>oldEndVnode.elm</code> \u63D2\u5165\u5230 <code>oldStartVnode.elm</code> \u524D\u9762\u3002\u540C\u6837\u7684\uFF0C<code>oldEndIdx</code> \u5411\u524D\u79FB\u52A8\u4E00\u4F4D\uFF0C<code>newStartIdx</code> \u5411\u540E\u79FB\u52A8\u4E00\u4F4D\u3002</li><li>\u751F\u6210\u4E00\u4E2Akey\u4E0E\u65E7VNode\u7684key\u5BF9\u5E94\u7684\u54C8\u5E0C\u8868\uFF0C \u5982\u679C\u627E\u4E0D\u5230key\uFF0C\u5219\u521B\u5EFA\u63D2\u5165\u3002\u5982\u679C\u627E\u5230\u4E86\u8282\u70B9\uFF0C\u540C\u65F6\u5B83\u7B26\u5408 <code>sameVnode</code>\uFF0C\u5219\u5C06\u8FD9\u4E24\u4E2A\u8282\u70B9\u8FDB\u884C <code>patchVnode</code>\uFF0C\u5C06\u8BE5\u4F4D\u7F6E\u7684\u8001\u8282\u70B9\u8D4B\u503C <code>undefined</code>\uFF08\u4E4B\u540E\u5982\u679C\u8FD8\u6709\u65B0\u8282\u70B9\u4E0E\u8BE5\u8282\u70B9key\u76F8\u540C\u53EF\u4EE5\u68C0\u6D4B\u51FA\u6765\u63D0\u793A\u5DF2\u6709\u91CD\u590D\u7684 key \uFF09\uFF0C\u540C\u65F6\u5C06 <code>newStartVnode.elm</code> \u63D2\u5165\u5230 <code>oldStartVnode.elm</code> \u7684\u524D\u9762\u3002\u540C\u7406\uFF0C<code>newStartIdx</code> \u5F80\u540E\u79FB\u52A8\u4E00\u4F4D\u3002</li></ul></li><li>while\u7ED3\u675F\u65F6\uFF0C\u5982\u679C\u662F<code>oldStartIdx &gt; oldEndIdx</code>\uFF0C\u8BF4\u660E\u8001\u8282\u70B9\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u65B0\u8282\u70B9\u6BD4\u8001\u8282\u70B9\u591A\uFF0C\u6240\u4EE5\u8FD9\u65F6\u5019\u591A\u51FA\u6765\u7684\u65B0\u8282\u70B9\u9700\u8981\u4E00\u4E2A\u4E00\u4E2A\u521B\u5EFA\u51FA\u6765\u52A0\u5165\u5230\u771F\u5B9EDOM\u4E2D\u3002 <code>newStartIdx &gt; newEndIdx</code>\uFF0C\u5219\u8BF4\u660E\u65B0\u8282\u70B9\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u8001\u8282\u70B9\u591A\u4F59\u65B0\u8282\u70B9\uFF0C\u8FD9\u4E2A\u65F6\u5019\u9700\u8981\u5C06\u591A\u4F59\u7684\u8001\u8282\u70B9\u4ECE\u771F\u5B9EDOM\u4E2D\u79FB\u9664</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateChildren</span> <span class="token punctuation">(</span><span class="token parameter">parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> oldEndIdx <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">let</span> oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span>
    <span class="token keyword">let</span> newEndIdx <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">let</span> newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span>
    <span class="token keyword">let</span> oldKeyToIdx<span class="token punctuation">,</span> idxInOld<span class="token punctuation">,</span> elmToMove<span class="token punctuation">,</span> refElm

    <span class="token comment">// removeOnly is a special flag used only by &lt;transition-group&gt;</span>
    <span class="token comment">// to ensure removed elements stay in correct relative positions</span>
    <span class="token comment">// during leaving transitions</span>
    <span class="token keyword">const</span> canMove <span class="token operator">=</span> <span class="token operator">!</span>removeOnly

    <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span> <span class="token comment">// Vnode has been moved left</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u524D\u56DB\u79CD\u60C5\u51B5\u5176\u5B9E\u662F\u6307\u5B9Akey\u7684\u65F6\u5019\uFF0C\u5224\u5B9A\u4E3A\u540C\u4E00\u4E2AVNode\uFF0C\u5219\u76F4\u63A5patchVnode\u5373\u53EF\uFF0C\u5206\u522B\u6BD4\u8F83oldCh\u4EE5\u53CAnewCh\u7684\u4E24\u5934\u8282\u70B92*2=4\u79CD\u60C5\u51B5*/</span>
        <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
        oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
        newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
        oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
        newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved right</span>
        <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
        canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">)</span>
        oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
        newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved left</span>
        <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
        canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
        oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
        newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
          \u751F\u6210\u4E00\u4E2Akey\u4E0E\u65E7VNode\u7684key\u5BF9\u5E94\u7684\u54C8\u5E0C\u8868\uFF08\u53EA\u6709\u7B2C\u4E00\u6B21\u8FDB\u6765undefined\u7684\u65F6\u5019\u4F1A\u751F\u6210\uFF0C\u4E5F\u4E3A\u540E\u9762\u68C0\u6D4B\u91CD\u590D\u7684key\u503C\u505A\u94FA\u57AB\uFF09
          \u6BD4\u5982childre\u662F\u8FD9\u6837\u7684 [{xx: xx, key: &#39;key0&#39;}, {xx: xx, key: &#39;key1&#39;}, {xx: xx, key: &#39;key2&#39;}]  beginIdx = 0   endIdx = 2  
          \u7ED3\u679C\u751F\u6210{key0: 0, key1: 1, key2: 2}
        */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldKeyToIdx<span class="token punctuation">)</span><span class="token punctuation">)</span> oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span>
        <span class="token comment">/*\u5982\u679CnewStartVnode\u65B0\u7684VNode\u8282\u70B9\u5B58\u5728key\u5E76\u4E14\u8FD9\u4E2Akey\u5728oldVnode\u4E2D\u80FD\u627E\u5230\u5219\u8FD4\u56DE\u8FD9\u4E2A\u8282\u70B9\u7684idxInOld\uFF08\u5373\u7B2C\u51E0\u4E2A\u8282\u70B9\uFF0C\u4E0B\u6807\uFF09*/</span>
        idxInOld <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>idxInOld<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// New element</span>
          <span class="token comment">/*newStartVnode\u6CA1\u6709key\u6216\u8005\u662F\u8BE5key\u6CA1\u6709\u5728\u8001\u8282\u70B9\u4E2D\u627E\u5230\u5219\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8282\u70B9*/</span>
          <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
          newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">/*\u83B7\u53D6\u540Ckey\u7684\u8001\u8282\u70B9*/</span>
          elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span>
          <span class="token comment">/* istanbul ignore if */</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>elmToMove<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/*\u5982\u679CelmToMove\u4E0D\u5B58\u5728\u8BF4\u660E\u4E4B\u524D\u5DF2\u7ECF\u6709\u65B0\u8282\u70B9\u653E\u5165\u8FC7\u8FD9\u4E2Akey\u7684DOM\u4E2D\uFF0C\u63D0\u793A\u53EF\u80FD\u5B58\u5728\u91CD\u590D\u7684key\uFF0C\u786E\u4FDDv-for\u7684\u65F6\u5019item\u6709\u552F\u4E00\u7684key\u503C*/</span>
            <span class="token function">warn</span><span class="token punctuation">(</span>
              <span class="token string">&#39;It seems there are duplicate keys that is causing an update error. &#39;</span> <span class="token operator">+</span>
              <span class="token string">&#39;Make sure each v-for item has a unique key.&#39;</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/*Github:https://github.com/answershuto*/</span>
            <span class="token comment">/*\u5982\u679C\u65B0VNode\u4E0E\u5F97\u5230\u7684\u6709\u76F8\u540Ckey\u7684\u8282\u70B9\u662F\u540C\u4E00\u4E2AVNode\u5219\u8FDB\u884CpatchVnode*/</span>
            <span class="token function">patchVnode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
            <span class="token comment">/*\u56E0\u4E3A\u5DF2\u7ECFpatchVnode\u8FDB\u53BB\u4E86\uFF0C\u6240\u4EE5\u5C06\u8FD9\u4E2A\u8001\u8282\u70B9\u8D4B\u503Cundefined\uFF0C\u4E4B\u540E\u5982\u679C\u8FD8\u6709\u65B0\u8282\u70B9\u4E0E\u8BE5\u8282\u70B9key\u76F8\u540C\u53EF\u4EE5\u68C0\u6D4B\u51FA\u6765\u63D0\u793A\u5DF2\u6709\u91CD\u590D\u7684key*/</span>
            oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
            <span class="token comment">/*\u5F53\u6709\u6807\u8BC6\u4F4DcanMove\u5B9E\u53EF\u4EE5\u76F4\u63A5\u63D2\u5165oldStartVnode\u5BF9\u5E94\u7684\u771F\u5B9EDOM\u8282\u70B9\u524D\u9762*/</span>
            canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
            newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// same key but different element. treat as new element</span>
            <span class="token comment">/*\u5F53\u65B0\u7684VNode\u4E0E\u627E\u5230\u7684\u540C\u6837key\u7684VNode\u4E0D\u662FsameVNode\u7684\u65F6\u5019\uFF08\u6BD4\u5982\u8BF4tag\u4E0D\u4E00\u6837\u6216\u8005\u662F\u6709\u4E0D\u4E00\u6837type\u7684input\u6807\u7B7E\uFF09\uFF0C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8282\u70B9*/</span>
            <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
            newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&gt;</span> oldEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u5168\u90E8\u6BD4\u8F83\u5B8C\u6210\u4EE5\u540E\uFF0C\u53D1\u73B0oldStartIdx &gt; oldEndIdx\u7684\u8BDD\uFF0C\u8BF4\u660E\u8001\u8282\u70B9\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u65B0\u8282\u70B9\u6BD4\u8001\u8282\u70B9\u591A\uFF0C\u6240\u4EE5\u8FD9\u65F6\u5019\u591A\u51FA\u6765\u7684\u65B0\u8282\u70B9\u9700\u8981\u4E00\u4E2A\u4E00\u4E2A\u521B\u5EFA\u51FA\u6765\u52A0\u5165\u5230\u771F\u5B9EDOM\u4E2D*/</span>
      refElm <span class="token operator">=</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm
      <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIdx <span class="token operator">&gt;</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u5982\u679C\u5168\u90E8\u6BD4\u8F83\u5B8C\u6210\u4EE5\u540E\u53D1\u73B0newStartIdx &gt; newEndIdx\uFF0C\u5219\u8BF4\u660E\u65B0\u8282\u70B9\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u8001\u8282\u70B9\u591A\u4F59\u65B0\u8282\u70B9\uFF0C\u8FD9\u4E2A\u65F6\u5019\u9700\u8981\u5C06\u591A\u4F59\u7684\u8001\u8282\u70B9\u4ECE\u771F\u5B9EDOM\u4E2D\u79FB\u9664*/</span>
      <span class="token function">removeVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div></details><p><img src="`+g+'" alt=""></p><p><img src="'+v+`" alt=""></p><h2 id="vue3-0-diff" tabindex="-1"><a class="header-anchor" href="#vue3-0-diff" aria-hidden="true">#</a> vue3.0 diff</h2><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> patchChildren<span class="token operator">:</span> <span class="token function-variable function">PatchChildrenFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  n1<span class="token punctuation">,</span>
  n2<span class="token punctuation">,</span>
  container<span class="token punctuation">,</span>
  anchor<span class="token punctuation">,</span>
  parentComponent<span class="token punctuation">,</span>
  parentSuspense<span class="token punctuation">,</span>
  isSVG<span class="token punctuation">,</span>
  slotScopeIds<span class="token punctuation">,</span>
  optimized <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> c1 <span class="token operator">=</span> n1 <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>children
  <span class="token keyword">const</span> prevShapeFlag <span class="token operator">=</span> n1 <span class="token operator">?</span> n1<span class="token punctuation">.</span>shapeFlag <span class="token operator">:</span> <span class="token number">0</span>
  <span class="token keyword">const</span> c2 <span class="token operator">=</span> n2<span class="token punctuation">.</span>children

  <span class="token keyword">const</span> <span class="token punctuation">{</span> patchFlag<span class="token punctuation">,</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2
  <span class="token comment">// fast path</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&amp;</span> PatchFlags<span class="token punctuation">.</span><span class="token constant">KEYED_FRAGMENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// this could be either fully-keyed or mixed (some keyed some not)</span>
      <span class="token comment">// presence of patchFlag means children are guaranteed to be arrays</span>
      <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span>
        c1 <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        c2 <span class="token keyword">as</span> VNodeArrayChildren<span class="token punctuation">,</span>
        container<span class="token punctuation">,</span>
        anchor<span class="token punctuation">,</span>
        parentComponent<span class="token punctuation">,</span>
        parentSuspense<span class="token punctuation">,</span>
        isSVG<span class="token punctuation">,</span>
        slotScopeIds<span class="token punctuation">,</span>
        optimized
      <span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&amp;</span> PatchFlags<span class="token punctuation">.</span><span class="token constant">UNKEYED_FRAGMENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// unkeyed</span>
      <span class="token function">patchUnkeyedChildren</span><span class="token punctuation">(</span>
        c1 <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        c2 <span class="token keyword">as</span> VNodeArrayChildren<span class="token punctuation">,</span>
        container<span class="token punctuation">,</span>
        anchor<span class="token punctuation">,</span>
        parentComponent<span class="token punctuation">,</span>
        parentSuspense<span class="token punctuation">,</span>
        isSVG<span class="token punctuation">,</span>
        slotScopeIds<span class="token punctuation">,</span>
        optimized
      <span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// children has 3 possibilities: text, array or no children.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TEXT_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// text children fast path</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevShapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unmountChildren</span><span class="token punctuation">(</span>c1 <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c2 <span class="token operator">!==</span> c1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">hostSetElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> c2 <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevShapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// prev children was array</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// two arrays, cannot assume anything, do full diff</span>
        <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span>
          c1 <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          c2 <span class="token keyword">as</span> VNodeArrayChildren<span class="token punctuation">,</span>
          container<span class="token punctuation">,</span>
          anchor<span class="token punctuation">,</span>
          parentComponent<span class="token punctuation">,</span>
          parentSuspense<span class="token punctuation">,</span>
          isSVG<span class="token punctuation">,</span>
          slotScopeIds<span class="token punctuation">,</span>
          optimized
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// no new children, just unmount old</span>
        <span class="token function">unmountChildren</span><span class="token punctuation">(</span>c1 <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// prev children was text OR null</span>
      <span class="token comment">// new children is array OR null</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>prevShapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TEXT_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">hostSetElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// mount new if array</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">mountChildren</span><span class="token punctuation">(</span>
          c2 <span class="token keyword">as</span> VNodeArrayChildren<span class="token punctuation">,</span>
          container<span class="token punctuation">,</span>
          anchor<span class="token punctuation">,</span>
          parentComponent<span class="token punctuation">,</span>
          parentSuspense<span class="token punctuation">,</span>
          isSVG<span class="token punctuation">,</span>
          slotScopeIds<span class="token punctuation">,</span>
          optimized
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">patchUnkeyedChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  c1<span class="token operator">:</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  c2<span class="token operator">:</span> VNodeArrayChildren<span class="token punctuation">,</span>
  container<span class="token operator">:</span> RendererElement<span class="token punctuation">,</span>
  anchor<span class="token operator">:</span> RendererNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  parentComponent<span class="token operator">:</span> ComponentInternalInstance <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  parentSuspense<span class="token operator">:</span> SuspenseBoundary <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  isSVG<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  slotScopeIds<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  optimized<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  c1 <span class="token operator">=</span> c1 <span class="token operator">||</span> <span class="token constant">EMPTY_ARR</span>
  c2 <span class="token operator">=</span> c2 <span class="token operator">||</span> <span class="token constant">EMPTY_ARR</span>
  <span class="token keyword">const</span> oldLength <span class="token operator">=</span> c1<span class="token punctuation">.</span>length
  <span class="token keyword">const</span> newLength <span class="token operator">=</span> c2<span class="token punctuation">.</span>length
  <span class="token keyword">const</span> commonLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>oldLength<span class="token punctuation">,</span> newLength<span class="token punctuation">)</span>
  <span class="token keyword">let</span> i
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> commonLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> nextChild <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
      <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">patch</span><span class="token punctuation">(</span>
      c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>
      nextChild<span class="token punctuation">,</span>
      container<span class="token punctuation">,</span>
      <span class="token keyword">null</span><span class="token punctuation">,</span>
      parentComponent<span class="token punctuation">,</span>
      parentSuspense<span class="token punctuation">,</span>
      isSVG<span class="token punctuation">,</span>
      slotScopeIds<span class="token punctuation">,</span>
      optimized
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldLength <span class="token operator">&gt;</span> newLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// remove old</span>
    <span class="token function">unmountChildren</span><span class="token punctuation">(</span>
      c1<span class="token punctuation">,</span>
      parentComponent<span class="token punctuation">,</span>
      parentSuspense<span class="token punctuation">,</span>
      <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      commonLength
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// mount new</span>
    <span class="token class-name">mountChildren</span><span class="token punctuation">(</span>
      c2<span class="token punctuation">,</span>
      container<span class="token punctuation">,</span>
      anchor<span class="token punctuation">,</span>
      parentComponent<span class="token punctuation">,</span>
      parentSuspense<span class="token punctuation">,</span>
      isSVG<span class="token punctuation">,</span>
      slotScopeIds<span class="token punctuation">,</span>
      optimized<span class="token punctuation">,</span>
      commonLength
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// can be all-keyed or mixed</span>
<span class="token keyword">const</span> <span class="token function-variable function">patchKeyedChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  c1<span class="token operator">:</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  c2<span class="token operator">:</span> VNodeArrayChildren<span class="token punctuation">,</span>
  container<span class="token operator">:</span> RendererElement<span class="token punctuation">,</span>
  parentAnchor<span class="token operator">:</span> RendererNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  parentComponent<span class="token operator">:</span> ComponentInternalInstance <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  parentSuspense<span class="token operator">:</span> SuspenseBoundary <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  isSVG<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  slotScopeIds<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  optimized<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">const</span> l2 <span class="token operator">=</span> c2<span class="token punctuation">.</span>length
  <span class="token keyword">let</span> e1 <span class="token operator">=</span> c1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// prev ending index</span>
  <span class="token keyword">let</span> e2 <span class="token operator">=</span> l2 <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// next ending index</span>

  <span class="token comment">// 1. sync from start</span>
  <span class="token comment">// (a b) c</span>
  <span class="token comment">// (a b) d e</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1 <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n1 <span class="token operator">=</span> c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
      <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>
        n1<span class="token punctuation">,</span>
        n2<span class="token punctuation">,</span>
        container<span class="token punctuation">,</span>
        <span class="token keyword">null</span><span class="token punctuation">,</span>
        parentComponent<span class="token punctuation">,</span>
        parentSuspense<span class="token punctuation">,</span>
        isSVG<span class="token punctuation">,</span>
        slotScopeIds<span class="token punctuation">,</span>
        optimized
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
    i<span class="token operator">++</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 2. sync from end</span>
  <span class="token comment">// a (b c)</span>
  <span class="token comment">// d e (b c)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1 <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n1 <span class="token operator">=</span> c1<span class="token punctuation">[</span>e1<span class="token punctuation">]</span>
    <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
      <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>
        n1<span class="token punctuation">,</span>
        n2<span class="token punctuation">,</span>
        container<span class="token punctuation">,</span>
        <span class="token keyword">null</span><span class="token punctuation">,</span>
        parentComponent<span class="token punctuation">,</span>
        parentSuspense<span class="token punctuation">,</span>
        isSVG<span class="token punctuation">,</span>
        slotScopeIds<span class="token punctuation">,</span>
        optimized
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
    e1<span class="token operator">--</span>
    e2<span class="token operator">--</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 3. common sequence + mount</span>
  <span class="token comment">// (a b)</span>
  <span class="token comment">// (a b) c</span>
  <span class="token comment">// i = 2, e1 = 1, e2 = 2</span>
  <span class="token comment">// (a b)</span>
  <span class="token comment">// c (a b)</span>
  <span class="token comment">// i = 0, e1 = -1, e2 = 0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nextPos <span class="token operator">=</span> e2 <span class="token operator">+</span> <span class="token number">1</span>
      <span class="token keyword">const</span> anchor <span class="token operator">=</span> nextPos <span class="token operator">&lt;</span> l2 <span class="token operator">?</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>nextPos<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span><span class="token punctuation">.</span>el <span class="token operator">:</span> parentAnchor
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patch</span><span class="token punctuation">(</span>
          <span class="token keyword">null</span><span class="token punctuation">,</span>
          <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
            <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span>
            <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          container<span class="token punctuation">,</span>
          anchor<span class="token punctuation">,</span>
          parentComponent<span class="token punctuation">,</span>
          parentSuspense<span class="token punctuation">,</span>
          isSVG<span class="token punctuation">,</span>
          slotScopeIds<span class="token punctuation">,</span>
          optimized
        <span class="token punctuation">)</span>
        i<span class="token operator">++</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

    <span class="token comment">// 4. common sequence + unmount</span>
    <span class="token comment">// (a b) c</span>
    <span class="token comment">// (a b)</span>
    <span class="token comment">// i = 2, e1 = 2, e2 = 1</span>
    <span class="token comment">// a (b c)</span>
    <span class="token comment">// (b c)</span>
  <span class="token comment">// i = 0, e1 = 0, e2 = -1</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unmount</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      i<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

    <span class="token comment">// 5. unknown sequence</span>
    <span class="token comment">// [i ... e1 + 1]: a b [c d e] f g</span>
    <span class="token comment">// [i ... e2 + 1]: a b [e d c h] f g</span>
  <span class="token comment">// i = 2, e1 = 4, e2 = 5</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> s1 <span class="token operator">=</span> i <span class="token comment">// prev starting index</span>
    <span class="token keyword">const</span> s2 <span class="token operator">=</span> i <span class="token comment">// next starting index</span>

    <span class="token comment">// 5.1 build key:index map for newChildren</span>
    <span class="token keyword">const</span> keyToNewIndexMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> s2<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nextChild <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
        <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Duplicate keys found during update:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
            <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Make sure keys are unique.</span><span class="token template-punctuation string">\`</span></span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 5.2 loop through old children left to be patched and try to patch</span>
    <span class="token comment">// matching nodes &amp; remove nodes that are no longer present</span>
    <span class="token keyword">let</span> j
    <span class="token keyword">let</span> patched <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> toBePatched <span class="token operator">=</span> e2 <span class="token operator">-</span> s2 <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">let</span> moved <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">// used to track whether any node has moved</span>
    <span class="token keyword">let</span> maxNewIndexSoFar <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// works as Map&lt;newIndex, oldIndex&gt;</span>
    <span class="token comment">// Note that oldIndex is offset by +1</span>
    <span class="token comment">// and oldIndex = 0 is a special value indicating the new node has</span>
    <span class="token comment">// no corresponding old node.</span>
    <span class="token comment">// used for determining longest stable subsequence</span>
    <span class="token keyword">const</span> newIndexToOldIndexMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>toBePatched<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> toBePatched<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> newIndexToOldIndexMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> s1<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> e1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> prevChild <span class="token operator">=</span> c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>patched <span class="token operator">&gt;=</span> toBePatched<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// all new children have been patched so this can only be a removal</span>
        <span class="token function">unmount</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">continue</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> newIndex
      <span class="token keyword">if</span> <span class="token punctuation">(</span>prevChild<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newIndex <span class="token operator">=</span> keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// key-less node, try to locate a key-less node of the same type</span>
        <span class="token class-name"><span class="token keyword">for</span></span> <span class="token punctuation">(</span>j <span class="token operator">=</span> s2<span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> e2<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>
            newIndexToOldIndexMap<span class="token punctuation">[</span>j <span class="token operator">-</span> s2<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
            <span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> c2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span>
          <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newIndex <span class="token operator">=</span> j
            <span class="token keyword">break</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">unmount</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        newIndexToOldIndexMap<span class="token punctuation">[</span>newIndex <span class="token operator">-</span> s2<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&gt;=</span> maxNewIndexSoFar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          maxNewIndexSoFar <span class="token operator">=</span> newIndex
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          moved <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token function">patch</span><span class="token punctuation">(</span>
          prevChild<span class="token punctuation">,</span>
          c2<span class="token punctuation">[</span>newIndex<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">,</span>
          container<span class="token punctuation">,</span>
          <span class="token keyword">null</span><span class="token punctuation">,</span>
          parentComponent<span class="token punctuation">,</span>
          parentSuspense<span class="token punctuation">,</span>
          isSVG<span class="token punctuation">,</span>
          slotScopeIds<span class="token punctuation">,</span>
          optimized
        <span class="token punctuation">)</span>
        patched<span class="token operator">++</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 5.3 move and mount</span>
    <span class="token comment">// generate longest stable subsequence only when nodes have moved</span>
    <span class="token keyword">const</span> increasingNewIndexSequence <span class="token operator">=</span> moved
      <span class="token operator">?</span> <span class="token function">getSequence</span><span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token constant">EMPTY_ARR</span>
    j <span class="token operator">=</span> increasingNewIndexSequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token comment">// looping backwards so that we can use last patched node as anchor</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> toBePatched <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nextIndex <span class="token operator">=</span> s2 <span class="token operator">+</span> i
      <span class="token keyword">const</span> nextChild <span class="token operator">=</span> c2<span class="token punctuation">[</span>nextIndex<span class="token punctuation">]</span> <span class="token keyword">as</span> VNode
      <span class="token keyword">const</span> anchor <span class="token operator">=</span>
        nextIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> l2 <span class="token operator">?</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>nextIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">as</span> VNode<span class="token punctuation">)</span><span class="token punctuation">.</span>el <span class="token operator">:</span> parentAnchor
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// mount new</span>
        <span class="token class-name">patch</span><span class="token punctuation">(</span>
          <span class="token keyword">null</span><span class="token punctuation">,</span>
          nextChild<span class="token punctuation">,</span>
          container<span class="token punctuation">,</span>
          anchor<span class="token punctuation">,</span>
          parentComponent<span class="token punctuation">,</span>
          parentSuspense<span class="token punctuation">,</span>
          isSVG<span class="token punctuation">,</span>
          slotScopeIds<span class="token punctuation">,</span>
          optimized
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>moved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// move if:</span>
        <span class="token comment">// There is no stable subsequence (e.g. a reverse)</span>
        <span class="token comment">// OR current node is not among the stable sequence</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">!==</span> increasingNewIndexSequence<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">move</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> MoveType<span class="token punctuation">.</span><span class="token constant">REORDER</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          j<span class="token operator">--</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br></div></div></details>`,14),da={href:"https://blog.csdn.net/zl_Alien/article/details/106595459",target:"_blank",rel:"noopener noreferrer"},ha=s("vue3.0 diff\u7B97\u6CD5\u8BE6\u89E3"),fa={href:"https://mp.weixin.qq.com/s/fUnKx_Cts8nCaM7n31kKVw",target:"_blank",rel:"noopener noreferrer"},ya=s("Vue 3.0 diff \u7B97\u6CD5\u53CA\u539F\u7406"),wa={href:"https://juejin.cn/post/7067908644444045325",target:"_blank",rel:"noopener noreferrer"},ga=s("\u6D41\u7A0B\u56FE"),va=o(`<p>\u5728 Vue3 \u4E2D\u5C06\u91C7\u7528\u53E6\u5916\u4E00\u79CD\u6838\u5FC3 Diff \u7B97\u6CD5\uFF0C\u5B83\u501F\u9274\u4E8E <code>ivi</code> \u548C <code>inferno</code>\u3002</p><p>\u8BE5\u7B97\u6CD5\u5176\u4E2D\u6709\u4E24\u4E2A\u7406\u5FF5\u3002\u7B2C\u4E00\u4E2A\u662F<strong>\u76F8\u540C\u7684\u524D\u7F6E\u4E0E\u540E\u7F6E\u5143\u7D20\u7684\u9884\u5904\u7406</strong>\uFF1B\u7B2C\u4E8C\u4E2A\u5219\u662F<strong>\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</strong>\uFF0C\u6B64\u601D\u60F3\u4E0EReact\u7684diff\u7C7B\u4F3C\u53C8\u4E0D\u5C3D\u76F8\u540C\u3002</p><p>patchChildren\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5B58\u5728 <code>patchUnkeyedChildren</code>\u548C<code>patchKeyedChildren</code></p><h5 id="patchunkeyedchildren" tabindex="-1"><a class="header-anchor" href="#patchunkeyedchildren" aria-hidden="true">#</a> patchUnkeyedChildren</h5><ol><li>\u6BD4\u8F83\u65B0\u8001children\u7684length\u83B7\u53D6\u6700\u5C0F\u503C \u7136\u540E\u5BF9\u4E8E\u516C\u5171\u90E8\u5206\uFF0C\u8FDB\u884C\u4ECE\u65B0patch\u5DE5\u4F5C\u3002</li><li>\u5982\u679C\u8001\u8282\u70B9\u6570\u91CF\u5927\u4E8E\u65B0\u7684\u8282\u70B9\u6570\u91CF \uFF0C\u79FB\u9664\u591A\u51FA\u6765\u7684\u8282\u70B9\u3002</li><li>\u5982\u679C\u65B0\u7684\u8282\u70B9\u6570\u91CF\u5927\u4E8E\u8001\u8282\u70B9\u7684\u6570\u91CF\uFF0C\u4ECE\u65B0 mountChildren\u65B0\u589E\u7684\u8282\u70B9\u3002</li></ol><h5 id="patchkeyedchildren" tabindex="-1"><a class="header-anchor" href="#patchkeyedchildren" aria-hidden="true">#</a> patchKeyedChildren</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> e1 <span class="token operator">=</span> oldNodes<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> e2 <span class="token operator">=</span> newNodes<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol><li>\u7B2C\u4E00\u6B65\u4ECE\u5934\u5F00\u59CB\u5411\u5C3Ediff\uFF0C\u4ECE\u5934\u5BF9\u6BD4\u627E\u5230\u6709\u76F8\u540C\u7684\u8282\u70B9 <code>patch</code> \uFF0C\u53D1\u73B0\u4E0D\u540C\uFF0C\u7ACB\u5373\u8DF3\u51FA (<code>i++</code>)</li><li>\u7B2C\u4E8C\u6B65\u4ECE\u5C3E\u5F00\u59CB\u5F80\u524Ddiff\uFF0C\u5982\u679C\u7B2C\u4E00\u6B65\u6CA1\u6709<code>patch\u5B8C</code>\uFF0C\u7ACB\u5373\uFF0C\u4ECE\u540E\u5F80\u524D\u5F00\u59CB<code>patch</code>\uFF0C\u5982\u679C\u53D1\u73B0\u4E0D\u540C\u7ACB\u5373\u8DF3\u51FA\u5FAA\u73AF(<code>e1--</code>, <code>e2--</code>)</li><li>\u65B0\u8282\u70B9mount,\u5982\u679C<code>i &gt; e1 &amp;&amp; i &lt;= e2</code> \uFF0C\u5BF9\u4E8E\u5269\u4E0B\u7684\u8282\u70B9\u5168\u90E8\u4EE5\u65B0\u7684vnode\u5904\u7406\uFF08\u8FD9\u79CD\u60C5\u51B5\u8BF4\u660E\u5DF2\u7ECFpatch\u5B8C\u76F8\u540C\u7684vnode\uFF09(<code>i++</code>)</li><li>\u65E7\u8282\u70B9unmount\uFF0C\u5982\u679C<code>i&gt;e2 &amp;&amp; i&lt;=e1</code> \uFF0C\u5BF9\u4E8E\u8D85\u51FA\u7684\u8282\u70B9\u5168\u90E8\u5378\u8F7D\uFF08\u8FD9\u79CD\u60C5\u51B5\u8BF4\u660E\u5DF2\u7ECFpatch\u5B8C\u76F8\u540C\u7684vnode\uFF09(<code>i++</code>)</li><li>\u60C5\u51B5\u53EA\u5269\u4E0B\u65B0\u8001\u8282\u70B9\u90FD\u8FD8\u6709\u5269\u4F59\uFF0C\u6CA1\u6709patch\u5B8C\u76F8\u540C\u7684vnode -- <code>unknown sequence</code>\u4E0D\u786E\u5B9A\u5E8F\u5217\uFF0C\u53CA\u6709\u8282\u70B9\u9700\u8981\u79FB\u52A8\u3002 <ol><li>\u904D\u5386\u6240\u6709<code>\u65B0\u8282\u70B9</code>\u628A\u7D22\u5F15\u548C\u5BF9\u5E94\u7684key,\u5B58\u5165map <code>keyToNewIndexMap</code>\u4E2D\uFF0C2.0\u662F\u5EFA\u7ACB\u7684\u8001\u8282\u70B9\u7684mapKey</li><li>\u6839\u636E\u4E4B\u524D\u7684\u7B97\u51FA\u65B0\u8282\u70B9\u8FD8\u9700\u8981patch\u7684\u4E2A\u6570\uFF0C<code>toBePatched</code>\uFF0C\u58F0\u660E<code>newIndexToOldIndexMap</code> \u7528\u6765\u5B58\u653E<code>\u65B0\u8282\u70B9\u7D22\u5F15</code>\u548C<code>\u8001\u8282\u70B9\u7D22\u5F15\u7684\u6570\u7EC4</code>\u3002newIndexToOldIndexMap \u6570\u7EC4\u7684<code>index</code>\u662F<code>\u65B0vnode</code>\u7684\u7D22\u5F15 \uFF0C <code>value</code>\u662F<code>\u8001vnode</code>\u7684\u7D22\u5F15\u3002(\u65B0\u65E7\u8282\u70B9\u7684\u5BF9\u5E94\u5173\u7CFB)</li><li><strong>\u904D\u5386\u8001\u7684Vnode</strong>\uFF0C\u8FD9\u4E00\u6B65\u662F<code>unmount</code>\u5378\u8F7D\u4E0D\u80FD\u590D\u7528\u7684\u8001\u8282\u70B9\uFF0C\u5E76\u4E14\u586B\u5145<code>newIndexToOldIndexMap</code>\uFF0C\u63A5\u4E0B\u6765\u5C31\u662F\u8981\u5904\u7406\u65B0\u8282\u70B9\u4E2D\u65B0\u589E\u7684\u548C\u590D\u7528\u7684\u4E14\u8981\u79FB\u52A8\u4F4D\u7F6E\u7684\u3002</li><li>\u5982\u679C<code>patched &gt;= toBePatched</code>\uFF08\u5373\u65B0\u8282\u70B9\u5DF2\u7ECF\u5904\u7406\u5B8C\u4E86\uFF09\uFF0C\u5378\u8F7D\u8001\u8282\u70B9</li><li>\u5982\u679C\uFF0C\u8001\u8282\u70B9\u7684key\u5982\u679C\u5728\u65B0\u8282\u70B9\u4E2D\u5B58\u5728 \uFF0C\u901A\u8FC7key\u627E\u5230\u5BF9\u5E94\u7684<code>index</code>\uFF0C\u5426\u5219\u5219\u662F\u904D\u5386\u65B0\u8282\u70B9\uFF0C\u6BD4\u8F83isSame\uFF0C\u603B\u4E4B\u5C31\u662F\u60F3\u590D\u7528\u8282\u70B9\uFF0C\u5E76\u628A\u8001\u8282\u70B9\u7684index\u653E\u5728<code>newIndexToOldIndexMap</code>\u4E2D\uFF0C\u901A\u8FC7\u5BFB\u627E\u6700\u957F\u589E\u957F\u5B50\u5E8F\u5217\u6765\u505A\u5230\u6700\u5C0F\u79FB\u52A8</li></ol></li></ol><p>\u6838\u5FC3\u6B65\u9AA4\uFF1A</p><p>\u7B2C\u4E00\u6B65\uFF1A \u901A\u8FC7\u8001\u8282\u70B9\u7684key\u627E\u5230\u5BF9\u5E94\u65B0\u8282\u70B9\u7684index:\u5F00\u59CB\u904D\u5386\u8001\u7684\u8282\u70B9\uFF0C\u5224\u65AD\u6709\u6CA1\u6709key\uFF0C \u5982\u679C\u5B58\u5728key\u901A\u8FC7\u65B0\u8282\u70B9\u7684keyToNewIndexMap\u627E\u5230\u4E0E\u65B0\u8282\u70B9index,\u5982\u679C\u4E0D\u5B58\u5728key\u90A3\u4E48\u4F1A\u904D\u5386\u5269\u4E0B\u6765\u7684\u65B0\u8282\u70B9\u8BD5\u56FE\u627E\u5230\u5BF9\u5E94index\u3002</p><p>\u7B2C\u4E8C\u6B65\uFF1A\u5982\u679C\u5B58\u5728index\u8BC1\u660E\u6709\u5BF9\u5E94\u7684\u8001\u8282\u70B9\uFF0C\u90A3\u4E48\u76F4\u63A5\u590D\u7528\u8001\u8282\u70B9\u8FDB\u884Cpatch\uFF0C\u6CA1\u6709\u627E\u5230\u4E0E\u8001\u8282\u70B9\u5BF9\u5E94\u7684\u65B0\u8282\u70B9\uFF0C\u5220\u9664\u5F53\u524D\u8001\u8282\u70B9\u3002</p><p>\u7B2C\u4E09\u6B65\uFF1AnewIndexToOldIndexMap\u627E\u5230\u5BF9\u5E94\u65B0\u8001\u8282\u70B9\u5173\u7CFB\u3002</p><p>patch\u4E86\u4E00\u904D\uFF0C\u628A\u6240\u6709\u7684\u8001vnode\u90FDpatch\u4E86\u4E00\u904D\u3002</p><p><strong>\u4E3A\u4EC0\u4E48\u8981\u627E\u6700\u957F\u589E\u957F\u5B50\u5E8F\u5217</strong>\uFF0C\u56E0\u4E3A\u5F97\u5230\u7684<code>newIndexToOldIndexMap</code>\u6570\u7EC4\u8868\u793A\u7684\u662F\u65B0\u8282\u70B9\u5728\u8001\u7684\u8282\u70B9\u7684index\uFF0C\u5728\u8FD9\u4E2A\u6570\u7EC4\u4E2D\u4F9D\u6B21\u6392\u653E\uFF0C\u6240\u4EE5\uFF0C\u8001\u8282\u70B9\u662F\u589E\u5E8F\u6392\u7684\uFF0C\u5C31\u4E0D\u9700\u8981\u79FB\u52A8</p><p><img src="`+_+'" alt=""></p><p><img src="'+x+'" alt=""></p><p>\u53CC\u7AEF\u6BD4\u8F83\u65F6\u7684\u4F18\u5316\uFF1A</p><ul><li>\u5224\u65AD\u662F\u5426\u6709\u8282\u70B9\u9700\u8981\u79FB\u52A8\uFF0C\u5C06\u9700\u8981\u79FB\u52A8\u7684\u8282\u70B9\u52A0\u5165 source \u6570\u7EC4\u4E2D\u3002</li><li>\u6839\u636E source \u6570\u7EC4\u8BA1\u7B97\u51FA\u4E00\u4E2A\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF08\u8BA1\u7B97\u51FA\u6700\u5C0F\u7684\u79FB\u52A8\uFF09\u3002</li><li>\u79FB\u52A8 Dom \u64CD\u4F5C\u3002</li></ul><h3 id="\u865A\u62DFdom" tabindex="-1"><a class="header-anchor" href="#\u865A\u62DFdom" aria-hidden="true">#</a> \u865A\u62DFdom</h3>',19),_a={href:"https://mp.weixin.qq.com/s/oAlVmZ4Hbt2VhOwFEkNEhw",target:"_blank",rel:"noopener noreferrer"},xa=s("\u865A\u62DF DOM \u5230\u5E95\u662F\u4EC0\u4E48\uFF1F(\u957F\u6587\u5EFA\u8BAE\u6536\u85CF)"),Va={href:"https://zhuanlan.zhihu.com/p/35876032",target:"_blank",rel:"noopener noreferrer"},qa=s("\u63A2\u7D22Virtual DOM\u7684\u524D\u4E16\u4ECA\u751F"),Ea={href:"https://juejin.cn/post/6898526276529684493",target:"_blank",rel:"noopener noreferrer"},Ca=s("Virtual DOM \u8BA4\u77E5\u8BEF\u533A"),Sa={href:"https://juejin.cn/post/6844903902429577229",target:"_blank",rel:"noopener noreferrer"},ja=s("\u9762\u8BD5\u5B98: \u4F60\u5BF9\u865A\u62DFDOM\u539F\u7406\u7684\u7406\u89E3?"),Da={id:"keep-alive\u539F\u7406",tabindex:"-1"},Ia=n("a",{class:"header-anchor",href:"#keep-alive\u539F\u7406","aria-hidden":"true"},"#",-1),Oa=s(),Aa={href:"https://juejin.im/post/6862206197877964807",target:"_blank",rel:"noopener noreferrer"},Ta=s("keep-alive\u539F\u7406"),Ma={href:"https://mp.weixin.qq.com/s/kT2F9ZPs6qt_9RCfkVY78Q",target:"_blank",rel:"noopener noreferrer"},Na=s("\u624B\u5199 LRU \u7F13\u5B58\u7B56\u7565\uFF0C\u4E86\u89E3 Vue \u7684 keep-alive \u5B9E\u73B0"),Fa={id:"vue-extend",tabindex:"-1"},Ra=n("a",{class:"header-anchor",href:"#vue-extend","aria-hidden":"true"},"#",-1),Pa=s(),Ba={href:"https://zhuanlan.zhihu.com/p/342643253",target:"_blank",rel:"noopener noreferrer"},$a=s("Vue.extend"),La={id:"\u5B9E\u73B0\u53CC\u5411\u7ED1\u5B9Aproxy\u6BD4defineproperty\u4F18\u52A3\u5982\u4F55",tabindex:"-1"},za=n("a",{class:"header-anchor",href:"#\u5B9E\u73B0\u53CC\u5411\u7ED1\u5B9Aproxy\u6BD4defineproperty\u4F18\u52A3\u5982\u4F55","aria-hidden":"true"},"#",-1),Wa=s(),Ua={href:"https://juejin.cn/post/6844903601416978439",target:"_blank",rel:"noopener noreferrer"},Ga=s("\u5B9E\u73B0\u53CC\u5411\u7ED1\u5B9AProxy\u6BD4defineProperty\u4F18\u52A3\u5982\u4F55"),Ha={id:"\u4E3A\u4EC0\u4E48vue3-0\u4E0D\u518D\u4F7F\u7528defineproperty\u5B9E\u73B0\u6570\u636E\u76D1\u542C",tabindex:"-1"},Qa=n("a",{class:"header-anchor",href:"#\u4E3A\u4EC0\u4E48vue3-0\u4E0D\u518D\u4F7F\u7528defineproperty\u5B9E\u73B0\u6570\u636E\u76D1\u542C","aria-hidden":"true"},"#",-1),Ka=s(),Ya={href:"https://mp.weixin.qq.com/s/O8iL4o8oPpqTm4URRveOIA",target:"_blank",rel:"noopener noreferrer"},Ja=s("\u4E3A\u4EC0\u4E48Vue3.0\u4E0D\u518D\u4F7F\u7528defineProperty\u5B9E\u73B0\u6570\u636E\u76D1\u542C\uFF1F"),Xa=o('<h3 id="\u6570\u636E\u6539\u53D8\u5230\u9875\u9762\u6E32\u67D3\u7684\u8FC7\u7A0B\u662F\u600E\u4E48\u6837\u7684" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u6539\u53D8\u5230\u9875\u9762\u6E32\u67D3\u7684\u8FC7\u7A0B\u662F\u600E\u4E48\u6837\u7684" aria-hidden="true">#</a> \u6570\u636E\u6539\u53D8\u5230\u9875\u9762\u6E32\u67D3\u7684\u8FC7\u7A0B\u662F\u600E\u4E48\u6837\u7684\uFF1F</h3><ul><li>\u770B\u4E0B\u9762\u7684\u56FE\u7247\u{1F447}\uFF0C\u8FD9\u662F\u6267\u884Cclick\u51FD\u6570\u6539\u53D8\u4E00\u4E2A\u6570\u636E\u4E4B\u540E\u53D1\u751F\u7684\u51FD\u6570\u8C03\u7528\u6808\uFF0C\u4ECE\u56FE\u4E0A\u7684\u8BF4\u660E\u53EF\u4EE5\u6BD4\u8F83\u6E05\u695A\u4E2A\u4E86\u89E3\u8FD9\u4E2A\u54CD\u5E94\u5F0F\u8FC7\u7A0B\u7684\u5927\u6982\u6D41\u7A0B\u3002\u4E0B\u9762\u7B80\u5355\u8BB2\u89E3\u4E00\u4E0B\uFF1A</li><li>\u6539\u53D8\u6570\u636E\uFF0C\u89E6\u53D1\u8FD9\u4E2A\u88AB\u52AB\u6301\u8FC7\u7684\u6570\u636E\u7684setter\u65B9\u6CD5</li><li>\u6267\u884C\u8FD9\u4E2A\u6570\u636E\u7684\u8BA2\u9605\u4E2D\u5FC3\uFF08dep\uFF09\u7684notify\u65B9\u6CD5</li><li>update\u65B9\u6CD5\u91CC\u6267\u884CqueueWatcher\u65B9\u6CD5\u628Awatcher\u63A8\u5165\u961F\u5217</li><li>\u6267\u884CnextTick\u65B9\u6CD5\u5F00\u59CB\u66F4\u65B0\u89C6\u56FE</li><li>run\u65B9\u6CD5\u91CC\u8BBE\u7F6Edep.target\u4E3A\u5F53\u524D\u8BA2\u9605\u5BF9\u8C61</li><li>\u8C03\u7528get\u65B9\u6CD5\u8C03\u7528\u5F53\u524Dwatcher\u7684getter\u6267\u884C\u66F4\u65B0\u65B9\u6CD5</li><li>updateComponent\u65B9\u6CD5\u91CC\u8C03\u7528\u4E86render\u65B9\u6CD5\u5F00\u59CB\u6267\u884C\u6E32\u67D3\u9875\u9762</li><li>patch\u3001patchVnode\u3001updateChildren\u65B9\u6CD5\u90FD\u662F\u6BD4\u8F83VNode\u66F4\u65B0\u6E32\u67D3\u7684\u51FD\u6570\uFF0C\u4E0D\u8FC7\u91CD\u70B9\u7684diff\u8FC7\u7A0B\u5728updateChildren\u65B9\u6CD5\u91CC\u3002</li></ul><p><img src="'+V+'" alt="An image"></p>',3),Za={id:"vue\u6A21\u677F\u6E32\u67D3-compile",tabindex:"-1"},np=n("a",{class:"header-anchor",href:"#vue\u6A21\u677F\u6E32\u67D3-compile","aria-hidden":"true"},"#",-1),sp=s(),ap={href:"https://www.jianshu.com/p/743166a8968c",target:"_blank",rel:"noopener noreferrer"},pp=s("vue\u6A21\u677F\u6E32\u67D3--compile"),tp=n("p",null,[n("img",{src:q,alt:""})],-1),ep={id:"\u624B\u5199vue-router\u6838\u5FC3\u539F\u7406",tabindex:"-1"},op=n("a",{class:"header-anchor",href:"#\u624B\u5199vue-router\u6838\u5FC3\u539F\u7406","aria-hidden":"true"},"#",-1),cp=s(),lp={href:"https://juejin.im/post/6854573222231605256",target:"_blank",rel:"noopener noreferrer"},up=s("\u624B\u5199Vue-router\u6838\u5FC3\u539F\u7406"),rp={id:"spa-\u8DEF\u7531",tabindex:"-1"},ip=n("a",{class:"header-anchor",href:"#spa-\u8DEF\u7531","aria-hidden":"true"},"#",-1),kp=s(),bp={href:"https://juejin.im/post/6895882310458343431",target:"_blank",rel:"noopener noreferrer"},mp=s("SPA \u8DEF\u7531"),dp=o('<h4 id="hash" tabindex="-1"><a class="header-anchor" href="#hash" aria-hidden="true">#</a> hash</h4><p>hash \u662F URL \u4E2D hash (#) \u53CA\u540E\u9762\u7684\u90A3\u90E8\u5206\uFF0C\u5E38\u7528\u4F5C\u951A\u70B9\u5728\u9875\u9762\u5185\u8FDB\u884C\u5BFC\u822A\uFF0C\u6539\u53D8 URL \u4E2D\u7684 hash \u90E8\u5206\u4E0D\u4F1A\u5F15\u8D77\u9875\u9762\u5237\u65B0</p><p>\u901A\u8FC7 <code>hashchange</code> \u4E8B\u4EF6\u76D1\u542C URL \u7684\u53D8\u5316, \u9875\u9762\u7B2C\u4E00\u6B21\u52A0\u8F7D\u5B8C\u4E0D\u4F1A\u89E6\u53D1 <code>hashchange</code>\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>window.addEventListener(&#39;DOMContentLoaded&#39;, ()=&gt;{})</code>\uFF0C\u6539\u53D8 URL \u7684\u65B9\u5F0F\u53EA\u6709\u8FD9\u51E0\u79CD\uFF1A</p><ol><li>\u901A\u8FC7\u6D4F\u89C8\u5668\u524D\u8FDB\u540E\u9000\u6539\u53D8 URL;</li><li>\u901A\u8FC7<code>&lt;a&gt;</code>\u6807\u7B7E\u6539\u53D8 URL;</li><li>\u901A\u8FC7<code>window.location</code>\u6539\u53D8URL\u3002</li></ol>',4),hp={href:"https://www.cnblogs.com/gg-qq/p/11327972.html",target:"_blank",rel:"noopener noreferrer"},fp=s("DOMContentLoaded\u548Cload\u7684\u533A\u522B"),yp=o(`<p><code>DOMContentLoaded</code> \u4E8B\u4EF6\u5728 html\u6587\u6863\u52A0\u8F7D\u5B8C\u6BD5\uFF0C\u5E76\u4E14 html \u6240\u5F15\u7528\u7684\u5185\u8054 js\u3001\u4EE5\u53CA\u5916\u94FE js \u7684\u540C\u6B65\u4EE3\u7801\u90FD\u6267\u884C\u5B8C\u6BD5\u540E\u89E6\u53D1\u3002</p><p>\u5F53\u9875\u9762 DOM \u7ED3\u6784\u4E2D\u7684 js\u3001css\u3001\u56FE\u7247\uFF0C\u4EE5\u53CA js \u5F02\u6B65\u52A0\u8F7D\u7684 js\u3001css \u3001\u56FE\u7247\u90FD\u52A0\u8F7D\u5B8C\u6210\u4E4B\u540E\uFF0C\u624D\u4F1A\u89E6\u53D1 <code>load</code> \u4E8B\u4EF6\u3002</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- \u5B9A\u4E49\u8DEF\u7531 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#/home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>about<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- \u6E32\u67D3\u8DEF\u7531\u5BF9\u5E94\u7684 UI --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>routeView<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">let</span> routerView <span class="token operator">=</span> routeView
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;hashchange&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> hash <span class="token operator">=</span> location<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
        routerView<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> hash
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u5982\u679C\u4E0D\u5B58\u5728hash\u503C\uFF0C\u90A3\u4E48\u91CD\u5B9A\u5411\u5230#/</span>
            location<span class="token punctuation">.</span>hash<span class="token operator">=</span><span class="token string">&quot;/&quot;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment">//\u5982\u679C\u5B58\u5728hash\u503C\uFF0C\u90A3\u5C31\u6E32\u67D3\u5BF9\u5E94UI</span>
            <span class="token keyword">let</span> hash <span class="token operator">=</span> location<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
            routerView<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> hash
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h4 id="history" tabindex="-1"><a class="header-anchor" href="#history" aria-hidden="true">#</a> history</h4><p>history \u63D0\u4F9B\u4E86 <code>pushState</code> \u548C <code>replaceState</code> \u4E24\u4E2A\u65B9\u6CD5\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u6539\u53D8 URL \u7684 path \u90E8\u5206\u4E0D\u4F1A\u5F15\u8D77\u9875\u9762\u5237\u65B0;</p><p>history \u63D0\u4F9B\u7C7B\u4F3C <code>hashchange</code> \u4E8B\u4EF6\u7684 <code>popstate</code> \u4E8B\u4EF6\uFF0C\u4F46 <code>popstate</code> \u4E8B\u4EF6\u6709\u4E9B\u4E0D\u540C\uFF1A</p><ol><li>\u901A\u8FC7\u6D4F\u89C8\u5668\u524D\u8FDB\u540E\u9000\u6539\u53D8 URL \u65F6\u4F1A\u89E6\u53D1 popstate \u4E8B\u4EF6</li><li>\u901A\u8FC7<code>pushState</code>\u3001<code>replaceState</code>\u6216<code>&lt;a&gt;</code>\u6807\u7B7E\u6539\u53D8 URL \u4E0D\u4F1A\u89E6\u53D1 popstate \u4E8B\u4EF6\u3002</li><li>\u597D\u5728\u53EF\u4EE5\u62E6\u622A<code> pushState</code>\u3001<code>replaceState</code>\u7684\u8C03\u7528\u548C<code>&lt;a&gt;</code>\u6807\u7B7E\u7684\u70B9\u51FB\u4E8B\u4EF6\u6765\u68C0\u6D4B <code>URL</code> \u53D8\u5316\uFF0C\u901A\u8FC7js\u8C03\u7528<code>history</code>\u7684back\uFF0Cgo\uFF0Cforward\u65B9\u6CD5\u53EF\u89E6\u53D1\u8BE5\u4E8B\u4EF6</li></ol><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/home<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/about<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>about<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>routeView<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">let</span> routerView <span class="token operator">=</span> routeView
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> onLoad<span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        routerView<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> location<span class="token punctuation">.</span>pathname
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">onLoad</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        routerView<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> location<span class="token punctuation">.</span>pathname
        <span class="token keyword">var</span> linkList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;a[href]&#39;</span><span class="token punctuation">)</span>
        linkList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> el<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            routerView<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> location<span class="token punctuation">.</span>pathname
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="\u6253\u5305\u61D2\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u6253\u5305\u61D2\u52A0\u8F7D" aria-hidden="true">#</a> \u6253\u5305\u61D2\u52A0\u8F7D</h3><p>\u8DEF\u7531\u4F7F\u7528<code>import</code>\u5BFC\u5165\uFF0C\u5E76\u58F0\u660E<code>webpackChunkName</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5C06\u5B50\u7EC4\u4EF6\u52A0\u8F7D\u8BED\u53E5\u5C01\u88C5\u5230\u4E00\u4E2Afunction\u4E2D\uFF0C\u5C06function\u8D4B\u7ED9component</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span> <span class="token comment">/* webpackChunkName: &quot;home&quot; */</span> <span class="token string">&#39;../views/Home.vue&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u539F\u7406</p><ul><li>\u5C06\u9700\u8981\u8FDB\u884C\u61D2\u52A0\u8F7D\u7684\u5B50\u6A21\u5757\u6253\u5305\u6210\u72EC\u7ACB\u7684\u6587\u4EF6\uFF08<code>children chunk</code>\uFF09\uFF1B\u501F\u52A9\u7684\u662Fes6\u7684<code>import</code></li><li>\u501F\u52A9\u51FD\u6570\u6765\u5B9E\u73B0\u5EF6\u8FDF\u6267\u884C\u5B50\u6A21\u5757\u7684\u52A0\u8F7D\u4EE3\u7801\uFF1B</li></ul>`,13),wp={id:"vue-loader\u539F\u7406\u5206\u6790",tabindex:"-1"},gp=n("a",{class:"header-anchor",href:"#vue-loader\u539F\u7406\u5206\u6790","aria-hidden":"true"},"#",-1),vp=s(),_p={href:"https://mp.weixin.qq.com/s/Pvxr0A-aDoitL1UAokTSnQ",target:"_blank",rel:"noopener noreferrer"},xp=s("vue-loader\u539F\u7406\u5206\u6790"),Vp={id:"vue-cli\u662F\u5982\u4F55\u5B9E\u73B0\u7684",tabindex:"-1"},qp=n("a",{class:"header-anchor",href:"#vue-cli\u662F\u5982\u4F55\u5B9E\u73B0\u7684","aria-hidden":"true"},"#",-1),Ep=s(),Cp={href:"http://axuebin.com/articles/fe-solution/cli/vuecli.html",target:"_blank",rel:"noopener noreferrer"},Sp=s("Vue CLI\u662F\u5982\u4F55\u5B9E\u73B0\u7684"),jp=o(`<h3 id="vue\u7EC4\u4EF6name\u5C5E\u6027\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#vue\u7EC4\u4EF6name\u5C5E\u6027\u603B\u7ED3" aria-hidden="true">#</a> Vue\u7EC4\u4EF6name\u5C5E\u6027\u603B\u7ED3</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>export default {
  name: &#39;xxx&#39;,
  components: {}
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol><li>\u5F53\u9879\u76EE\u4F7F\u7528<code>keep-alive</code>\u65F6\uFF0C\u53EF\u642D\u914D\u7EC4\u4EF6<code>name</code>\u8FDB\u884C\u7F13\u5B58\u8FC7\u6EE4</li><li>\u9012\u5F52\u7EC4\u4EF6\u65F6</li><li>vue-devtools\u8C03\u8BD5\u5DE5\u5177\u91CC\u663E\u793A\u7684\u7EC4\u4EF6\u540D\u79F0\u662F\u7531vue\u4E2D\u7EC4\u4EF6name\u51B3\u5B9A\u7684</li></ol>`,3);function Dp(Ip,Op){const t=c("RouterLink"),p=c("ExternalLinkIcon");return u(),r(i,null,[n("nav",C,[n("ul",null,[n("li",null,[a(t,{to:"#\u76EE\u5F55"},{default:e(()=>[S]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u9762\u8BD5\u9898"},{default:e(()=>[j]),_:1})]),n("li",null,[a(t,{to:"#\u6838\u5FC3\u54CD\u5E94\u5F0F\u539F\u7406"},{default:e(()=>[D]),_:1})]),n("li",null,[a(t,{to:"#v-model"},{default:e(()=>[I]),_:1})]),n("li",null,[a(t,{to:"#template\u662F\u5982\u4F55\u7F16\u8BD1\u6210render-function\u7684"},{default:e(()=>[O]),_:1})]),n("li",null,[a(t,{to:"#this-set-\u4E0Ethis-del"},{default:e(()=>[A]),_:1})]),n("li",null,[a(t,{to:"#\u6570\u7EC4\u54CD\u5E94\u5F0F\u53D8\u5316\u539F\u7406"},{default:e(()=>[T]),_:1})]),n("li",null,[a(t,{to:"#vue\u4E2D-nexttick\u6E90\u7801\u89E3\u6790"},{default:e(()=>[M]),_:1})]),n("li",null,[a(t,{to:"#\u751F\u547D\u5468\u671F"},{default:e(()=>[N]),_:1})]),n("li",null,[a(t,{to:"#vue\u4E8B\u4EF6\u7ED1\u5B9A\u539F\u7406"},{default:e(()=>[F]),_:1})]),n("li",null,[a(t,{to:"#\u62BD\u8C61\u7EC4\u4EF6"},{default:e(()=>[R]),_:1})]),n("li",null,[a(t,{to:"#vue\u51FD\u6570\u5F0F\u7EC4\u4EF6functional"},{default:e(()=>[P]),_:1})]),n("li",null,[a(t,{to:"#\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD"},{default:e(()=>[B]),_:1})]),n("li",null,[a(t,{to:"#computed\u548Cwatch"},{default:e(()=>[$]),_:1})]),n("li",null,[a(t,{to:"#vue\u4E2D\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F"},{default:e(()=>[L]),_:1})]),n("li",null,[a(t,{to:"#\u89C6\u56FE\u6E32\u67D3\u8FC7\u7A0B"},{default:e(()=>[z]),_:1})]),n("li",null,[a(t,{to:"#vue-diff"},{default:e(()=>[W]),_:1})])])]),n("li",null,[a(t,{to:"#vue3-0-diff"},{default:e(()=>[U]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u865A\u62DFdom"},{default:e(()=>[G]),_:1})]),n("li",null,[a(t,{to:"#\u6570\u636E\u6539\u53D8\u5230\u9875\u9762\u6E32\u67D3\u7684\u8FC7\u7A0B\u662F\u600E\u4E48\u6837\u7684"},{default:e(()=>[H]),_:1})]),n("li",null,[a(t,{to:"#vue\u6A21\u677F\u6E32\u67D3-compile"},{default:e(()=>[Q]),_:1})]),n("li",null,[a(t,{to:"#\u624B\u5199vue-router\u6838\u5FC3\u539F\u7406"},{default:e(()=>[K]),_:1})]),n("li",null,[a(t,{to:"#spa-\u8DEF\u7531"},{default:e(()=>[Y]),_:1})]),n("li",null,[a(t,{to:"#\u6253\u5305\u61D2\u52A0\u8F7D"},{default:e(()=>[J]),_:1})]),n("li",null,[a(t,{to:"#vue-loader\u539F\u7406\u5206\u6790"},{default:e(()=>[X]),_:1})]),n("li",null,[a(t,{to:"#vue-cli\u662F\u5982\u4F55\u5B9E\u73B0\u7684"},{default:e(()=>[Z]),_:1})]),n("li",null,[a(t,{to:"#vue\u7EC4\u4EF6name\u5C5E\u6027\u603B\u7ED3"},{default:e(()=>[nn]),_:1})])])])])]),sn,n("ul",null,[n("li",null,[n("a",an,[pn,a(p)])]),n("li",null,[n("a",tn,[en,a(p)])]),n("li",null,[n("a",on,[cn,a(p)])]),n("li",null,[n("a",ln,[un,a(p)]),rn])]),n("h4",kn,[bn,mn,n("a",dn,[hn,a(p)])]),n("h4",fn,[yn,wn,n("a",gn,[vn,a(p)])]),n("h4",_n,[xn,Vn,n("a",qn,[En,a(p)])]),n("h3",Cn,[Sn,jn,n("a",Dn,[In,a(p)])]),On,An,n("p",null,[n("a",Tn,[Mn,a(p)])]),n("p",null,[n("a",Nn,[Fn,a(p)])]),Rn,Pn,n("p",null,[n("a",Bn,[$n,a(p)])]),Ln,n("ul",null,[n("li",null,[n("a",zn,[Wn,a(p)])])]),Un,n("h3",Gn,[Hn,Qn,n("a",Kn,[Yn,a(p)])]),Jn,n("ul",null,[n("li",null,[n("a",Xn,[Zn,a(p)])])]),ns,n("p",null,[n("a",ss,[as,a(p)])]),ps,n("h3",ts,[es,os,n("a",cs,[ls,a(p)])]),n("p",null,[n("a",us,[rs,a(p)])]),n("p",null,[n("a",is,[ks,a(p)])]),bs,n("h3",ms,[ds,hs,n("a",fs,[ys,a(p)])]),n("ul",null,[n("li",null,[n("p",null,[n("a",ws,[gs,a(p)]),vs]),_s]),xs]),Vs,n("h3",qs,[Es,Cs,n("a",Ss,[js,a(p)])]),Ds,n("h4",Is,[Os,As,n("a",Ts,[Ms,a(p)])]),Ns,Fs,Rs,Ps,n("p",null,[n("a",Bs,[$s,a(p)])]),Ls,n("ul",null,[n("li",null,[n("a",zs,[Ws,a(p)])]),n("li",null,[n("a",Us,[Gs,a(p)])]),n("li",null,[n("a",Hs,[Qs,a(p)])])]),Ks,n("h3",Ys,[Js,Xs,n("a",Zs,[na,a(p)])]),n("ul",null,[n("li",null,[n("p",null,[n("a",sa,[aa,a(p)]),pa])]),n("li",null,[n("p",null,[n("a",ta,[ea,a(p)])])]),n("li",null,[n("p",null,[n("a",oa,[ca,a(p)])])])]),la,n("h4",ua,[ra,ia,n("a",ka,[ba,a(p)])]),ma,n("ul",null,[n("li",null,[n("p",null,[n("a",da,[ha,a(p)])])]),n("li",null,[n("p",null,[n("a",fa,[ya,a(p)])])]),n("li",null,[n("p",null,[n("a",wa,[ga,a(p)])])])]),va,n("ul",null,[n("li",null,[n("a",_a,[xa,a(p)])]),n("li",null,[n("a",Va,[qa,a(p)])]),n("li",null,[n("a",Ea,[Ca,a(p)])]),n("li",null,[n("a",Sa,[ja,a(p)])])]),n("h4",Da,[Ia,Oa,n("a",Aa,[Ta,a(p)])]),n("ul",null,[n("li",null,[n("a",Ma,[Na,a(p)])])]),n("h4",Fa,[Ra,Pa,n("a",Ba,[$a,a(p)])]),n("h4",La,[za,Wa,n("a",Ua,[Ga,a(p)])]),n("h4",Ha,[Qa,Ka,n("a",Ya,[Ja,a(p)])]),Xa,n("h3",Za,[np,sp,n("a",ap,[pp,a(p)])]),tp,n("h3",ep,[op,cp,n("a",lp,[up,a(p)])]),n("h3",rp,[ip,kp,n("a",bp,[mp,a(p)])]),dp,n("p",null,[n("a",hp,[fp,a(p)])]),yp,n("h3",wp,[gp,vp,n("a",_p,[xp,a(p)])]),n("h3",Vp,[qp,Ep,n("a",Cp,[Sp,a(p)])]),jp],64)}var Tp=l(E,[["render",Dp],["__file","index.html.vue"]]);export{Tp as default};
