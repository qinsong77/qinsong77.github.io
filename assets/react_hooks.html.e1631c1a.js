import{_ as e,r as o,o as c,c as l,a as n,b as p,F as u,e as s,d as t}from"./app.a96f585b.js";var r="/assets/hooks-process.f1b22497.png",i="/assets/useEffect-render.99fc7bf5.png",k="/assets/usecallback.48abe0fa.png";const b={},m={href:"https://github.com/brickspert/blog/issues/26",target:"_blank",rel:"noopener noreferrer"},d=s("React Hooks \u539F\u7406"),g={href:"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI4NjE3MzQzNg==&action=getalbum&album_id=1490474787792617475&scene=173",target:"_blank",rel:"noopener noreferrer"},f=s("React Hooks \u5BFC\u8BFB"),y={href:"https://zhuanlan.zhihu.com/p/92211533",target:"_blank",rel:"noopener noreferrer"},h=s("React Hooks\u5B8C\u5168\u4E0A\u624B\u6307\u5357"),w=t('<h1 id="\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55" aria-hidden="true">#</a> \u76EE\u5F55</h1><ul><li><a href="#%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF-hooks">\u4EC0\u4E48\u662F Hooks</a></li><li><a href="#%E4%BA%8C%E3%80%81hooks-%E8%A7%A3%E5%86%B3%E7%9A%84%E9%97%AE%E9%A2%98">Hooks \u89E3\u51B3\u7684\u95EE\u9898</a></li><li><a href="#hooks-%E4%BC%98%E5%8A%BF">Hooks \u4F18\u52BF</a></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">\u6CE8\u610F\u4E8B\u9879</a></li><li><a href="#react-hooks%E8%83%BD%E5%A4%9F%E8%AE%A9%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E6%8B%A5%E6%9C%89%E5%86%85%E9%83%A8%E7%8A%B6%E6%80%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86">React Hooks\u80FD\u591F\u8BA9\u51FD\u6570\u7EC4\u4EF6\u62E5\u6709\u5185\u90E8\u72B6\u6001\u7684\u57FA\u672C\u539F\u7406</a></li><li><a href="#usestate">useState</a></li><li><a href="#useeffect">useEffect</a><ul><li><a href="#useeffect%E8%A7%A3%E5%86%B3%E4%BA%86%E5%93%AA%E4%BA%9B%E9%97%AE%E9%A2%98">useEffect\u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898</a></li><li><a href="#%E5%92%8Csetinterval">\u548CsetInterval</a></li><li><a href="#useeffect%E4%B8%AD%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8async-function">useEffect\u4E2D\u4E0D\u80FD\u4F7F\u7528async function</a></li></ul></li><li><a href="#uselayouteffect">useLayoutEffect</a></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89hooks">\u81EA\u5B9A\u4E49Hooks</a></li><li><a href="#usereducer">useReducer</a></li><li><a href="#usecontext">useContext</a></li><li><a href="#useref">useRef</a><ul><li><a href="#useimperativehandle">useImperativeHandle</a></li></ul></li><li><a href="#usememo">useMemo</a></li><li><a href="#usecallback">useCallback</a></li><li><a href="#%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93">\u4F18\u5316\u603B\u7ED3</a></li><li><a href="#%E5%8E%9F%E7%90%86">\u539F\u7406</a></li></ul><h2 id="\u4E00\u3001\u4EC0\u4E48\u662F-hooks" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u4EC0\u4E48\u662F-hooks" aria-hidden="true">#</a> \u4E00\u3001\u4EC0\u4E48\u662F Hooks</h2><p><strong>\u6709\u72B6\u6001\u7684\u51FD\u6570\u5F0F\u7EC4\u4EF6\u3002</strong></p><ul><li>React\u8BA4\u4E3A\uFF0CUI\u89C6\u56FE\u662F\u6570\u636E\u7684\u4E00\u79CD\u89C6\u89C9\u6620\u5C04\uFF0C\u5373<code>UI = F(DATA)</code>\uFF0C\u8FD9\u91CC\u7684F\u9700\u8981\u8D1F\u8D23\u5BF9\u8F93\u5165\u6570\u636E\u8FDB\u884C\u52A0\u5DE5\u3001\u5E76\u5BF9\u6570\u636E\u7684\u53D8\u66F4\u505A\u51FA\u54CD\u5E94</li><li>\u516C\u5F0F\u91CC\u7684<code>F</code>\u5728React\u91CC\u62BD\u8C61\u6210\u7EC4\u4EF6\uFF0CReact\u662F\u4EE5\u7EC4\u4EF6\uFF08Component-Based\uFF09\u4E3A\u7C92\u5EA6\u7F16\u6392\u5E94\u7528\u7684\uFF0C\u7EC4\u4EF6\u662F\u4EE3\u7801\u590D\u7528\u7684\u6700\u5C0F\u5355\u5143</li><li>\u5728\u8BBE\u8BA1\u4E0A\uFF0CReact\u91C7\u7528props\u5C5E\u6027\u6765\u63A5\u6536\u5916\u90E8\u7684\u6570\u636E\uFF0C\u4F7F\u7528state\u5C5E\u6027\u6765\u7BA1\u7406\u7EC4\u4EF6\u81EA\u8EAB\u4EA7\u751F\u7684\u6570\u636E\uFF08\u72B6\u6001\uFF09\uFF0C\u800C\u4E3A\u4E86\u5B9E\u73B0\uFF08\u8FD0\u884C\u65F6\uFF09\u5BF9\u6570\u636E\u53D8\u66F4\u505A\u51FA\u54CD\u5E94\u9700\u8981\uFF0CReact\u91C7\u7528\u57FA\u4E8E\u7C7B\uFF08Class\uFF09\u7684\u7EC4\u4EF6\u8BBE\u8BA1\uFF01</li><li>React \u4E00\u76F4\u90FD\u63D0\u5021\u4F7F\u7528<strong>\u51FD\u6570\u7EC4\u4EF6</strong>\uFF0C\u4F46\u662F\u6709\u65F6\u5019\u9700\u8981\u4F7F\u7528 <code>state</code> \u6216\u8005\u5176\u4ED6\u4E00\u4E9B\u529F\u80FD\u65F6\uFF0C\u53EA\u80FD\u4F7F\u7528<strong>\u7C7B\u7EC4\u4EF6</strong>\uFF0C\u56E0\u4E3A\u51FD\u6570\u7EC4\u4EF6\u6CA1\u6709\u5B9E\u4F8B\uFF0C\u6CA1\u6709\u751F\u547D\u5468\u671F\u51FD\u6570\uFF0C\u53EA\u6709\u7C7B\u7EC4\u4EF6\u624D\u6709;</li><li>Hooks \u662F React 16.8 \u65B0\u589E\u7684\u7279\u6027\uFF0C\u5B83\u53EF\u4EE5\u5728\u4E0D\u7F16\u5199 class \u7684\u60C5\u51B5\u4E0B\u4F7F\u7528 state \u4EE5\u53CA\u5176\u4ED6\u7684 React \u7279\u6027</li><li>\u5982\u679C\u4F60\u5728\u7F16\u5199\u51FD\u6570\u7EC4\u4EF6\u5E76\u610F\u8BC6\u5230\u9700\u8981\u5411\u5176\u6DFB\u52A0\u4E00\u4E9B state\uFF0C\u4EE5\u524D\u7684\u505A\u6CD5\u662F\u5FC5\u987B\u5C06\u5176\u5B83\u8F6C\u5316\u4E3A class\u3002\u73B0\u5728\u4F60\u53EF\u4EE5\u76F4\u63A5\u5728\u73B0\u6709\u7684\u51FD\u6570\u7EC4\u4EF6\u4E2D\u4F7F\u7528 <code>Hooks</code> \u51E1\u662F <code>use</code> \u5F00\u5934\u7684 React API \u90FD\u662F <code>Hooks</code></li></ul><h2 id="\u4E8C\u3001hooks-\u89E3\u51B3\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001hooks-\u89E3\u51B3\u7684\u95EE\u9898" aria-hidden="true">#</a> \u4E8C\u3001Hooks \u89E3\u51B3\u7684\u95EE\u9898</h2><h3 id="_1-\u7C7B\u7EC4\u4EF6\u7684\u4E0D\u8DB3" tabindex="-1"><a class="header-anchor" href="#_1-\u7C7B\u7EC4\u4EF6\u7684\u4E0D\u8DB3" aria-hidden="true">#</a> 1. \u7C7B\u7EC4\u4EF6\u7684\u4E0D\u8DB3</h3><ul><li>\u72B6\u6001\u903B\u8F91\u96BE\u590D\u7528\uFF1A \u5728\u7EC4\u4EF6\u4E4B\u95F4\u590D\u7528\u72B6\u6001\u903B\u8F91\u5F88\u96BE\uFF0C\u53EF\u80FD\u8981\u7528\u5230 <code>render props</code> \uFF08\u6E32\u67D3\u5C5E\u6027\uFF09\u6216\u8005 <code>HOC</code>\uFF08\u9AD8\u9636\u7EC4\u4EF6\uFF09\uFF0C\u4F46\u65E0\u8BBA\u662F\u6E32\u67D3\u5C5E\u6027\uFF0C\u8FD8\u662F\u9AD8\u9636\u7EC4\u4EF6\uFF0C\u90FD\u4F1A\u5728\u539F\u5148\u7684\u7EC4\u4EF6\u5916\u5305\u88F9\u4E00\u5C42\u7236\u5BB9\u5668\uFF08\u4E00\u822C\u90FD\u662F div \u5143\u7D20\uFF09\uFF0C\u5BFC\u81F4\u5C42\u7EA7\u5197\u4F59</li></ul><p>HOC\u4F7F\u7528\uFF08\u8001\u751F\u5E38\u8C08\uFF09\u7684\u95EE\u9898</p><ul><li>\u5D4C\u5957\u5730\u72F1\uFF0C\u6BCF\u4E00\u6B21HOC\u8C03\u7528\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A\u7EC4\u4EF6\u5B9E\u4F8B</li><li>\u53EF\u4EE5\u4F7F\u7528\u7C7B\u88C5\u9970\u5668\u7F13\u89E3\u7EC4\u4EF6\u5D4C\u5957\u5E26\u6765\u7684\u53EF\u7EF4\u62A4\u6027\u95EE\u9898\uFF0C\u4F46\u88C5\u9970\u5668\u672C\u8D28\u4E0A\u8FD8\u662FHOC</li><li>\u5305\u88F9\u592A\u591A\u5C42\u7EA7\u4E4B\u540E\uFF0C\u53EF\u80FD\u4F1A\u5E26\u6765props\u5C5E\u6027\u7684\u8986\u76D6\u95EE\u9898</li></ul><p>Render Props\uFF1A</p><ul><li><p>\u6570\u636E\u6D41\u5411\u66F4\u76F4\u89C2\u4E86\uFF0C\u5B50\u5B59\u7EC4\u4EF6\u53EF\u4EE5\u5F88\u660E\u786E\u5730\u770B\u5230\u6570\u636E\u6765\u6E90</p></li><li><p>\u4F46\u672C\u8D28\u4E0A<code>Render Props</code>\u662F\u57FA\u4E8E\u95ED\u5305\u5B9E\u73B0\u7684\uFF0C\u5927\u91CF\u5730\u7528\u4E8E\u7EC4\u4EF6\u7684\u590D\u7528\u5C06\u4E0D\u53EF\u907F\u514D\u5730\u5F15\u5165\u4E86callback hell\u95EE\u9898</p></li><li><p>\u4E22\u5931\u4E86\u7EC4\u4EF6\u7684\u4E0A\u4E0B\u6587\uFF0C\u56E0\u6B64\u6CA1\u6709<code>this.props</code>\u5C5E\u6027\uFF0C\u4E0D\u80FD\u50CFHOC\u90A3\u6837\u8BBF\u95EE<code>this.props.children</code></p></li><li><p>\u8D8B\u5411\u590D\u6742\u96BE\u4EE5\u7EF4\u62A4\uFF1A</p><ul><li>\u5728\u751F\u547D\u5468\u671F\u51FD\u6570\u4E2D\u6DF7\u6742\u4E0D\u76F8\u5E72\u7684\u903B\u8F91\uFF08\u5982\uFF1A\u5728 componentDidMount \u4E2D\u6CE8\u518C\u4E8B\u4EF6\u4EE5\u53CA\u5176\u4ED6\u7684\u903B\u8F91\uFF0C\u5728 componentWillUnmount \u4E2D\u5378\u8F7D\u4E8B\u4EF6\uFF0C\u8FD9\u6837\u5206\u6563\u4E0D\u96C6\u4E2D\u7684\u5199\u6CD5\uFF0C\u5F88\u5BB9\u6613\u5199\u51FA bug \uFF09</li><li>\u7C7B\u7EC4\u4EF6\u4E2D\u5230\u5904\u90FD\u662F\u5BF9\u72B6\u6001\u7684\u8BBF\u95EE\u548C\u5904\u7406\uFF0C\u5BFC\u81F4\u7EC4\u4EF6\u96BE\u4EE5\u62C6\u5206\u6210\u66F4\u5C0F\u7684\u7EC4\u4EF6</li></ul></li><li><p>this \u6307\u5411\u95EE\u9898\uFF1A\u7236\u7EC4\u4EF6\u7ED9\u5B50\u7EC4\u4EF6\u4F20\u9012\u51FD\u6570\u65F6\uFF0C\u5FC5\u987B\u7ED1\u5B9A <code>this</code>\uFF0Creact \u4E2D\u7684\u7EC4\u4EF6\u56DB\u79CD\u7ED1\u5B9A <code>this</code> \u65B9\u6CD5\u7684\u533A\u522B</p></li><li><p>webpack\u7F16\u8BD1\u540Eclass\u7684size\u8981\u6BD4function\u7EC4\u4EF6\u5927\uFF0C\u6027\u80FD\u4E5F\u6CA1function\u597D\uFF08Function Component\u7F16\u8BD1\u540E\u5C31\u662F\u4E00\u4E2A\u666E\u901A\u7684function\uFF0Cfunction\u5BF9js\u5F15\u64CE\u662F\u53CB\u597D\u7684\uFF09</p></li><li><p>Function Component\u662F\u7EAF\u51FD\u6570\uFF0C\u5229\u4E8E\u7EC4\u4EF6\u590D\u7528\u548C\u6D4B\u8BD5</p></li></ul><h2 id="hooks-\u4F18\u52BF" tabindex="-1"><a class="header-anchor" href="#hooks-\u4F18\u52BF" aria-hidden="true">#</a> Hooks \u4F18\u52BF</h2><ul><li>\u80FD\u4F18\u5316\u7C7B\u7EC4\u4EF6\u7684\u4E09\u5927\u95EE\u9898</li><li>\u80FD\u5728\u65E0\u9700\u4FEE\u6539\u7EC4\u4EF6\u7ED3\u6784\u7684\u60C5\u51B5\u4E0B\u590D\u7528\u72B6\u6001\u903B\u8F91\uFF08\u81EA\u5B9A\u4E49 Hooks \uFF09</li><li>\u80FD\u5C06\u7EC4\u4EF6\u4E2D\u76F8\u4E92\u5173\u8054\u7684\u90E8\u5206\u62C6\u5206\u6210\u66F4\u5C0F\u7684\u51FD\u6570\uFF08\u6BD4\u5982\u8BBE\u7F6E\u8BA2\u9605\u6216\u8BF7\u6C42\u6570\u636E\uFF09</li><li>\u526F\u4F5C\u7528\u7684\u5173\u6CE8\u70B9\u5206\u79BB\uFF1A\u526F\u4F5C\u7528\u6307\u90A3\u4E9B\u6CA1\u6709\u53D1\u751F\u5728\u6570\u636E\u5411\u89C6\u56FE\u8F6C\u6362\u8FC7\u7A0B\u4E2D\u7684\u903B\u8F91\uFF0C\u5982 ajax \u8BF7\u6C42\u3001\u8BBF\u95EE\u539F\u751Fdom \u5143\u7D20\u3001\u672C\u5730\u6301\u4E45\u5316\u7F13\u5B58\u3001\u7ED1\u5B9A/\u89E3\u7ED1\u4E8B\u4EF6\u3001\u6DFB\u52A0\u8BA2\u9605\u3001\u8BBE\u7F6E\u5B9A\u65F6\u5668\u3001\u8BB0\u5F55\u65E5\u5FD7\u7B49\u3002\u4EE5\u5F80\u8FD9\u4E9B\u526F\u4F5C\u7528\u90FD\u662F\u5199\u5728\u7C7B\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u51FD\u6570\u4E2D\u7684\u3002\u800C useEffect \u5728\u5168\u90E8\u6E32\u67D3\u5B8C\u6BD5\u540E\u624D\u4F1A\u6267\u884C\uFF0CuseLayoutEffect \u4F1A\u5728\u6D4F\u89C8\u5668 layout \u4E4B\u540E\uFF0Cpainting \u4E4B\u524D\u6267\u884C\u3002</li></ul><h2 id="\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> \u6CE8\u610F\u4E8B\u9879</h2><ul><li>\u53EA\u80FD\u5728\u51FD\u6570\u5185\u90E8\u7684\u6700\u5916\u5C42\u8C03\u7528 Hook\uFF0C\u4E0D\u8981\u5728\u5FAA\u73AF\u3001\u6761\u4EF6\u5224\u65AD\u6216\u8005\u5B50\u51FD\u6570\u4E2D\u8C03\u7528</li><li>\u53EA\u80FD\u5728 React \u7684\u51FD\u6570\u7EC4\u4EF6\u4E2D\u8C03\u7528 Hook\uFF0C\u4E0D\u8981\u5728\u5176\u4ED6 JavaScript \u51FD\u6570\u4E2D\u8C03\u7528</li></ul><h2 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks" aria-hidden="true">#</a> hooks</h2><p><img src="'+r+`" alt=""></p><h3 id="react-hooks\u80FD\u591F\u8BA9\u51FD\u6570\u7EC4\u4EF6\u62E5\u6709\u5185\u90E8\u72B6\u6001\u7684\u57FA\u672C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#react-hooks\u80FD\u591F\u8BA9\u51FD\u6570\u7EC4\u4EF6\u62E5\u6709\u5185\u90E8\u72B6\u6001\u7684\u57FA\u672C\u539F\u7406" aria-hidden="true">#</a> React Hooks\u80FD\u591F\u8BA9\u51FD\u6570\u7EC4\u4EF6\u62E5\u6709\u5185\u90E8\u72B6\u6001\u7684\u57FA\u672C\u539F\u7406</h3><p>\u5229\u7528\u95ED\u5305\uFF0C\u8BB0\u4F4F\u4E86\u4E0A\u4E00\u6B21\u7684\u503C\uFF0C\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">useState</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token keyword">null</span>
	<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21\u8C03\u7528\u65F6\u6CA1\u6709\u521D\u59CB\u503C\uFF0C\u56E0\u6B64\u4F7F\u7528\u4F20\u5165\u7684\u521D\u59CB\u503C\u8D4B\u503C</span>
		state <span class="token operator">=</span> state <span class="token operator">||</span> value
		<span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			state <span class="token operator">=</span> newValue
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;render happen&#39;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span> counter<span class="token punctuation">,</span> setCounter <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token function">setCounter</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// log 0</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// log 12</span>
<span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// log 12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u66F4\u4E3A\u76F8\u4F3C\u7684\u4F8B\u5B50</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// state.js</span>
<span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useState</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7B2C\u4E00\u6B21\u8C03\u7528\u65F6\u6CA1\u6709\u521D\u59CB\u503C\uFF0C\u56E0\u6B64\u4F7F\u7528\u4F20\u5165\u7684\u521D\u59CB\u503C\u8D4B\u503C</span>
  state <span class="token operator">=</span> state <span class="token operator">||</span> value<span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
    <span class="token comment">// \u5047\u8BBE\u6B64\u65B9\u6CD5\u80FD\u89E6\u53D1\u9875\u9762\u6E32\u67D3</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5728\u5176\u4ED6\u6A21\u5757\u4E2D\u5F15\u5165\u5E76\u4F7F\u7528\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./state&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F7F\u7528\u6570\u7EC4\u89E3\u6784\u7684\u65B9\u5F0F\uFF0C\u5B9A\u4E49\u53D8\u91CF</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>hello world<span class="token punctuation">,</span> <span class="token punctuation">{</span>counter<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6267\u884C\u4E0A\u4E0B\u6587state\uFF08\u6A21\u5757state\uFF09\u4EE5\u53CA\u5728state\u4E2D\u521B\u5EFA\u7684\u51FD\u6570useState</p><p>\u5F53useState\u5728Demo\u4E2D\u6267\u884C\u65F6\uFF0C\u8BBF\u95EE\u4E86state\u4E2D\u7684\u53D8\u91CF\u5BF9\u8C61\uFF0C\u90A3\u4E48\u95ED\u5305\u5C31\u4F1A\u4EA7\u751F\u3002</p><p>react hooks\u63D0\u4F9B\u7684api\uFF0C\u5927\u591A\u90FD\u6709\u8BB0\u5FC6\u529F\u80FD\u3002\u4F8B\u5982</p><ul><li>useState</li><li>useEffect</li><li>useLayoutEffect</li><li>useReducer</li><li>useRef</li><li>useMemo \u8BB0\u5FC6\u8BA1\u7B97\u7ED3\u679C</li><li>useCallback \u8BB0\u5FC6\u51FD\u6570\u4F53</li></ul><h3 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate" aria-hidden="true">#</a> useState</h3><p>\u6BCF\u6B21\u6E32\u67D3\u90FD\u662F\u72EC\u7ACB\u7684\u95ED\u5305\uFF0C <code>setTimeout</code>\u4E2D\u6253\u5370\u7684\u662F\u4E0A\u4E00\u6B21\u7684\u503C</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;render 1&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setSate<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
	<span class="token keyword">function</span> <span class="token function">AlertNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setSate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">setSate</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token operator">=&gt;</span>number<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
			<span class="token comment">// setState(state+1) // \u52A01\u4E0D\u8D77\u4F5C\u7528\uFF0C\u56E0\u4E3A\u8FD9\u4E2Astate\u662F\u4E4B\u524D\u7684\u90A3\u4E2A\u53CA0\uFF0C\u800C\u4E4B\u524D\u5C31\u5DF2\u7ECF\u52A01\u53D8\u62101\u4E86\uFF0C</span>
            <span class="token comment">// setState(state + 2)// state\u4F1A\u53D8\u62102</span>
			<span class="token function">alert</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// 0</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span> state <span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setSate</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">add</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>AlertNum<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">AlertNum</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;render 1&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
	
	<span class="token keyword">const</span> <span class="token punctuation">[</span>obj<span class="token punctuation">,</span> setObj<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
		<span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		obj<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span>
		<span class="token comment">// setObj({ ...obj, a: 12})</span>
		<span class="token function">setObj</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u5BFC\u81F4render,\u6240\u4EE5\u4E0D\u4F1A\u6E32\u67D3\uFF0C\u4F46\u662F\u5F53state\u53D8\u5316\uFF0CDemo\u7EC4\u4EF6\u4F1A\u91CD\u65B0render, \u800C\u7531\u4E8E\u95ED\u5305\u7684\u7279\u6027\uFF0C obj\u7684a\u5DF2\u7ECF\u53D8\u5316\uFF0C\u6240\u4EE5\u663E\u793A\u7684a\u4E5F\u4F1A\u53D8\u62102</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4F7F\u7528memo\u7684\u533A\u522B</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> memo<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">function</span> <span class="token function">Counter1</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Counter </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> render</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
	
	<span class="token comment">// \u8FD9\u4E2A\u51FD\u6570\u53EA\u5728\u521D\u59CB\u6E32\u67D3\u65F6\u6267\u884C\u4E00\u6B21\uFF0C\u540E\u7EED\u66F4\u65B0\u72B6\u6001\u91CD\u65B0\u6E32\u67D3\u7EC4\u4EF6\u65F6\uFF0C\u8BE5\u51FD\u6570\u5C31\u4E0D\u4F1A\u518D\u88AB\u8C03\u7528</span>
	<span class="token keyword">function</span> <span class="token function">getInitState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">number</span><span class="token operator">:</span> props<span class="token punctuation">.</span>number <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">let</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>getInitState<span class="token punctuation">)</span>
	<span class="token keyword">let</span> <span class="token punctuation">[</span>counter1<span class="token punctuation">,</span> setCounter2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>number<span class="token punctuation">)</span> <span class="token comment">// props\u53D8\u5316\u65F6\uFF0C\u8FD9\u4E2Acounter1\u4F9D\u7136\u662F\u7B2C\u4E00\u6B21\u7684\u503C</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">name: </span><span class="token punctuation">{</span> props<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>counter<span class="token punctuation">.</span>number<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">number</span><span class="token operator">:</span> counter<span class="token punctuation">.</span>number <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">+</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">setCounter</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Counter1Memo <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span>Counter1<span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;render 1&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setSate<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
	
	<span class="token keyword">function</span> <span class="token function">AlertNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setSate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">setSate</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
			<span class="token comment">// setState(state+1) // \u52A01\u4E0D\u8D77\u4F5C\u7528\uFF0C\u56E0\u4E3A\u8FD9\u4E2Astate\u662F\u4E4B\u524D\u7684\u90A3\u4E2A\u53CA0\uFF0C\u800C\u4E4B\u524D\u5C31\u5DF2\u7ECF\u52A01\u53D8\u62101\u4E86\uFF0C</span>
            <span class="token comment">// setState(state + 2)// state\u4F1A\u53D8\u62102</span>
			<span class="token function">alert</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// 0</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u4F46state\u53D8\u5316\u65F6</span>
    <span class="token comment">// name \u662F1,2,3\u7684\u90FD\u8981render</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>state<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setSate</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">add</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>AlertNum<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">AlertNum</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter1</span></span> <span class="token attr-name">number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>1<span class="token punctuation">&#39;</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter1</span></span> <span class="token attr-name">number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>2<span class="token punctuation">&#39;</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter1Memo</span></span> <span class="token attr-name">number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>3<span class="token punctuation">&#39;</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter1Memo</span></span> <span class="token attr-name">number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>4<span class="token punctuation">&#39;</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Test
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> memo<span class="token punctuation">,</span> useCallback<span class="token punctuation">,</span> useMemo<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">function</span> <span class="token function">SubCounter</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> onClick<span class="token punctuation">,</span> data <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;SubCounter render&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>number<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> SubCounter2 <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span>SubCounter<span class="token punctuation">)</span>

<span class="token keyword">let</span> oldData<span class="token punctuation">;</span> <span class="token keyword">let</span> oldAddClick
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Counter2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Counter render&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u6570\u5668&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
	<span class="token comment">// \u7236\u7EC4\u4EF6\u66F4\u65B0\u65F6\uFF0C\u8FD9\u91CC\u7684\u53D8\u91CF\u548C\u51FD\u6570\u6BCF\u6B21\u90FD\u4F1A\u91CD\u65B0\u521B\u5EFA\uFF0C\u90A3\u4E48\u5B50\u7EC4\u4EF6\u63A5\u53D7\u5230\u7684\u5C5E\u6027\u6BCF\u6B21\u90FD\u4F1A\u8BA4\u4E3A\u662F\u65B0\u7684</span>
	<span class="token comment">// \u6240\u4EE5\u5B50\u7EC4\u4EF6\u4E5F\u4F1A\u968F\u4E4B\u66F4\u65B0\uFF0C\u8FD9\u65F6\u5019\u53EF\u4EE5\u7528\u5230 useMemo</span>
	<span class="token comment">// \u6709\u6CA1\u6709\u540E\u9762\u7684\u4F9D\u8D56\u9879\u6570\u7EC4\u5F88\u91CD\u8981\uFF0C\u5426\u5219\u8FD8\u662F\u4F1A\u91CD\u65B0\u6E32\u67D3</span>
	<span class="token comment">// \u5982\u679C\u540E\u9762\u7684\u4F9D\u8D56\u9879\u6570\u7EC4\u6CA1\u6709\u503C\u7684\u8BDD\uFF0C\u5373\u4F7F\u7236\u7EC4\u4EF6\u7684 number \u503C\u6539\u53D8\u4E86\uFF0C\u5B50\u7EC4\u4EF6\u4E5F\u4E0D\u4F1A\u53BB\u66F4\u65B0</span>
	<span class="token comment">// const data = useMemo(()=&gt;({number}),[]);</span>
	<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> number <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// number\u53D8\u5316\u4E86sub\u624D\u4F1A\u91CD\u65B0render,name\u53D8\u4E86\u4E0D\u4F1A</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data===oldData &#39;</span><span class="token punctuation">,</span> data <span class="token operator">===</span> oldData<span class="token punctuation">)</span>
	oldData <span class="token operator">=</span> data
	
	<span class="token comment">// \u6709\u6CA1\u6709\u540E\u9762\u7684\u4F9D\u8D56\u9879\u6570\u7EC4\u5F88\u91CD\u8981\uFF0C\u5426\u5219\u8FD8\u662F\u4F1A\u91CD\u65B0\u6E32\u67D3</span>
	<span class="token keyword">const</span> addClick <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">setNumber</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// number\u53D8\u5316\u4E86sub\u624D\u4F1A\u91CD\u65B0render,name\u53D8\u4E86\u4E0D\u4F1A</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;addClick===oldAddClick &#39;</span><span class="token punctuation">,</span> addClick <span class="token operator">===</span> oldAddClick<span class="token punctuation">)</span>
	oldAddClick <span class="token operator">=</span> addClick
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
			</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SubCounter2</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>addClick<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
		</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect" aria-hidden="true">#</a> useEffect</h3>`,37),v={href:"https://overreacted.io/zh-hans/a-complete-guide-to-useeffect/",target:"_blank",rel:"noopener noreferrer"},x=s("useEffect \u5B8C\u6574\u6307\u5357"),C={href:"https://www.jianshu.com/p/a838d8c22089",target:"_blank",rel:"noopener noreferrer"},E=s("\u6E90\u7801\u89E3\u8BFB"),R=t(`<h4 id="useeffect\u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#useeffect\u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898" aria-hidden="true">#</a> useEffect\u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898</h4><ol><li><p>\u51FD\u6570\u7EC4\u4EF6\u6CA1\u6709\u751F\u547D\u5468\u671F\u3002</p></li><li><p>ajax\u3001\u4E8B\u4EF6\u7ED1\u5B9A\u7B49\u4E1A\u52A1\u903B\u8F91\u8026\u5408\u5728\u751F\u547D\u5468\u671F\u4E2D</p></li><li><p>\u4E1A\u52A1\u903B\u8F91\u6563\u4E71\u5728\u4E0D\u540C\u7684\u751F\u547D\u5468\u671F\u4E2D</p></li></ol><p>Effect Hook \u53EF\u4EE5\u8BA9\u4F60\u5728\u51FD\u6570\u7EC4\u4EF6\u4E2D\u6267\u884C\u526F\u4F5C\u7528\u64CD\u4F5C\u3002\u6570\u636E\u83B7\u53D6\uFF0C\u8BBE\u7F6E\u8BA2\u9605\u4EE5\u53CA\u624B\u52A8\u66F4\u6539 React \u7EC4\u4EF6\u4E2D\u7684 DOM \u90FD\u5C5E\u4E8E\u526F\u4F5C\u7528\u3002\u7C7B\u6BD4\u4E8Eclass component\uFF0C\u53EF\u4EE5\u628A useEffect Hook \u770B\u505A componentDidMount\uFF0CcomponentDidUpdate \u548C componentWillUnmount \u8FD9\u4E09\u4E2A\u51FD\u6570\u7684\u7EC4\u5408\u3002</p><p>\u5728function\u7EC4\u4EF6\u4E2D\uFF0C<strong>\u6BCF\u5F53DOM\u5B8C\u6210\u4E00\u6B21\u6E32\u67D3\uFF0C\u90FD\u4F1A\u6709\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u6267\u884C</strong>\uFF0CuseEffect\u7528\u4E8E\u63D0\u4F9B\u81EA\u5B9A\u4E49\u7684\u6267\u884C\u5185\u5BB9\uFF0C\u5B83\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF08\u4F5C\u4E3A\u51FD\u6570\u4F20\u5165\uFF09\u5C31\u662F\u81EA\u5B9A\u4E49\u7684\u6267\u884C\u5185\u5BB9\u3002\u4E3A\u4E86\u907F\u514D\u53CD\u590D\u6267\u884C\uFF0C\u4F20\u5165\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF08\u7531\u76D1\u542C\u503C\u7EC4\u6210\u7684\u6570\u7EC4\uFF09\u4F5C\u4E3A\u6BD4\u8F83(\u6D45\u6BD4\u8F83)\u53D8\u5316\u7684\u4F9D\u8D56\uFF0C\u6BD4\u8F83\u4E4B\u540E\u503C\u90FD\u4FDD\u6301\u4E0D\u53D8\u65F6\uFF0C\u526F\u4F5C\u7528\u903B\u8F91\u5C31\u4E0D\u518D\u6267\u884C\u3002 useEffect \u8FD8\u662F\u5F02\u6B65\u6267\u884C\u7684\uFF0C\u6240\u8C13\u7684\u5F02\u6B65\u5C31\u662F\u88AB React \u4F7F\u7528 requestIdleCallback \u5C01\u88C5\u7684\uFF0C\u53EA\u5728\u6D4F\u89C8\u5668\u7A7A\u95F2\u65F6\u5019\u624D\u4F1A\u6267\u884C\uFF0C\u8FD9\u5C31\u4FDD\u8BC1\u4E86\u4E0D\u4F1A\u963B\u585E\u6D4F\u89C8\u5668\u7684\u6E32\u67D3\u8FC7\u7A0B\u3002</p><ul><li><ol><li>\u53EA\u5728\u7B2C\u4E00\u6B21\u6E32\u67D3\u65F6\u6267\u884C\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u7A7A\u6570\u7EC4\u3002\u5373\u6CA1\u6709\u4F20\u5165\u6BD4\u8F83\u53D8\u5316\u7684\u53D8\u91CF\uFF0C\u5219\u6BD4\u8F83\u7ED3\u679C\u6C38\u8FDC\u90FD\u4FDD\u6301\u4E0D\u53D8\uFF0C\u90A3\u4E48\u526F\u4F5C\u7528\u903B\u8F91\u5C31\u53EA\u80FD\u6267\u884C\u4E00\u6B21\u3002</li></ol></li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>list<span class="token punctuation">,</span> setList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// DOM\u6E32\u67D3\u5B8C\u6210\u4E4B\u540E\u526F\u4F5C\u7528\u6267\u884C</span>
<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">recordListApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setList</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8BB0\u5F97\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u4F7F\u7528</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><ol start="2"><li>\u521B\u9020\u4E00\u4E2A\u53D8\u91CF\uFF0C\u6765\u4F5C\u4E3A\u53D8\u5316\u503C\uFF0C\u5B9E\u73B0\u76EE\u7684\u7684\u540C\u65F6\u9632\u6B62\u5FAA\u73AF\u6267\u884C</li></ol></li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./style.scss&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">AnimateDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>list<span class="token punctuation">,</span> setList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// DOM\u6E32\u67D3\u5B8C\u6210\u4E4B\u540E\u526F\u4F5C\u7528\u6267\u884C</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u81EA\u8EAB\u5224\u65AD\u662F\u5426\u6267\u884C</span>
      <span class="token function">recordListApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setList</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>loading<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\u70B9\u51FB\u5237\u65B0</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FlatList</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ol start="3"><li>return\u4E00\u4E2Aclear\u51FD\u6570\u6E05\u695A\u526F\u4F5C\u7528</li></ol><ul><li>\u6BCF\u6B21\u526F\u4F5C\u7528\u6267\u884C\uFF0C\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684clear\u51FD\u6570</li><li><strong>clear\u51FD\u6570\u4F1A\u5728\u4E0B\u4E00\u6B21\u526F\u4F5C\u7528\u903B\u8F91\u4E4B\u524D\u6267\u884C</strong>\uFF08DOM\u6E32\u67D3\u5B8C\u6210\u4E4B\u540E\uFF09</li><li>\u7EC4\u4EF6\u9500\u6BC1\u4E5F\u4F1A\u6267\u884C\u4E00\u6B21</li></ul><p>\u548C<code>componentWillUnmount</code>\u4E0D\u4E00\u6837\uFF0C<code>componentWillUnmount</code>\u6574\u4E2A\u8FC7\u7A0B\u4E2D\u53EA\u6267\u884C\u4E00\u6B21\u3002</p><p>\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ChatAPI<span class="token punctuation">.</span><span class="token function">subscribeToFriendStatus</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>id<span class="token punctuation">,</span> handleStatusChange<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ChatAPI<span class="token punctuation">.</span><span class="token function">unsubscribeFromFriendStatus</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>id<span class="token punctuation">,</span> handleStatusChange<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> clear<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5047\u8BBE\u5728\u7EC4\u4EF6\u7684\u4F7F\u7528\u8FC7\u7A0B\u4E2D\uFF0C\u5916\u90E8\u4F20\u5165\u7684props\u53C2\u6570id\uFF0C\u6539\u53D8\u4E86\u4E24\u6B21\uFF0C\u7B2C\u4E00\u6B21\u4F20\u5165<code>id: 1</code>\uFF0C \u7B2C\u4E8C\u6B21\u4F20\u5165<code>id: 2</code></p><p>\u6574\u4E2A\u8FC7\u7A0B\u662F\uFF1A</p><ol><li>\u4F20\u5165<code>props.id = 1</code></li><li>\u7EC4\u4EF6\u6E32\u67D3</li><li>DOM\u6E32\u67D3\u5B8C\u6210\uFF0C\u526F\u4F5C\u7528\u903B\u8F91\u6267\u884C\uFF0C\u8FD4\u56DE\u6E05\u9664\u526F\u4F5C\u7528\u51FD\u6570<code>clear</code>\uFF0C\u547D\u540D\u4E3A<code>clear1</code></li><li>\u4F20\u5165<code>props.id = 2</code></li><li>\u7EC4\u4EF6\u6E32\u67D3</li><li>\u7EC4\u4EF6\u6E32\u67D3\u5B8C\u6210\uFF0C<code>clear1</code>\u6267\u884C</li><li>\u526F\u4F5C\u7528\u903B\u8F91\u6267\u884C\uFF0C\u8FD4\u56DE\u53E6\u4E00\u4E2A<code>clear</code>\u51FD\u6570\uFF0C\u547D\u540D\u4E3A<code>clear2</code></li><li>\u7EC4\u4EF6\u9500\u6BC1\uFF0C<code>clear2</code>\u6267\u884C</li></ol><p>\u4E0B\u9762\u7684\u6253\u5370\u987A\u5E8F\u662F\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">AnimateDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setCounter&#39;</span><span class="token punctuation">)</span>
      <span class="token function">setCounter</span><span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;effect:&#39;</span><span class="token punctuation">,</span> timer<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;clear:&#39;</span><span class="token punctuation">,</span> timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before render&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>counter<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><div class="language-git ext-git line-numbers-mode"><pre class="language-git"><code>before render
effect: 0
setCounter --- 3s\u540E
before render
clear: 0 -- \u7B2C\u4E8C\u6B21\u6E32\u67D3\u5B8C\u6210\uFF0C\u6267\u884C\u4E0A\u4E00\u6B21\u8FD4\u56DE\u7684clear\u51FD\u6570
effect: 1
before render
clear: 1
effect: 2
before render
clear: 2
...
clear: xx -- \u7EC4\u4EF6\u9500\u6BC1\u65F6
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u7B2C\u4E00\u6B21\u6E32\u67D3\u662F\u6253\u5370render,\u5E76\u4E14\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570, \u6253\u5370effect\uFF0C\u5E76\u4E14\u8FD4\u56DE\u6E05\u695A\u526F\u4F5C\u7528\u7684\u51FD\u6570clear, <strong>3\u79D2\u540E</strong>\u6253\u5370setCounter\uFF0C\u6267\u884C<code>setCounter</code>\uFF0C \u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\uFF0C\u6253\u5370render\uFF0C\u6E32\u67D3\u5B8C\u6210\u540E\u6267\u884C\u4E0A\u4E00\u6B21\u7684clear\uFF0C\u63A5\u7740\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u4E00\u76F4\u5FAA\u73AF\uFF0C\u76F4\u5230\u9500\u6BC1\u65F6\u6267\u884Cclear\u51FD\u6570\u3002</p><h4 id="\u548Csetinterval" tabindex="-1"><a class="header-anchor" href="#\u548Csetinterval" aria-hidden="true">#</a> \u548CsetInterval</h4>`,21),_={href:"https://juejin.cn/post/6847902217031122951",target:"_blank",rel:"noopener noreferrer"},j=s("React Hooks \u4E2D\u7684\u95ED\u5305\u95EE\u9898"),S={href:"https://overreacted.io/zh-hans/making-setinterval-declarative-with-react-hooks/",target:"_blank",rel:"noopener noreferrer"},A=s("\u4F7F\u7528 React Hooks \u58F0\u660E setInterval"),I=t(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u9519\u8BEF\u793A\u4F8B\uFF0C\u521D\u59CB\u663E\u793A0\uFF0C\u4E00\u79D2\u540E\u6C38\u8FDC\u90FD\u4F1A\u663E\u793A1\uFF0C\u540C\u6837\u7684\u4EE3\u7801\u7528 class \u7EC4\u4EF6\u6765\u5B9E\u73B0\uFF0C\u5C31\u4E0D\u4F1A\u6709\u8FD9\u4E2A\u95EE\u9898\uFF0C class \u7EC4\u4EF6\u548C\u51FD\u6570\u7EC4\u4EF6\u7684\u4EE3\u7801\u7684\u5DEE\u5F02\u5728\u4E8E\uFF0Cclass \u7EC4\u4EF6\u4E2D\u7684 this.state \u662F\u53EF\u53D8\u7684\uFF01\u6BCF\u4E00\u6B21\u7684\u66F4\u65B0\u90FD\u662F\u5BF9 state \u5BF9\u8C61\u7684\u4E00\u4E2A\u66F4\u65B0\uFF0C\u4E00\u6B21\u53C8\u4E00\u6B21\u7684 setInterval \u4E2D\u5F15\u7528\u7684\u90FD\u4F1A\u662F\u65B0 state \u4E2D\u7684\u503C\u3002 \u7136\u800C\u5728\u51FD\u6570\u7EC4\u4EF6\u4E2D\u60C5\u51B5\u5C31\u4E0D\u4E00\u6837\u4E86\u3002\u51FD\u6570\u7EC4\u4EF6\u7531\u4E8E\u6BCF\u6B21\u66F4\u65B0\u90FD\u4F1A\u7ECF\u5386\u91CD\u65B0\u8C03\u7528\u7684\u8FC7\u7A0B\uFF0CuseEffect(callback) \u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u90FD\u662F\u5168\u65B0\u7684\uFF0C\u8FD9\u6837\u5176\u4E2D\u5F15\u7528\u5230\u7684 state \u503C\u5C06\u53EA\u8DDF\u5F53\u6B21\u6E32\u67D3\u7ED1\u5B9A\u3002</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FD9\u91CC</span>
            <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prevState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prevState <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4F7F\u7528useRef</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token punctuation">[</span> counter<span class="token punctuation">,</span> setCounter <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
	
	<span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
	
	<span class="token keyword">function</span> <span class="token function">addCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span>
		<span class="token function">setCounter</span><span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	
	<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		ref<span class="token punctuation">.</span>current <span class="token operator">=</span> addCounter <span class="token comment">// \u91CD\u65B0\u8D4B\u503Ccurrent\uFF0C\u5B9E\u9645\u4E0A\u662FaddCounter\u51FD\u6570\u6BCF\u6B21\u91CD\u65B0\u751F\u6210\uFF0C\u6240\u4EE5\u5F15\u7528\u7684counter\u662F\u6700\u65B0\u7684</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	
	<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			ref<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> ref<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	
	<span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span> counter <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> savedCallback <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    savedCallback<span class="token punctuation">.</span>current <span class="token operator">=</span> callback<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      savedCallback<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u81EA\u5B9A\u4E49hooks</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> savedCallback <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    savedCallback<span class="token punctuation">.</span>current <span class="token operator">=</span> callback<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      savedCallback<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>delay<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="useeffect\u4E2D\u4E0D\u80FD\u4F7F\u7528async-function" tabindex="-1"><a class="header-anchor" href="#useeffect\u4E2D\u4E0D\u80FD\u4F7F\u7528async-function" aria-hidden="true">#</a> useEffect\u4E2D\u4E0D\u80FD\u4F7F\u7528async function</h4>`,9),B={href:"https://zhuanlan.zhihu.com/p/425129987",target:"_blank",rel:"noopener noreferrer"},D=s("React useEffect \u4E0D\u652F\u6301 async function \u4F60\u77E5\u9053\u5417\uFF1F"),H=t(`<p>ahook\u7684useAsyncEffect</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> DependencyList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">useAsyncEffect</span><span class="token punctuation">(</span>
  <span class="token function-variable function">effect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AsyncGenerator<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  deps<span class="token operator">:</span> DependencyList<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">isGenerator</span><span class="token punctuation">(</span>
    val<span class="token operator">:</span> AsyncGenerator<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> AsyncGenerator<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> val<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> cancelled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isGenerator</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> e<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>cancelled <span class="token operator">||</span> result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> e<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      cancelled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> deps<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> useAsyncEffect<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h4 id="\u4F7F\u7528guide" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528guide" aria-hidden="true">#</a> \u4F7F\u7528guide</h4><p>React\u4E2D\u6709\u4E24\u4E2A\u91CD\u8981\u7684\u6982\u5FF5\uFF1A</p><ol><li>Rendering code\uFF08\u6E32\u67D3\u4EE3\u7801\uFF09</li><li>Event handlers\uFF08\u4E8B\u4EF6\u5904\u7406\u5668\uFF09</li></ol><ul><li><code>Rendering code</code>\u6307\u300C\u5F00\u53D1\u8005\u7F16\u5199\u7684\u7EC4\u4EF6\u6E32\u67D3\u903B\u8F91\u300D\uFF0C\u6700\u7EC8\u4F1A\u8FD4\u56DE\u4E00\u6BB5<code>JSX</code>\u3002\u6BD4\u5982\uFF0C\u5982\u4E0B\u7EC4\u4EF6\u5185\u90E8\u5C31\u662FRendering code\uFF1A</li></ul><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Song&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello </span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Rendering code\u7684\u7279\u70B9\u662F\uFF1A\u4ED6\u5E94\u8BE5\u662F<strong>\u4E0D\u5E26\u526F\u4F5C\u7528\u7684\u7EAF\u51FD\u6570</strong>\u3002</p><ul><li><code>Event handlers</code>\u662F\u300C<strong>\u7EC4\u4EF6\u5185\u90E8\u5305\u542B\u7684\u51FD\u6570</strong>\u300D\uFF0C\u7528\u4E8E\u6267\u884C\u7528\u6237\u64CD\u4F5C\uFF0C\u53EF\u4EE5<strong>\u5305\u542B\u526F\u4F5C\u7528</strong>\u3002</li></ul><p>\u4E0B\u9762\u8FD9\u4E9B\u64CD\u4F5C\u90FD\u5C5E\u4E8EEvent handlers\uFF1A</p><ul><li>\u66F4\u65B0input\u8F93\u5165\u6846</li><li>\u63D0\u4EA4\u8868\u5355</li><li>\u5BFC\u822A\u5230\u5176\u4ED6\u9875\u9762</li></ul><p>\u5982\u4E0B\u4F8B\u5B50\u4E2D\u7EC4\u4EF6\u5185\u90E8\u7684<code>changeName</code>\u65B9\u6CD5\u5C31\u5C5E\u4E8E<code>Event handlers</code>\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Song&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">const</span> <span class="token function-variable function">changeName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Sysuke&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>changeName<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello </span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4F46\u662F\uFF0C\u5E76\u4E0D\u662F\u6240\u6709\u526F\u4F5C\u7528\u90FD\u80FD\u5728<code>Event handlers</code>\u4E2D\u89E3\u51B3\u3002</p><p>\u6BD4\u5982\uFF0C\u5728\u4E00\u4E2A\u804A\u5929\u5BA4\u4E2D\uFF0C\u300C\u53D1\u9001\u6D88\u606F\u300D\u662F\u7528\u6237\u89E6\u53D1\u7684\uFF0C\u5E94\u8BE5\u4EA4\u7ED9<code>Event handlers</code>\u5904\u7406\u3002</p><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u804A\u5929\u5BA4\u9700\u8981\u968F\u65F6\u4FDD\u6301\u548C\u670D\u52A1\u7AEF\u7684\u957F\u8FDE\u63A5\uFF0C\u300C\u4FDD\u6301\u957F\u8FDE\u63A5\u300D\u7684\u884C\u4E3A\u5C5E\u4E8E<strong>\u526F\u4F5C\u7528</strong>\uFF0C\u4F46\u5E76\u4E0D\u662F\u7528\u6237\u884C\u4E3A\u89E6\u53D1\u7684\u3002</p><p>\u5BF9\u4E8E\u8FD9\u79CD\uFF1A<strong>\u5728\u89C6\u56FE\u6E32\u67D3\u540E\u89E6\u53D1\u7684\u526F\u4F5C\u7528\uFF0C\u5C31\u5C5E\u4E8Eeffect\uFF0C\u5E94\u8BE5\u4EA4\u7ED9useEffect\u5904\u7406\u3002</strong></p><h5 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion" aria-hidden="true">#</a> conclusion</h5>`,18),M=s("\u5F53\u6211\u4EEC\u7F16\u5199\u7EC4\u4EF6\u65F6\uFF0C\u5E94\u8BE5\u5C3D\u91CF\u5C06\u7EC4\u4EF6\u7F16\u5199\u4E3A"),q={href:"https://beta.reactjs.org/learn/keeping-components-pure",target:"_blank",rel:"noopener noreferrer"},L=s("\u7EAF\u51FD\u6570"),F=s("\u3002"),N=n("p",null,"\u5BF9\u4E8E\u7EC4\u4EF6\u4E2D\u7684\u526F\u4F5C\u7528\uFF0C\u9996\u5148\u5E94\u8BE5\u660E\u786E\uFF1A \u662F\u300C\u7528\u6237\u884C\u4E3A\u89E6\u53D1\u7684\u300D\u8FD8\u662F\u300C\u89C6\u56FE\u6E32\u67D3\u540E\u4E3B\u52A8\u89E6\u53D1\u7684\u300D\uFF1F",-1),T=n("li",null,[n("p",null,[s("\u5BF9\u4E8E\u524D\u8005\uFF0C\u5C06\u903B\u8F91\u653E\u5728"),n("code",null,"Event handlers"),s("\u4E2D\u5904\u7406\u3002")])],-1),P=n("li",null,[n("p",null,[s("\u5BF9\u4E8E\u540E\u8005\uFF0C\u4F7F\u7528"),n("code",null,"useEffect"),s("\u5904\u7406\u3002")])],-1),z={href:"https://beta.reactjs.org/learn/synchronizing-with-effects",target:"_blank",rel:"noopener noreferrer"},O=s("Synchronizing with Effects"),V=t(`<h4 id="\u6267\u884C\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u987A\u5E8F" aria-hidden="true">#</a> \u6267\u884C\u987A\u5E8F</h4><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> Child<span class="token operator">:</span> <span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&#39; effect&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&#39; clear&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">Parent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Parent effect&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Parent clear&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            Parent
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;child1&#39;</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;child2&#39;</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>show<span class="token punctuation">,</span> setShow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setShow</span><span class="token punctuation">(</span><span class="token operator">!</span>show<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">show</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span>show <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
                      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;child1&#39;</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
                      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;child2&#39;</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
                    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p><img src="`+i+`" alt=""></p><p>\u5982\u679C\u662F<code>StrictMode</code>\u7EC4\u4EF6\u4F1Arender \u4E24\u6B21</p><p>\u5B50\u7EC4\u4EF6\u7684 <code>effet</code> \u9996\u5148\u6267\u884C\uFF0C\u7136\u540E\u6267\u884C\u7236\u7EC4\u4EF6\u7684</p><p>\u5B50\u7EC4\u4EF6\u7684 <code>clean</code> \u6267\u884C\uFF0C\u7136\u540E\u7236\u7EC4\u4EF6\u7684 <code>clean</code> \u4E5F\u6267\u884C\uFF0C\u987A\u5E8F\u548C <code>effect</code> \u6267\u884C\u987A\u5E8F\u4E00\u81F4</p><h3 id="uselayouteffect" tabindex="-1"><a class="header-anchor" href="#uselayouteffect" aria-hidden="true">#</a> useLayoutEffect</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useLayoutEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// do side effects</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token comment">/* cleanup */</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>dependency<span class="token punctuation">,</span> array<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F1A\u5728\u6240\u6709\u7684 <code>DOM</code> \u53D8\u66F4\u4E4B\u540E<strong>\u540C\u6B65</strong>\u8C03\u7528 effect\u3002\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u8BFB\u53D6 DOM \u5E03\u5C40\u5E76<strong>\u540C\u6B65\u89E6\u53D1\u91CD\u6E32\u67D3</strong>\u3002<strong>\u5728\u6D4F\u89C8\u5668\u6267\u884C\u7ED8\u5236\u4E4B\u524D</strong>\uFF0CuseLayoutEffect \u5185\u90E8\u7684\u66F4\u65B0\u8BA1\u5212\u5C06\u88AB\u540C\u6B65\u5237\u65B0\u3002\u8FD9\u662F\u548C<code>useEffect</code>\u552F\u4E00\u7684\u533A\u522B\u3002</p><ol><li><code>useLayoutEffect</code>\u548C<code>componentDidMount</code>\u548C<code>componentDidUpdate</code>\u89E6\u53D1\u65F6\u673A\u4E00\u81F4\uFF08\u90FD\u5728\u5728DOM\u4FEE\u6539\u540E\u4E14\u6D4F\u89C8\u5668\u6E32\u67D3\u4E4B\u524D\uFF09\uFF1B</li><li><code>useLayoutEffect</code>\u8981\u6BD4<code>useEffect</code>\u66F4\u65E9\u7684\u89E6\u53D1\u6267\u884C\uFF1B</li><li><code>useLayoutEffect</code>\u4F1A\u963B\u585E\u6D4F\u89C8\u5668\u6E32\u67D3\uFF0C\u5207\u8BB0\u6267\u884C\u540C\u6B65\u7684\u8017\u65F6\u64CD\u4F5C\u3002</li></ol>`,10),U={href:"https://juejin.cn/post/6862624266723000328",target:"_blank",rel:"noopener noreferrer"},W=s("\u89E3\u6790 useEffect \u548C useLayoutEffect"),G={href:"https://blog.csdn.net/yunfeihe233/article/details/106616674/",target:"_blank",rel:"noopener noreferrer"},Q=s("\u6DF1\u5165\u7406\u89E3 React useLayoutEffect \u548C useEffect \u7684\u6267\u884C\u65F6\u673A"),J=t(`<p>useEffect \u548C useLayoutEffect \u7684\u533A\u522B</p><p>useEffect \u5728\u6E32\u67D3\u65F6\u662F\u5F02\u6B65\u6267\u884C\uFF0C\u5E76\u4E14\u8981\u7B49\u5230\u6D4F\u89C8\u5668\u5C06\u6240\u6709\u53D8\u5316\u6E32\u67D3\u5230\u5C4F\u5E55\u540E\u624D\u4F1A\u88AB\u6267\u884C\u3002</p><p>useLayoutEffect \u5728\u6E32\u67D3\u65F6\u662F\u540C\u6B65\u6267\u884C\uFF0C\u5176\u6267\u884C\u65F6\u673A\u4E0E componentDidMount\uFF0CcomponentDidUpdate \u4E00\u81F4</p><p>\u9664\u975E\u8981\u4FEE\u6539DOM\u5E76\u4E14\u4E0D\u8BA9\u7528\u6237\u770B\u5230\u4FEE\u6539DOM\u7684\u8FC7\u7A0B\uFF0C\u624D\u8003\u8651\u4F7F\u7528useLayoutEffect\uFF0C\u5426\u5219\u5E94\u5F53\u4F7F\u7528useEffect\u3002</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">FuncCom</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">===</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8017\u65F6\u7684\u64CD\u4F5C 500ms</span>
            <span class="token keyword">const</span> pre <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> pre <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token function">setCounter</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>counter<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u521D\u59CB\u5C4F\u5E55\u4E0A\u662F 0\uFF0C\u5F53\u70B9\u51FB\u89E6\u53D1 setCounter \u540E\uFF0C\u5C4F\u5E55\u4E0A\u5148\u662F\u51FA\u73B0\u4E86 12\uFF0C\u6700\u540E\u53D8\u4E3A\u4E86 2:</p><p>\u6362\u6210\u4E86 useLayoutEffect \u540E\uFF0C\u5C4F\u5E55\u4E0A\u53EA\u4F1A\u51FA\u73B0 0 \u548C 2\uFF0C\u8FD9\u662F\u56E0\u4E3A useLayoutEffect \u7684\u540C\u6B65\u7279\u6027\uFF0C\u4F1A\u5728\u6D4F\u89C8\u5668\u6E32\u67D3\u4E4B\u524D\u540C\u6B65\u66F4\u65B0 DOM \u6570\u636E\uFF0C\u54EA\u6015\u662F\u591A\u6B21\u7684\u64CD\u4F5C\uFF0C\u4E5F\u4F1A\u5728\u6E32\u67D3\u524D\u4E00\u6B21\u6027\u5904\u7406\u5B8C\uFF0C\u518D\u4EA4\u7ED9\u6D4F\u89C8\u5668\u7ED8\u5236\u3002\u8FD9\u6837\u4E0D\u4F1A\u5BFC\u81F4\u95EA\u5C4F\u73B0\u8C61\u53D1\u751F\u3002</p><p>\u4F46\u5982\u679C\u5728<code>if (counter === 12) {</code>\u8FD9\u91CCF12 debug\uFF0C\u5C4F\u5E55\u4E0A\u4F1A\u663E\u793A12\u3002</p><h3 id="\u81EA\u5B9A\u4E49hooks" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49hooks" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49Hooks</h3><p>\u81EA\u5B9A\u4E49hooks\u90FD\u4F1A\u4EE5<code>use</code>\u5F00\u5934\uFF0C\u4EE5\u8868\u793A\u8BE5\u65B9\u6CD5<strong>\u53EA\u80FD\u5728\u51FD\u6570\u5F0F\u7EC4\u4EF6\u4E2D\u4F7F\u7528</strong>\u3002\u611F\u89C9\u5C31\u662F\u5BF9\u539F\u6709\u51FD\u6570\u7EC4\u4EF6\u4E2D\u4F9D\u8D56\u4E8Estate\u7684\u903B\u8F91\u7684\u62BD\u79BB</p><p>\u81EA\u5B9A\u4E49Hooks\u5B9E\u73B0\u4E86<strong>\u903B\u8F91\u7247\u6BB5\u590D\u7528</strong></p><p>\u800C\u548C\u666E\u901A\u51FD\u6570\u66F4\u5F3A\u4E00\u70B9\u7684\u662F\uFF0C\u81EA\u5B9A\u4E49hooks\u8FD8\u80FD\u591F\u5C01\u88C5\u5F02\u6B65\u903B\u8F91\u7247\u6BB5\u3002</p><p>example</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// .useEqualArr.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">equalArr</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">!==</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useEqualArr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>arrA<span class="token punctuation">,</span> setArrA<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>arrB<span class="token punctuation">,</span> setArrB<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isEqual <span class="token operator">=</span> <span class="token function">equalArr</span><span class="token punctuation">(</span>arrA<span class="token punctuation">,</span> arrB<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    arrA<span class="token punctuation">,</span>
    setArrA<span class="token punctuation">,</span>
    arrB<span class="token punctuation">,</span>
    setArrB<span class="token punctuation">,</span>
    isEqual
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> useEqualArr <span class="token keyword">from</span> <span class="token string">&#39;./useEqualArr&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">EqualArr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>arrA<span class="token punctuation">,</span> arrB<span class="token punctuation">,</span> setArrA<span class="token punctuation">,</span> setArrB<span class="token punctuation">,</span> isEqual<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useEqualArr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>example\uFF1A\u5C01\u88C5\u4E00\u4E2A\u516C\u7528\u9875\u9762\u521D\u6B21\u52A0\u8F7DHooks</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useInitial</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">api</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  params<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">,</span>
  defaultData<span class="token operator">:</span> <span class="token constant">V</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>response<span class="token punctuation">,</span> setResponse<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>defaultData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>errMsg<span class="token punctuation">,</span> setErrmsg<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>loading<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">api</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setResponse</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setErrmsg</span><span class="token punctuation">(</span>errMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">,</span>
    setLoading<span class="token punctuation">,</span>
    response<span class="token punctuation">,</span>
    errMsg
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u5728\u9875\u9762\u4E2D\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">FunctionDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u9700\u8981\u4F20\u5165api\uFF0C \u5BF9\u5E94\u7684\u53C2\u6570\u4E0E\u8FD4\u56DE\u7ED3\u679C\u7684\u521D\u59CB\u9ED8\u8BA4\u503C\u5373\u53EF</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">,</span> response<span class="token punctuation">,</span> errMsg<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useInitial</span><span class="token punctuation">(</span>api<span class="token punctuation">,</span> <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5237\u65B0\u9875\u9762: <code>setLoading(true);</code></p><h3 id="usereducer" tabindex="-1"><a class="header-anchor" href="#usereducer" aria-hidden="true">#</a> useReducer</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button  <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;antd&#39;</span>

<span class="token keyword">enum</span> Actions <span class="token punctuation">{</span>
    Increment <span class="token operator">=</span> <span class="token string">&#39;Increment&#39;</span><span class="token punctuation">,</span>
    Decrement <span class="token operator">=</span> <span class="token string">&#39;Decrement&#39;</span><span class="token punctuation">,</span>
    Rest <span class="token operator">=</span> <span class="token string">&#39;Rest&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">Reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> action<span class="token operator">:</span> Actions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> Actions<span class="token punctuation">.</span>Increment<span class="token operator">:</span>
            <span class="token keyword">return</span> state <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">case</span> Actions<span class="token punctuation">.</span>Decrement<span class="token operator">:</span>
            <span class="token keyword">return</span> state <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token keyword">case</span> Actions<span class="token punctuation">.</span>Rest<span class="token operator">:</span>
            <span class="token keyword">return</span>  <span class="token number">0</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ReactHooksWay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> initialState<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>Reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>counter<span class="token operator">:</span> <span class="token punctuation">{</span> counter<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>Actions<span class="token punctuation">.</span>Increment<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span> Actions<span class="token punctuation">.</span>Increment <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>Actions<span class="token punctuation">.</span>Decrement<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span> Actions<span class="token punctuation">.</span>Decrement <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>Actions<span class="token punctuation">.</span>Rest<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span> Actions<span class="token punctuation">.</span>Rest <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="usecontext" tabindex="-1"><a class="header-anchor" href="#usecontext" aria-hidden="true">#</a> useContext</h3><p>ContextProvider</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> createContext<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> Dispatch<span class="token punctuation">,</span> ReactNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">Injected</span>  <span class="token punctuation">{</span>
    counter<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    setCounter<span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token function-variable function">decrement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
<span class="token comment">// eslint-disable-next-line</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>Injected<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Injected<span class="token punctuation">)</span>

<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
    children<span class="token operator">?</span><span class="token operator">:</span> ReactNode
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">CounterProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span> children <span class="token punctuation">}</span><span class="token operator">:</span> Props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token punctuation">{</span>
        counter<span class="token punctuation">,</span>
        setCounter<span class="token punctuation">,</span>
        <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function-variable function">decrement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span>counter <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>context<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>context<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;antd&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> context<span class="token punctuation">,</span> CounterProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./ContextProvider&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> increment<span class="token punctuation">,</span> decrement <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">&#39;400px&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>\u7B2C\u4E00\u5C42\u7EC4\u4EF6<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">&#39;40px&#39;</span><span class="token punctuation">,</span> margin<span class="token operator">:</span> <span class="token string">&#39;100px auto&#39;</span><span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token string">&#39;40px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>counter<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>increment<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u9012\u589E<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u9012\u51CF<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>TwoChild<span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>MemoTwoChild<span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">TwoChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;render&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>\u7B2C\u4E8C\u5C42\u7EC4\u4EF6<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>hello<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ThirdChild<span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> MemoTwoChild <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">memo</span><span class="token punctuation">(</span>TwoChild<span class="token punctuation">)</span> <span class="token comment">// context\u53D8\u5316\u65F6\uFF0C\u4E0D\u4F1A\u6253\u5370render</span>

<span class="token keyword">function</span> <span class="token function">ThirdChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> increment<span class="token punctuation">,</span> decrement <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">&#39;200px&#39;</span><span class="token punctuation">,</span> margin<span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>\u7B2C\u4E09\u5C42\u7EC4\u4EF6<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">&#39;40px&#39;</span><span class="token punctuation">,</span> margin<span class="token operator">:</span> <span class="token string">&#39;100px auto&#39;</span><span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token string">&#39;40px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>counter<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>increment<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u9012\u589E<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u9012\u51CF<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>CounterProvider<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Counter <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>CounterProvider<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="useref" tabindex="-1"><a class="header-anchor" href="#useref" aria-hidden="true">#</a> useRef</h3><p>\u5728\u51FD\u6570\u5F0F\u7EC4\u4EF6\u4E2D\uFF0C<code>useRef</code> \u662F\u4E00\u4E2A\u8FD4\u56DE\u53EF\u53D8\u5F15\u7528\u5BF9\u8C61\u7684\u51FD\u6570\u3002\u8BE5\u5BF9\u8C61<code>.current</code>\u5C5E\u6027\u7684\u521D\u59CB\u503C\u4E3AuseRef\u4F20\u5165\u7684\u53C2\u6570<code>initialVale</code>\u3002</p><p>\u8FD4\u56DE\u7684\u5BF9\u8C61\u5C06\u5728\u7EC4\u4EF6\u6574\u4E2A\u751F\u547D\u5468\u671F\u4E2D\u6301\u7EED\u5B58\u5728\u3002\u5F53 <code>useRef</code> \u7684\u5185\u5BB9\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u5B83\u4E0D\u4F1A\u901A\u77E5\u3002\u66F4\u6539<code>.current</code>\u5C5E\u6027\u4E0D\u4F1A\u5BFC\u81F4\u91CD\u65B0render\u5448\u73B0\u3002\u56E0\u4E3A\u5B83\u4E00\u76F4\u662F\u4E00\u4E2A\u5F15\u7528\u3002</p><p><code>const ref = useRef(initialValue);</code></p><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0CuseRef\u6709\u4E24\u79CD\u7528\u9014\uFF0C</p><ol><li>\u8BBF\u95EEDOM\u8282\u70B9\uFF0C\u6216\u8005React\u5143\u7D20 \u81EA\u5B9A\u4E49\u7EC4\u4EF6ref\uFF0C\u4F7F\u7528<code> React.createRef()</code>\u6216\u8005<code>useRef</code>\uFF0C\u5916\u52A0<code>React.forwardRef</code></li></ol><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> FancyButton <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FancyButton<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F60\u53EF\u4EE5\u76F4\u63A5\u83B7\u53D6 DOM button \u7684 ref\uFF1A</span>
<span class="token keyword">const</span> ref <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FancyButton</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click me!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FancyButton</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>hooks way</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>forwardRef<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> ChangeEvent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">InputProps</span> <span class="token punctuation">{</span>
  value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Input</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token punctuation">,</span> onChange<span class="token punctuation">}</span><span class="token operator">:</span> InputProps<span class="token punctuation">,</span> ref<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>_value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">_onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token function">setValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    onChange <span class="token operator">&amp;&amp;</span> <span class="token function">onChange</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      \u81EA\u5B9A\u4E49Input\u7EC4\u4EF6
      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>_value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>_onChange<span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span>Input<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ol start="2"><li>\u4FDD\u6301\u53D8\u91CF\u5F15\u7528</li></ol><p>\u548C<code>createRef</code>\u7684\u533A\u522B</p><blockquote><p><code>useRef</code> returns a mutable ref object whose <code>.current</code> property is initialized to the passed argument (<code>initialValue</code>). The returned object will persist for the full lifetime of the component.</p></blockquote><p><code>useRef</code> \u5728 react hook \u4E2D\u7684\u4F5C\u7528, \u6B63\u5982\u5B98\u7F51\u8BF4\u7684, \u5B83\u50CF\u4E00\u4E2A\u53D8\u91CF, \u7C7B\u4F3C\u4E8E this , \u5B83\u5C31\u50CF\u4E00\u4E2A\u76D2\u5B50, \u4F60\u53EF\u4EE5\u5B58\u653E\u4EFB\u4F55\u4E1C\u897F. <strong><code>createRef</code> \u6BCF\u6B21\u6E32\u67D3\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5F15\u7528\uFF0C\u800C <code>useRef</code> \u6BCF\u6B21\u90FD\u4F1A\u8FD4\u56DE\u76F8\u540C\u7684\u5F15\u7528</strong>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> timerRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>NodeJS<span class="token punctuation">.</span>Timeout<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    timerRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;do something&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7EC4\u4EF6\u5378\u8F7D\u65F6\uFF0C\u6E05\u9664\u5B9A\u65F6\u5668</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      timerRef<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token comment">// ...</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>example: \u754C\u9762\u4E0A\u663E\u793A\u51FA\u4E0A\u4E00\u4E2A count \u7684\u503C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">usePrevious</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        ref<span class="token punctuation">.</span>current <span class="token operator">=</span> state
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> ref<span class="token punctuation">.</span>current
<span class="token punctuation">}</span>


<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span> counter<span class="token punctuation">,</span> setCounter <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> prevCounter <span class="token operator">=</span> <span class="token function">usePrevious</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span>counter<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span> <span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCounter</span><span class="token punctuation">(</span>counter<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">-</span> <span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Now<span class="token operator">:</span> <span class="token punctuation">{</span> counter<span class="token punctuation">}</span><span class="token punctuation">,</span> before<span class="token operator">:</span> <span class="token punctuation">{</span> prevCounter <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><blockquote><p>explain: <strong><code>useRef</code> \u6BCF\u6B21\u90FD\u4F1A\u8FD4\u56DE\u76F8\u540C\u7684\u5F15\u7528</strong>\uFF0C\u7B2C\u4E00\u6B21\u6E32\u67D3\u65F6\uFF0Ccounter\u4E3A0\uFF0C\u800C\u6267\u884C\u5230\u81EA\u5B9A\u4E49\u7684hook,<code>usePrevious</code>\u65F6\uFF0C\u4F20\u5165\u7684state\u662F0\uFF0C \u4F46<code>useEffect</code>\u526F\u4F5C\u7528\u51FD\u6570\u662F\u5728dom\u6E32\u67D3\u5B8C\u6267\u884C\uFF0C\u6240\u4EE5<code>return</code>\u7684\u503C\u662F<code>undefined</code>,\u9875\u9762\u7684<code>prevCounter</code>\u5219\u6CA1\u6709\u663E\u793A\u503C\u3002 \u5F53<code>setCounter</code>\u65F6\uFF0C\u51FD\u6570\u91CD\u65B0\u8FD0\u884C\uFF0C\u53D6\u5230\u7684\u662F\u4E4B\u524D\u4F20\u5165\u7684<code>counter</code>,\u6240\u4EE5\u9875\u9762\u663E\u793A<code>counter</code>\u662F1\uFF0C<code>prevCounter</code>\u662F0\u3002</p></blockquote><h3 id="useimperativehandle" tabindex="-1"><a class="header-anchor" href="#useimperativehandle" aria-hidden="true">#</a> useImperativeHandle</h3><p><code>useImperativeHandle</code>\u53EF\u4EE5\u8BA9\u6211\u4EEC\u5728\u4F7F\u7528<code>ref</code>\u65F6\u81EA\u5B9A\u4E49\u66B4\u9732\u7ED9\u7236\u7EC4\u4EF6\u7684\u5B9E\u4F8B\u503C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useRef<span class="token punctuation">,</span> useImperativeHandle<span class="token punctuation">,</span> forwardRef<span class="token punctuation">,</span> Ref<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> ChangeEvent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">InputProps</span> <span class="token punctuation">{</span>
  value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">XInput</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">blur</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">setInputValue</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Input</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token punctuation">,</span> onChange<span class="token punctuation">}</span><span class="token operator">:</span> InputProps<span class="token punctuation">,</span> ref<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>XInput<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>_value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      inputRef<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">blur</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      inputRef<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">setInputValue</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">_onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    onChange <span class="token operator">&amp;&amp;</span> <span class="token function">onChange</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      \u81EA\u5B9A\u4E49Input\u7EC4\u4EF6
      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>_value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>_onChange<span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span>Input<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Input <span class="token keyword">from</span> <span class="token string">&#39;./components/Input&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> textInput <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>text<span class="token punctuation">,</span> setText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">focusTextInput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>textInput<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      textInput<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      textInput<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">setInputValue</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Input ref<span class="token operator">=</span><span class="token punctuation">{</span>textInput<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>setText<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>focusTextInput<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u70B9\u51FB\u6211\uFF0Cinput\u7EC4\u4EF6\u83B7\u5F97\u7126\u70B9\u5E76\u8BBE\u7F6Einput value<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Demo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>compare: component\u7236\u7EC4\u4EF6\u8C03\u7528\u5B50\u7EC4\u4EF6\u65B9\u6CD5</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Parent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>

    <span class="token function-variable function">onRef</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ref</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>child <span class="token operator">=</span> ref
    <span class="token punctuation">}</span>

    <span class="token function-variable function">click</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">.</span><span class="token function">myName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">onRef</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onRef<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>click<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">click</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Child</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">onRef</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">myName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;child log&#39;</span><span class="token punctuation">)</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">child</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo" aria-hidden="true">#</a> useMemo</h3><p>\u8BB0\u5FC6\u51FD\u6570<code>useMemo</code>\u548C<code>useCallback</code>\u4E5F\u662F\u9760\u95ED\u5305\u5B9E\u73B0\uFF0C\u8BB0\u5FC6\u51FD\u6570\u5E76\u975E\u5B8C\u5168\u6CA1\u6709\u4EE3\u4EF7\uFF0C\u6211\u4EEC\u9700\u8981\u521B\u5EFA\u95ED\u5305\uFF0C\u5360\u7528\u66F4\u591A\u7684\u5185\u5B58\uFF0C\u7528\u4EE5\u89E3\u51B3\u8BA1\u7B97\u4E0A\u7684\u5197\u4F59\u3002</p><p><code>useMemo</code>\u7F13\u5B58\u8BA1\u7B97\u7ED3\u679C\u3002\u5B83\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u8BA1\u7B97\u8FC7\u7A0B(\u56DE\u8C03\u51FD\u6570\uFF0C\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u7ED3\u679C)\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4F9D\u8D56\u9879(\u6570\u7EC4)\uFF0C\u5F53\u4F9D\u8D56\u9879\u4E2D\u67D0\u4E00\u4E2A\u53D1\u751F\u53D8\u5316\uFF0C\u7ED3\u679C\u5C06\u4F1A\u91CD\u65B0\u8BA1\u7B97\u3002 \u5982\u679C\u6CA1\u6709\u63D0\u4F9B\u4F9D\u8D56\u9879\u6570\u7EC4\uFF0CuseMemo \u5728\u6BCF\u6B21\u6E32\u67D3\u65F6\u90FD\u4F1A\u8BA1\u7B97\u65B0\u7684\u503C\uFF1B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useMemo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function-variable function">factory</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span> deps<span class="token operator">:</span> DependencyList <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>example: base\u53EA\u4F1A\u5728\u7B2C\u4E00\u6B21\u6E32\u67D3\u65F6\u8BA1\u7B97\u53CA\u8FD0\u884C<code>expensiveFn</code>, <code>state</code>\u53D8\u5316\u91CD\u65B0render\u65F6\uFF0C\u4E0D\u4F1A\u5728\u8FD0\u884C\uFF0C\u9664\u975E<code>useMemo</code>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6CA1\u6709\u6216\u8005\uFF0C\u662F<code>[num]</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Divider<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;antd&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>num<span class="token punctuation">,</span> setNum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token comment">// \u4E00\u4E2A\u975E\u5E38\u8017\u65F6\u7684\u4E00\u4E2A\u8BA1\u7B97\u51FD\u6570</span>
    <span class="token comment">// result \u6700\u540E\u8FD4\u56DE\u7684\u503C\u662F 49995000</span>
    <span class="token keyword">function</span> <span class="token function">expensiveFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">+=</span> i
        <span class="token punctuation">}</span>

        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// 49995000</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// const base = expensiveFn()</span>

    <span class="token keyword">const</span> base <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span>expensiveFn<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>example one<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>count\uFF1A<span class="token punctuation">{</span>num<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setNum</span><span class="token punctuation">(</span>num <span class="token operator">+</span> base<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="usecallback" tabindex="-1"><a class="header-anchor" href="#usecallback" aria-hidden="true">#</a> useCallback</h3><p>useCallback\u7684\u4F7F\u7528\u51E0\u4E4E\u4E0EuseMemo\u4E00\u6837\uFF0C\u4E0D\u8FC7useCallback\u7F13\u5B58\u7684\u662F\u4E00\u4E2A\u51FD\u6570\u4F53\uFF0C\u5F53\u4F9D\u8D56\u9879\u4E2D\u7684\u4E00\u9879\u53D1\u73B0\u53D8\u5316\uFF0C\u51FD\u6570\u4F53\u4F1A\u91CD\u65B0\u521B\u5EFA\u3002 <code>useCallback(fn, deps)</code> \u76F8\u5F53\u4E8E <code>useMemo(() =&gt; fn, deps)</code></p><ol><li>\u51FD\u6570\u6BD4\u8F83\u590D\u6742\uFF0C\u7528<code>useCallback</code>\u907F\u514D\u91CD\u590D\u521B\u5EFA\u540C\u6837\u65B9\u6CD5\u7684\u8D1F\u62C5</li><li>\u5F53\u51FD\u6570\u5F53\u505Aprops\u4F20\u9012\u7ED9\u5B50\u7EC4\u4EF6\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>useCallback</code>\uFF0C\u907F\u514D\u5F53\u7236\u7EC4\u4EF6\u91CD\u65B0<code>render</code>\u65F6\uFF0C\u91CD\u65B0\u521B\u5EFA\u53D1\u9001\u5BFC\u81F4\u5B50\u7EC4\u4EF6\u66F4\u65B0\u3002</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> useCallback<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> deps<span class="token operator">:</span> DependencyList<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+k+'" alt=""></p><h2 id="\u4F18\u5316\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u603B\u7ED3" aria-hidden="true">#</a> \u4F18\u5316\u603B\u7ED3</h2><p>React \u7684\u6027\u80FD\u4F18\u5316\u65B9\u5411\u4E3B\u8981\u662F\u4E24\u4E2A\uFF1A<strong>\u4E00\u4E2A\u662F\u51CF\u5C11\u91CD\u65B0 render \u7684\u6B21\u6570(\u6216\u8005\u8BF4\u51CF\u5C11\u4E0D\u5FC5\u8981\u7684\u6E32\u67D3)</strong>\uFF0C<strong>\u53E6\u4E00\u4E2A\u662F\u51CF\u5C11\u8BA1\u7B97\u7684\u91CF\u3002</strong></p><p>\u4E00\u4E2A\u7EC4\u4EF6\u91CD\u65B0\u91CD\u65B0\u6E32\u67D3\uFF0C\u4E00\u822C\u4E09\u79CD\u60C5\u51B5\uFF1A</p><ol><li>\u8981\u4E48\u662F\u7EC4\u4EF6\u81EA\u5DF1\u7684\u72B6\u6001\u6539\u53D8</li><li>\u8981\u4E48\u662F\u7236\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\uFF0C\u5BFC\u81F4\u5B50\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\uFF0C\u4F46\u662F\u7236\u7EC4\u4EF6\u7684 props \u6CA1\u6709\u6539\u53D8</li><li>\u8981\u4E48\u662F\u7236\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\uFF0C\u5BFC\u81F4\u5B50\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\uFF0C\u4F46\u662F\u7236\u7EC4\u4EF6\u4F20\u9012\u7684 props \u6539\u53D8</li></ol><p>\u51CF\u5C11\u4E0D\u5FC5\u8981\u7684\u6E32\u67D3\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>use.memo</code>\u548C<code>useCallback</code>\uFF0C\u6216\u8005\u4E4B\u524D\u7684<code>shouldComponentUpdate</code>\u548C<code>pureComponent</code></p><p><strong><code>useMemo</code> \u505A\u8BA1\u7B97\u7ED3\u679C\u7F13\u5B58</strong></p><h2 id="\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406" aria-hidden="true">#</a> \u539F\u7406</h2>',69),X={href:"https://juejin.cn/post/6844904205371588615",target:"_blank",rel:"noopener noreferrer"},$=s("\u524D\u7AEF\u9762\u8BD5\u5FC5\u8003\u9898\uFF1AReact Hooks \u539F\u7406\u5256\u6790"),K={href:"https://juejin.cn/post/6844904080758800392",target:"_blank",rel:"noopener noreferrer"},Y=s("React Hooks\u6E90\u7801\u89E3\u6790"),Z={href:"https://juejin.cn/post/6944863057000529933",target:"_blank",rel:"noopener noreferrer"},nn=s("\u4E00\u6587\u5403\u900Freact-hooks\u539F\u7406"),sn=t(`<p>useState \u548C useReducer \u90FD\u662F\u5173\u4E8E\u72B6\u6001\u503C\u7684\u63D0\u53D6\u548C\u66F4\u65B0\uFF0C\u4ECE\u672C\u8D28\u4E0A\u6765\u8BF4\u6CA1\u6709\u533A\u522B\uFF0C\u4ECE\u5B9E\u73B0\u4E0A\uFF0C\u53EF\u4EE5\u8BF4 useState \u662F useReducer \u7684\u4E00\u4E2A\u7B80\u5316\u7248\uFF0C\u5176\u80CC\u540E\u7528\u7684\u90FD\u662F\u540C\u4E00\u5957\u903B\u8F91\u3002</p><p>React Hooks \u4FDD\u5B58\u72B6\u6001\u7684\u4F4D\u7F6E\u5176\u5B9E\u4E0E\u7C7B\u7EC4\u4EF6\u7684\u4E00\u81F4\uFF1A</p><ul><li>\u4E24\u8005\u7684\u72B6\u6001\u503C\u90FD\u88AB\u6302\u8F7D\u5728\u7EC4\u4EF6\u5B9E\u4F8B\u5BF9\u8C61<code>FiberNode</code>\u7684<code>memoizedState</code>\u5C5E\u6027\u4E2D\u3002</li><li>\u4E24\u8005\u4FDD\u5B58\u72B6\u6001\u503C\u7684<strong>\u6570\u636E\u7ED3\u6784\u5B8C\u5168\u4E0D\u540C</strong>\uFF1B\u7C7B\u7EC4\u4EF6\u662F\u76F4\u63A5\u628A <code>state</code> \u5C5E\u6027\u4E2D\u6302\u8F7D\u7684\u8FD9\u4E2A\u5F00\u53D1\u8005\u81EA\u5B9A\u4E49\u7684\u5BF9\u8C61\u7ED9\u4FDD\u5B58\u5230memoizedState\u5C5E\u6027\u4E2D\uFF1B\u800C <code>React Hooks</code> \u662F\u7528<strong>\u94FE\u8868</strong>\u6765\u4FDD\u5B58\u72B6\u6001\u7684\uFF0C<code>memoizedState</code>\u5C5E\u6027\u4FDD\u5B58\u7684\u5B9E\u9645\u4E0A\u662F\u8FD9\u4E2A\u94FE\u8868\u7684<strong>\u5934\u6307\u9488</strong>\u3002 \u94FE\u8868\u7684\u8282\u70B9:</li></ul><div class="language-flow ext-flow line-numbers-mode"><pre class="language-flow"><code><span class="token comment">// react-reconciler/src/ReactFiberHooks.js</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> Hook <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token type class-name">any</span><span class="token punctuation">,</span> <span class="token comment">// \u6700\u65B0\u7684\u72B6\u6001\u503C</span>
  <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token type class-name">any</span><span class="token punctuation">,</span> <span class="token comment">// \u521D\u59CB\u72B6\u6001\u503C\uFF0C\u5982\`useState(0)\`\uFF0C\u5219\u521D\u59CB\u503C\u4E3A0</span>
  <span class="token literal-property property">baseUpdate</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token type class-name">any</span><span class="token punctuation">,</span> <span class="token type class-name">any</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token type class-name">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">queue</span><span class="token operator">:</span> UpdateQueue<span class="token operator">&lt;</span><span class="token type class-name">any</span><span class="token punctuation">,</span> <span class="token type class-name">any</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token type class-name">null</span><span class="token punctuation">,</span> <span class="token comment">// \u4E34\u65F6\u4FDD\u5B58\u5BF9\u72B6\u6001\u503C\u7684\u64CD\u4F5C\uFF0C\u66F4\u51C6\u786E\u6765\u8BF4\u662F\u4E00\u4E2A\u94FE\u8868\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u4E00\u4E2A\u6307\u9488</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> Hook <span class="token operator">|</span> <span class="token type class-name">null</span><span class="token punctuation">,</span>  <span class="token comment">// \u6307\u5411\u4E0B\u4E00\u4E2A\u94FE\u8868\u8282\u70B9</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>hooks\u5206\u4E3A<code>mount\u9636\u6BB5</code>\u548C<code>update\u9636\u6BB5</code></p><p>\u5728mount\u9636\u6BB5\uFF0C\u6BCF\u5F53\u8C03\u7528Hooks\u65B9\u6CD5\uFF0C\u6BD4\u5982<code>useState</code>\uFF0C<code>mountState</code>\u5C31\u4F1A\u8C03\u7528<code>mountWorkInProgressHook </code>\u6765\u521B\u5EFA\u4E00\u4E2AHook\u8282\u70B9\uFF0C\u5E76\u628A\u5B83\u6DFB\u52A0\u5230<code>Hooks</code>\u94FE\u8868\u4E0A</p><p>useState\u548CuseReducer\u90FD\u662F\u4F7F\u7528\u4E86\u4E00\u4E2A<code>queue\u94FE\u8868</code>\u6765\u5B58\u653E\u6BCF\u4E00\u6B21\u7684\u66F4\u65B0\u3002\u4EE5\u4FBF\u540E\u9762\u7684<code>update\u9636\u6BB5</code>\u53EF\u4EE5\u8FD4\u56DE\u6700\u65B0\u7684\u72B6\u6001\u3002\u6BCF\u6B21\u8C03\u7528<code>dispatchAction</code>\u65B9\u6CD5(useState,useReducer\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8FD4\u56DE\u7684\u4FEE\u6539state\u7684\u51FD\u6570\uFF09\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u5F62\u6210\u4E00\u4E2A\u65B0\u7684update\u5BF9\u8C61\uFF0C\u6DFB\u52A0\u5230queue\u94FE\u8868\u4E0A\uFF0C \u800C\u4E14\u8FD9\u4E2A\u662F\u4E00\u4E2A<strong>\u5FAA\u73AF\u94FE\u8868</strong>\u3002<code>dispatchAction</code>\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF1A</p><details class="custom-container details"><summary>\u5B9E\u73B0</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// react-reconciler/src/ReactFiberHooks.js</span>
<span class="token comment">// \u53BB\u9664\u7279\u6B8A\u60C5\u51B5\u548C\u4E0Efiber\u76F8\u5173\u7684\u903B\u8F91</span>
<span class="token keyword">function</span> <span class="token function">dispatchAction</span><span class="token punctuation">(</span><span class="token parameter">fiber<span class="token punctuation">,</span>queue<span class="token punctuation">,</span>action<span class="token punctuation">,</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token punctuation">{</span>
      action<span class="token punctuation">,</span>
      <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06update\u5BF9\u8C61\u6DFB\u52A0\u5230\u5FAA\u73AF\u94FE\u8868\u4E2D</span>
    <span class="token keyword">const</span> last <span class="token operator">=</span> queue<span class="token punctuation">.</span>last<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>last <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u94FE\u8868\u4E3A\u7A7A\uFF0C\u5C06\u5F53\u524D\u66F4\u65B0\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\uFF0C\u5E76\u4FDD\u6301\u5FAA\u73AF</span>
      update<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> first <span class="token operator">=</span> last<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728\u6700\u65B0\u7684update\u5BF9\u8C61\u540E\u9762\u63D2\u5165\u65B0\u7684update\u5BF9\u8C61</span>
        update<span class="token punctuation">.</span>next <span class="token operator">=</span> first<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      last<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06\u8868\u5934\u4FDD\u6301\u5728\u6700\u65B0\u7684update\u5BF9\u8C61\u4E0A</span>
    queue<span class="token punctuation">.</span>last <span class="token operator">=</span> update<span class="token punctuation">;</span>
   <span class="token comment">// \u8FDB\u884C\u8C03\u5EA6\u5DE5\u4F5C</span>
    <span class="token function">scheduleWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></details><h4 id="useeffect-1" tabindex="-1"><a class="header-anchor" href="#useeffect-1" aria-hidden="true">#</a> useEffect</h4><p>useEffect \u7684\u4FDD\u5B58\u65B9\u5F0F\u4E0E <code>useState / useReducer</code> \u7C7B\u4F3C\uFF0C\u4E5F\u662F\u4EE5\u94FE\u8868\u7684\u5F62\u5F0F\u6302\u8F7D\u5728<code>FiberNode.updateQueue</code>\u4E2D\u3002</p><p>mount \u9636\u6BB5\uFF1A<strong>mountEffect</strong></p><ol><li>\u6839\u636E\u51FD\u6570\u7EC4\u4EF6\u51FD\u6570\u4F53\u4E2D\u4F9D\u6B21\u8C03\u7528\u7684 <code>useEffect</code> \u8BED\u53E5\uFF0C\u6784\u5EFA\u6210\u4E00\u4E2A\u94FE\u8868\u5E76\u6302\u8F7D\u5728<code>FiberNode.updateQueue</code>\u4E2D\uFF0C\u94FE\u8868\u8282\u70B9\u7684\u6570\u636E\u7ED3\u6784\u4E3A\uFF1A</li></ol><div class="language-flow ext-flow line-numbers-mode"><pre class="language-flow"><code> <span class="token keyword">const</span> <span class="token literal-property property">effect</span><span class="token operator">:</span> Effect <span class="token operator">=</span> <span class="token punctuation">{</span>
    tag<span class="token punctuation">,</span> <span class="token comment">// \u7528\u6765\u6807\u8BC6\u4F9D\u8D56\u9879\u6709\u6CA1\u6709\u53D8\u52A8</span>
    create<span class="token punctuation">,</span> <span class="token comment">// \u7528\u6237\u4F7F\u7528useEffect\u4F20\u5165\u7684\u51FD\u6570\u4F53</span>
    destroy<span class="token punctuation">,</span> <span class="token comment">// \u4E0A\u8FF0\u51FD\u6570\u4F53\u6267\u884C\u540E\u751F\u6210\u7684\u7528\u6765\u6E05\u9664\u526F\u4F5C\u7528\u7684\u51FD\u6570</span>
    deps<span class="token punctuation">,</span> <span class="token comment">// \u4F9D\u8D56\u9879\u5217\u8868</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token type class-name">null</span><span class="token operator">:</span> <span class="token type class-name">any</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="2"><li>\u7EC4\u4EF6\u5B8C\u6210\u6E32\u67D3\u540E\uFF0C\u904D\u5386\u94FE\u8868\u6267\u884C\u3002</li></ol><p>update \u9636\u6BB5\uFF1A<strong>updateEffect</strong></p><ol><li>\u540C\u6837\u5728\u4F9D\u6B21\u8C03\u7528 <code>useEffect</code> \u8BED\u53E5\u65F6\uFF0C\u5224\u65AD\u6B64\u65F6\u4F20\u5165\u7684\u4F9D\u8D56\u5217\u8868\uFF0C\u4E0E\u94FE\u8868\u8282\u70B9<code>Effect.deps</code>\u4E2D\u4FDD\u5B58\u7684\u662F\u5426\u4E00\u81F4\uFF08\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u503C\u662F\u5426\u76F8\u540C\uFF1B\u5BF9\u8C61\u7684\u5F15\u7528\u662F\u5426\u76F8\u540C\uFF09\uFF0C\u5982\u679C\u4E00\u81F4\uFF0C\u5219\u5728<code>Effect.tag</code>\u6807\u8BB0\u4E0A<code>NoHookEffect</code>\u3002</li></ol><p><strong>\u6267\u884C\u9636\u6BB5</strong></p><p>\u5728\u6BCF\u6B21\u7EC4\u4EF6\u6E32\u67D3\u5B8C\u6210\u540E\uFF0C\u5C31\u4F1A\u8FDB\u5165 useEffect \u7684\u6267\u884C\u9636\u6BB5\uFF1A<code>function commitHookEffectList()</code>\uFF1A</p><ol><li>\u904D\u5386\u94FE\u8868</li><li>\u5982\u679C\u9047\u5230<code>Effect.tag</code>\u88AB\u6807\u8BB0\u4E0A<code>NoHookEffect</code>\u7684\u8282\u70B9\u5219\u8DF3\u8FC7\u3002</li><li>\u5982\u679C<code>Effect.destroy\u4E3A</code>\u51FD\u6570\u7C7B\u578B\uFF0C\u5219\u9700\u8981\u6267\u884C\u8BE5\u6E05\u9664\u526F\u4F5C\u7528\u7684\u51FD\u6570\uFF08\u81F3\u4E8E\u8FD9<code>Effect.destroy</code>\u662F\u4ECE\u54EA\u91CC\u6765\u7684\uFF0C\u4E0B\u9762\u9A6C\u4E0A\u8BF4\u5230\uFF09</li><li>\u6267\u884C<code>Effect.create</code>\uFF0C\u5E76\u5C06\u6267\u884C\u7ED3\u679C\u4FDD\u5B58\u5230<code>Effect.destroy</code>\uFF08\u5982\u679C\u5F00\u53D1\u8005\u6CA1\u6709\u914D\u7F6Ereturn\uFF0C\u90A3\u5F97\u5230\u7684\u81EA\u7136\u662Fundefined\u4E86\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5F00\u53D1\u8005\u8BA4\u4E3A\u5BF9\u4E8E\u5F53\u524D <code>useEffect</code> \u4EE3\u7801\u6BB5\uFF0C\u4E0D\u5B58\u5728\u9700\u8981\u6E05\u9664\u7684\u526F\u4F5C\u7528\uFF09\uFF1B\u6CE8\u610F\u7531\u4E8E\u95ED\u5305\u7684\u7F18\u6545\uFF0C <code>Effect.destroy</code>\u5B9E\u9645\u4E0A\u53EF\u4EE5\u8BBF\u95EE\u5230\u672C\u6B21<code>Effect.create</code>\u51FD\u6570\u4F5C\u7528\u57DF\u5185\u7684\u53D8\u91CF\u3002</li></ol><p><strong>\u662F\u5148\u6E05\u9664\u4E0A\u4E00\u8F6E\u7684\u526F\u4F5C\u7528\uFF0C\u7136\u540E\u518D\u6267\u884C\u672C\u8F6E\u7684 effect \u7684\u3002</strong></p>`,20);function an(pn,tn){const a=o("ExternalLinkIcon");return c(),l(u,null,[n("p",null,[n("a",m,[d,p(a)])]),n("p",null,[n("a",g,[f,p(a)])]),n("p",null,[n("a",y,[h,p(a)])]),w,n("p",null,[n("a",v,[x,p(a)])]),n("p",null,[n("a",C,[E,p(a)])]),R,n("p",null,[n("a",_,[j,p(a)])]),n("p",null,[n("a",S,[A,p(a)])]),I,n("ul",null,[n("li",null,[n("a",B,[D,p(a)])])]),H,n("p",null,[M,n("a",q,[L,p(a)]),F]),N,n("ul",null,[T,P,n("li",null,[n("p",null,[n("a",z,[O,p(a)])])])]),V,n("p",null,[n("a",U,[W,p(a)])]),n("p",null,[n("a",G,[Q,p(a)])]),J,n("ul",null,[n("li",null,[n("a",X,[$,p(a)])]),n("li",null,[n("a",K,[Y,p(a)])]),n("li",null,[n("a",Z,[nn,p(a)])])]),sn],64)}var on=e(b,[["render",an],["__file","react_hooks.html.vue"]]);export{on as default};
