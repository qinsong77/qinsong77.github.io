import{_ as n,d as s}from"./app.a96f585b.js";const a={},p=s(`<h2 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> State</h2><h3 id="useprevious" tabindex="-1"><a class="header-anchor" href="#useprevious" aria-hidden="true">#</a> usePrevious</h3><p>\u4FDD\u5B58\u4E0A\u4E00\u6B21\u72B6\u6001\u7684 Hook\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ShouldUpdateFunc<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>prev<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> next<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> defaultShouldUpdate <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>a<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">!==</span> b<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">usePrevious</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  state<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  shouldUpdate<span class="token operator">:</span> ShouldUpdateFunc<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> defaultShouldUpdate<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prevRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> curRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldUpdate</span><span class="token punctuation">(</span>curRef<span class="token punctuation">.</span>current<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    prevRef<span class="token punctuation">.</span>current <span class="token operator">=</span> curRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
    curRef<span class="token punctuation">.</span>current <span class="token operator">=</span> state<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> prevRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> usePrevious<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5E94\u8BE5\u662F\u4F20\u5165\u7684state\u662F\u7531useState\u5B9A\u4E49\u7684\uFF0C\u5F53state\u53D8\u5316\uFF0C\u51FD\u6570\u7EC4\u4EF6\u5FC5\u7136\u91CD\u65B0\u8FD0\u884C\uFF0CusePrevious\u4E5F\u4F1A\u91CD\u65B0\u8FD0\u884C\u3002</p><h4 id="\u53E6\u4E00\u4E2A\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#\u53E6\u4E00\u4E2A\u7248\u672C" aria-hidden="true">#</a> \u53E6\u4E00\u4E2A\u7248\u672C</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> usePrevious <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> value
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token keyword">return</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5F53state\u53D8\u5316\uFF0C <code>useEffect</code> \u662F\u526F\u4F5C\u7528\uFF0C\u6240\u4EE5\u4F1A\u5148\u6267\u884C <code>return</code> \uFF0C\u8FD4\u56DE\u7684\u662F\u4E0A\u4E00\u6B21\u7684\u503C\uFF0C\u7136\u540E\u518D\u6267\u884C <code>useEffect</code>\uFF0C<code>ref.current</code>\u53D8\u5316\u4E0D\u4F1A\u5BFC\u81F4\u91CD\u65B0render\u3002</p>`,8);function e(t,o){return p}var r=n(a,[["render",e],["__file","ahooks.html.vue"]]);export{r as default};
