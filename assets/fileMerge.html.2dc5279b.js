import{_ as n,d as s}from"./app.a96f585b.js";const a={},p=s(`<h4 id="\u7B80\u5355\u6587\u4EF6\u6D41" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u6587\u4EF6\u6D41" aria-hidden="true">#</a> \u7B80\u5355\u6587\u4EF6\u6D41</h4><p>\u521B\u5EFA\u4E00\u4E2A\u53EF\u8BFB\u6D41\u548C\u4E00\u4E2A\u53EF\u5199\u6D41\uFF0C\u901A\u8FC7\u7BA1\u9053\u5C06\u53EF\u5199\u6D41\u7ED1\u5B9A\u5230\u53EF\u8BFB\u6D41\uFF0C\u4E00\u4E2A\u7B80\u5355\u7684 <code>Stream</code> \u5C31\u5B8C\u6210\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./read.stream.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;./wirte.stream.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7BA1\u9053 <code>pipe</code> \u6709\u4E24\u4E2A\u53C2\u6570\uFF1A</p><ul><li><code>destination</code> \u662F\u53EF\u5199\u6D41\u5BF9\u8C61\uFF0C\u5373\u6570\u636E\u5199\u5165\u7684\u76EE\u6807\u5BF9\u8C61\u3002</li><li><code>options</code><ul><li><code>end</code> \u8BFB\u53D6\u7ED3\u675F\u65F6\u7EC8\u6B62\u5199\u5165\u6D41\uFF0C\u9ED8\u8BA4\u503C\u662F <code>true</code> \u6240\u4EE5\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u662F\u4E0D\u9700\u8981\u624B\u52A8\u8C03\u7528\u5199\u5165\u6D41 <code>end </code>\u65B9\u6CD5\u3002</li></ul></li></ul><h4 id="\u624B\u52A8\u7EC8\u6B62\u53EF\u5199\u6D41" tabindex="-1"><a class="header-anchor" href="#\u624B\u52A8\u7EC8\u6B62\u53EF\u5199\u6D41" aria-hidden="true">#</a> \u624B\u52A8\u7EC8\u6B62\u53EF\u5199\u6D41</h4><p>\u8BBE\u7F6E <code>pipe</code> \u914D\u7F6E <code>end: false</code>\uFF0C\u90A3\u53EF\u5199\u6D41\u7684\u72B6\u6001\u4F1A\u4E00\u76F4\u5904\u4E8E\u6253\u5F00\u72B6\u6001\uFF0C\u8FD9\u65F6\u5019\u5C31\u8981\u76D1\u542C\u53EF\u8BFB\u6D41 <code>end</code> \u4E8B\u4EF6\uFF0C\u5F85\u8BFB\u53D6\u5B8C\u6210\u540E\u8C03\u7528\u53EF\u5199\u6D41\u7684 <code>end</code> \u4E8B\u4EF6\u3002\u5982\u679C\u53EF\u8BFB\u6D41\u671F\u95F4\u53D1\u751F\u9519\u8BEF\uFF0C\u4E5F\u9700\u8981\u8C03\u7528\u53EF\u5199\u6D41\u7684 <code>end</code> \u4E8B\u4EF6\uFF0C\u9632\u6B62\u5185\u5B58\u6CC4\u6F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./read.stream.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;./wirte.stream.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53EF\u5199\u6D41\u5904\u4E8E\u6253\u5F00\u72B6\u6001\uFF0C\u9700\u624B\u52A8\u5173\u95ED</span>
readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u76D1\u542C\u53EF\u8BFB\u6D41\u7ED3\u675F</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// console.log(&#39;\u53EF\u8BFB\u6D41\u7ED3\u675F&#39;);</span>
  writeStream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u53EF\u5199\u6D41\u7ED3\u675F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u76D1\u542C\u9519\u8BEF</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  writeStream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u53EF\u5199\u6D41\u7ED3\u675F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="\u5408\u5E76\u591A\u6587\u4EF6\u4E3A\u4E00\u4E2A\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u591A\u6587\u4EF6\u4E3A\u4E00\u4E2A\u6587\u4EF6" aria-hidden="true">#</a> \u5408\u5E76\u591A\u6587\u4EF6\u4E3A\u4E00\u4E2A\u6587\u4EF6</h3><p>\u8BBE\u7F6E\u53EF\u5199\u6D41\u4E00\u76F4\u5904\u4E8E\u6253\u5F00\u72B6\u6001\uFF0C\u76F4\u5230\u6240\u6709\u53EF\u8BFB\u6D41\u8BFB\u53D6\u7ED3\u675F\u6216\u51FA\u73B0\u9519\u8BEF\uFF0C\u624D\u5C06\u53EF\u5199\u6D41\u72B6\u6001\u5173\u95ED\u6389\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token parameter">dir</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * streamMerge \u5165\u53E3\u6587\u4EF6
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> String <span class="token punctuation">}</span></span> <span class="token parameter">sourceDir</span> \u6E90\u6587\u4EF6\u76EE\u5F55\u540D
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> String <span class="token punctuation">}</span></span> <span class="token parameter">targetFile</span> \u76EE\u6807\u6587\u4EF6
 */</span>
<span class="token keyword">function</span> <span class="token function">streamMerge</span> <span class="token punctuation">(</span><span class="token parameter">sourceDir<span class="token punctuation">,</span> targetFile</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fileReadStreams <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>sourceDir<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u6E90\u6587\u4EF6\u76EE\u5F55\u4E0B\u7684\u6240\u6709\u6587\u4EF6</span>
  <span class="token keyword">const</span> fileWriteStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u53EF\u5199\u6D41</span>

  <span class="token function">streamMergeRecursive</span><span class="token punctuation">(</span>fileReadStreams<span class="token punctuation">,</span> fileWriteStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * streamMergeRecursive  \u51FD\u6570\u9012\u5F52\u5904\u7406\u591A\u6587\u4EF6\u5408\u5E76
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> Array <span class="token punctuation">}</span></span> <span class="token parameter">fileReadStreams</span> 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> Stream <span class="token punctuation">}</span></span> <span class="token parameter">fileWriteStream</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">streamMergeRecursive</span> <span class="token punctuation">(</span><span class="token parameter">fileReadStreams <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fileWriteStream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9012\u5F52\u5230\u5C3E\u90E8\u60C5\u51B5\u5224\u65AD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fileReadStreams<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fileWriteStream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u53EF\u8BFB\u6D41\u5408\u5E76\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5173\u95ED\u53EF\u5199\u6D41\uFF0C\u9632\u6B62\u5185\u5B58\u6CC4\u6F0F</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> currentFile <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">fileReadStreams/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileReadStreams<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> currentReadStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>currentFile<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7684\u53EF\u8BFB\u6D41</span>
  currentReadStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>fileWriteStream<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  currentReadStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">streamMergeRecursive</span><span class="token punctuation">(</span>fileReadStreams<span class="token punctuation">,</span> fileWriteStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  currentReadStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76D1\u542C\u9519\u8BEF\u4E8B\u4EF6\uFF0C\u5173\u95ED\u53EF\u5199\u6D41\uFF0C\u9632\u6B62\u5185\u5B58\u6CC4\u6F0F</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriteStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">streamMerge</span><span class="token punctuation">(</span><span class="token string">&#39;./fileReadStreams&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./fileWriteStream.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div>`,11);function t(e,c){return p}var l=n(a,[["render",t],["__file","fileMerge.html.vue"]]);export{l as default};
