import{_ as a,r as p,o as t,c as o,a as n,b as e,F as c,e as l,d as u}from"./app.a96f585b.js";var r="/assets/sort.16137192.png",k="/assets/insert_sort.78edb4c2.gif",i="/assets/merge_sort.7613b4a8.gif",b="/assets/shell_sort.7f63988c.gif",m="/assets/quick_sort.e1c33863.gif";const d={},y=n("p",null,[n("img",{src:r,alt:"An image"})],-1),f={href:"https://www.cnblogs.com/onepixel/p/7674659.html",target:"_blank",rel:"noopener noreferrer"},g=l("\u52A8\u56FE\u6F14\u793A"),w=u(`<ul><li><a href="#_1-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F">\u5192\u6CE1\u6392\u5E8F</a></li><li><a href="#_2-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F">\u9009\u62E9\u6392\u5E8F</a></li><li><a href="#_3-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F">\u63D2\u5165\u6392\u5E8F</a></li><li><a href="#_4-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F">\u5F52\u5E76\u6392\u5E8F</a></li><li><a href="#_5-%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F">\u5E0C\u5C14\u6392\u5E8F</a></li><li><a href="#_6-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F">\u5FEB\u901F\u6392\u5E8F</a></li><li><a href="#_7-%E5%A0%86%E6%8E%92%E5%BA%8F">\u5806\u6392\u5E8F</a></li><li><a href="#%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE">\u4E8C\u5206\u67E5\u627E</a></li></ul><h3 id="_1-\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_1-\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> 1. \u5192\u6CE1\u6392\u5E8F</h3><blockquote><p>\u5192\u6CE1\u6392\u5E8F\u6BD4\u8F83\u6240\u6709\u76F8\u90BB\u7684\u4E24\u4E2A\u9879\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5219\u4EA4\u6362\u5B83\u4EEC\u3002\u5143\u7D20\u9879\u5411\u4E0A\u79FB\u52A8\u81F3 \u6B63\u786E\u7684\u987A\u5E8F\uFF0C\u5C31\u597D\u50CF\u6C14\u6CE1\u5347\u81F3\u8868\u9762\u4E00\u6837\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubbleSort</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// let temp = arr[j]</span>
				<span class="token comment">// arr[j] = arr[j + 1]</span>
				<span class="token comment">// arr[j +1] = temp</span>
				<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> arr

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="_2-\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_2-\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> 2. \u9009\u62E9\u6392\u5E8F</h3><blockquote><p>\u9009\u62E9\u6392\u5E8F\u5927\u81F4\u7684\u601D\u8DEF\u662F\u627E\u5230\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u6700\u5C0F\u503C\u5E76 \u5C06\u5176\u653E\u7F6E\u5728\u7B2C\u4E00\u4F4D\uFF0C\u63A5\u7740\u627E\u5230\u7B2C\u4E8C\u5C0F\u7684\u503C\u5E76\u5C06\u5176\u653E\u5728\u7B2C\u4E8C\u4F4D\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">selectionSort</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> minIndex <span class="token operator">=</span> i
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				minIndex <span class="token operator">=</span> j
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>minIndex <span class="token operator">!==</span> i<span class="token punctuation">)</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_3-\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_3-\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> 3. \u63D2\u5165\u6392\u5E8F</h3><p><img src="`+k+`" alt="An image"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertSort</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> v <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>
		<span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			j<span class="token operator">--</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_4-\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_4-\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> 4. \u5F52\u5E76\u6392\u5E8F</h3><p><img src="`+i+`" alt="An image"></p><p>Mozilla Firefox \u4F7F\u7528\u5F52\u5E76\u6392\u5E8F\u4F5C\u4E3A Array.prototype.sort \u7684\u5B9E\u73B0</p><blockquote><p>\u539F\u59CB\u6570\u7EC4\u5207\u5206\u6210\u8F83\u5C0F\u7684\u6570\u7EC4\uFF0C\u76F4\u5230\u6BCF\u4E2A\u5C0F\u6570\u7EC4\u53EA \u6709\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u63A5\u7740\u5C06\u5C0F\u6570\u7EC4\u5F52\u5E76\u6210\u8F83\u5927\u7684\u6570\u7EC4\uFF0C\u76F4\u5230\u6700\u540E\u53EA\u6709\u4E00\u4E2A\u6392\u5E8F\u5B8C\u6BD5\u7684\u5927\u6570\u7EC4\u3002\u8981\u4F7F\u7528\u9012\u5F52\u3002</p></blockquote><p>\u9012\u5F52\u5199\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> arr
		<span class="token keyword">const</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
		<span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>middle<span class="token punctuation">)</span><span class="token punctuation">)</span>
		arr <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span>
	<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> right<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">?</span> left<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">:</span> right<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">?</span> left<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">:</span> right<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// [2, 4, 3, 1]</span>
<span class="token comment">// left [2, 4]  right [1, 3]</span>
<span class="token comment">//</span>
<span class="token comment">// 1  j = 1 i = 0</span>
<span class="token comment">// 1 2 j = 1 i =1</span>
<span class="token comment">// 1 2 3 j = 2 i = 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u975E\u9012\u5F52\u5199\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mergePass</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C06\u6BCF\u4E2A\u5143\u7D20\u770B\u4F5C\u662F\u76F8\u90BB\u7684\u6570\u7EC4\u957F\u5EA6\u4E3A1\u3002</span>
	<span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">N</span> <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">1</span>
	<span class="token keyword">let</span> t <span class="token comment">// \u8FED\u4EE3\u6DF1\u5EA6\u3002</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">N</span><span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">,</span> length <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6BCF\u6B21\u8DF3\u8FC7\u7684\u957F\u5EA6\u7FFB\u500D\u3002</span>
		<span class="token keyword">const</span> even <span class="token operator">=</span> t <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token comment">// \u590D\u7528 arr \u548C temp \u6765\u56DE\u8D4B\u503C\u3002</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> left <span class="token operator">&lt;</span> <span class="token constant">N</span><span class="token punctuation">;</span> left <span class="token operator">+=</span> <span class="token number">2</span> <span class="token operator">*</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5DE6\u8FB9\u6570\u7EC4\u8D77\u59CB\u4F4D\u7F6E left \u4ECE0\u5F00\u59CB\u3002</span>
			<span class="token keyword">const</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> length <span class="token operator">&lt;</span> <span class="token constant">N</span> <span class="token operator">?</span> left <span class="token operator">+</span> length <span class="token operator">:</span> left <span class="token comment">// \u53F3\u8FB9\u6570\u7EC4\u8D77\u59CB\u4F4D\u7F6E middle \u5C31\u662Fleft + \u4E00\u4E2A\u6570\u7EC4\u957F\u5EA6length \u4F46\u662F\u4E0D\u8981\u8D85\u8FC7 N \u3002</span>
			<span class="token keyword">const</span> right <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">N</span> <span class="token operator">?</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> length<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token constant">N</span> <span class="token comment">// \u53F3\u8FB9\u754C right \u5C31\u662F left + \u4E24\u4E2A\u6570\u7EC4\u957F\u5EA6\u3002</span>
			<span class="token function">merge2</span><span class="token punctuation">(</span>even <span class="token operator">?</span> arr <span class="token operator">:</span> temp<span class="token punctuation">,</span> even <span class="token operator">?</span> temp <span class="token operator">:</span> arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token comment">// \u5408\u5E76\u6BCF\u4E24\u4E2A\u76F8\u90BB\u7684\u6570\u7EC4\u3002</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> arr<span class="token comment">//\u8FD4\u56DEarr</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> temp <span class="token comment">// \u8FD4\u56DE temp \u3002</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">merge2</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> temp<span class="token punctuation">,</span> left<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> leftEnd <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// \u901A\u8FC7\u53F3\u8FB9\u6570\u7EC4\u7684\u8D77\u59CB\u4F4D\u7F6E\u5F97\u5230\u5DE6\u8FB9\u6570\u7EC4\u7684\u7ED3\u675F\u4F4D\u7F6E\u3002</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> leftEnd <span class="token operator">&amp;&amp;</span> middle <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u2018\u6307\u9488\u2019\u6CA1\u6709\u8D8A\u754C\u3002</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>middle<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5DE6\u8FB9\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u6BD4\u53F3\u8FB9\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u5927\u3002</span>
			temp<span class="token punctuation">[</span>left <span class="token operator">+</span> middle <span class="token operator">-</span> leftEnd <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>middle<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token comment">// \u5C06\u53F3\u8FB9\u6570\u7EC4\u6700\u5C0F\u7684\u653E\u5165\u6709\u5E8F\u6570\u7EC4 temp\uFF08\u521D\u59CB\u503C\u4E3A\u7A7A)\u3002</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			temp<span class="token punctuation">[</span>left <span class="token operator">+</span> middle <span class="token operator">-</span> leftEnd <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>left<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token comment">// \u5C06\u5DE6\u8FB9\u6570\u7EC4\u6700\u5C0F\u7684\u653E\u5165\u6709\u5E8F\u6570\u7EC4 temp\uFF08\u521D\u59CB\u503C\u4E3A\u7A7A)\u3002</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;</span> leftEnd <span class="token operator">&amp;&amp;</span> middle <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5DE6\u8FB9\u6570\u7EC4\u653E\u5B8C\u4E86\uFF0C\u53F3\u8FB9\u6570\u7EC4\u8FD8\u6709\u5143\u7D20\u3002</span>
		temp<span class="token punctuation">[</span>left <span class="token operator">+</span> middle <span class="token operator">-</span> leftEnd <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>middle<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token comment">// \u90A3\u4E48\u4F9D\u6B21\u5C06\u53F3\u8FB9\u6570\u7EC4\u5269\u4F59\u7684\u5143\u7D20\u653E\u5165 temp \u3002</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> leftEnd <span class="token operator">&amp;&amp;</span> middle <span class="token operator">&gt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u53F3\u8FB9\u6570\u7EC4\u653E\u5B8C\u4E86\uFF0C\u5DE6\u8FB9\u6570\u7EC4\u8FD8\u6709\u5143\u7D20</span>
		temp<span class="token punctuation">[</span>left <span class="token operator">+</span> middle <span class="token operator">-</span> leftEnd <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>left<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token comment">// \u90A3\u4E48\u4F9D\u6B21\u5C06\u5DE6\u8FB9\u6570\u7EC4\u5269\u4F59\u7684\u5143\u7D20\u653E\u5165 temp \u3002</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_5-\u5E0C\u5C14\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_5-\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a> 5. \u5E0C\u5C14\u6392\u5E8F</h3><p>1959\u5E74Shell\u53D1\u660E\uFF0C\u7B2C\u4E00\u4E2A\u7A81\u7834O(n2)\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u662F\u7B80\u5355\u63D2\u5165\u6392\u5E8F\u7684\u6539\u8FDB\u7248\u3002\u5B83\u4E0E\u63D2\u5165\u6392\u5E8F\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\uFF0C\u5B83\u4F1A\u4F18\u5148\u6BD4\u8F83\u8DDD\u79BB\u8F83\u8FDC\u7684\u5143\u7D20\u3002\u5E0C\u5C14\u6392\u5E8F\u53C8\u53EB\u7F29\u5C0F\u589E\u91CF\u6392\u5E8F\u3002</p><h4 id="_5-1-\u7B97\u6CD5\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_5-1-\u7B97\u6CD5\u63CF\u8FF0" aria-hidden="true">#</a> 5.1 \u7B97\u6CD5\u63CF\u8FF0</h4><p>\u5148\u5C06\u6574\u4E2A\u5F85\u6392\u5E8F\u7684\u8BB0\u5F55\u5E8F\u5217\u5206\u5272\u6210\u4E3A\u82E5\u5E72\u5B50\u5E8F\u5217\u5206\u522B\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\uFF0C\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\uFF1A</p><ul><li>\u9009\u62E9\u4E00\u4E2A\u589E\u91CF\u5E8F\u5217t1\uFF0Ct2\uFF0C\u2026\uFF0Ctk\uFF0C\u5176\u4E2Dti&gt;tj\uFF0Ctk=1\uFF1B</li><li>\u6309\u589E\u91CF\u5E8F\u5217\u4E2A\u6570k\uFF0C\u5BF9\u5E8F\u5217\u8FDB\u884Ck \u8D9F\u6392\u5E8F\uFF1B</li><li>\u6BCF\u8D9F\u6392\u5E8F\uFF0C\u6839\u636E\u5BF9\u5E94\u7684\u589E\u91CFti\uFF0C\u5C06\u5F85\u6392\u5E8F\u5217\u5206\u5272\u6210\u82E5\u5E72\u957F\u5EA6\u4E3Am \u7684\u5B50\u5E8F\u5217\uFF0C\u5206\u522B\u5BF9\u5404\u5B50\u8868\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u3002\u4EC5\u589E\u91CF\u56E0\u5B50\u4E3A1 \u65F6\uFF0C\u6574\u4E2A\u5E8F\u5217\u4F5C\u4E3A\u4E00\u4E2A\u8868\u6765\u5904\u7406\uFF0C\u8868\u957F\u5EA6\u5373\u4E3A\u6574\u4E2A\u5E8F\u5217\u7684\u957F\u5EA6\u3002</li></ul><p><img src="`+b+`" alt="An image"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">shellSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">//\u95F4\u9694</span>
    <span class="token keyword">let</span> gap <span class="token operator">=</span> <span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>gap <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token comment">//\u4EE5gap\u4F5C\u4E3A\u95F4\u9694\u5206\u7EC4\uFF0C\u7136\u540E\u63D2\u5165\u6392\u5E8F;</span>
    	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> gap <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>j <span class="token operator">-</span> gap<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            	array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j <span class="token operator">-</span> gap<span class="token punctuation">]</span><span class="token punctuation">;</span>
            	j <span class="token operator">-=</span> gap<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    	<span class="token punctuation">}</span>
    	gap <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>gap <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_6-\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_6-\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> 6. \u5FEB\u901F\u6392\u5E8F</h2><p><img src="`+m+`" alt="An image"></p><blockquote><p>\u5FEB\u901F\u6392\u5E8F\u4E5F\u8BB8\u662F\u6700\u5E38\u7528\u7684\u6392\u5E8F\u7B97\u6CD5\u4E86\u3002\u5B83\u7684\u590D\u6742\u5EA6\u4E3A O(nlog(n))\uFF0C\u4E14\u6027\u80FD\u901A\u5E38\u6BD4\u5176\u4ED6\u590D\u6742\u5EA6 \u4E3A O(nlog(n))\u7684\u6392\u5E8F\u7B97\u6CD5\u8981\u597D\u3002\u548C\u5F52\u5E76\u6392\u5E8F\u4E00\u6837\uFF0C\u5FEB\u901F\u6392\u5E8F\u4E5F\u4F7F\u7528\u5206\u800C\u6CBB\u4E4B\u7684\u65B9\u6CD5\uFF0C\u5C06\u539F\u59CB\u6570\u7EC4 \u5206\u4E3A\u8F83\u5C0F\u7684\u6570\u7EC4\uFF08\u4F46\u5B83\u6CA1\u6709\u50CF\u5F52\u5E76\u6392\u5E8F\u90A3\u6837\u5C06\u5B83\u4EEC\u5206\u5272\u5F00\uFF09\u3002</p></blockquote><ul><li>(1) \u9996\u5148\uFF0C\u4ECE\u6570\u7EC4\u4E2D\u9009\u62E9\u4E00\u4E2A\u503C\u4F5C\u4E3A\u4E3B\u5143\uFF08pivot\uFF09\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u4E2D\u95F4\u7684\u90A3\u4E2A\u503C\u3002</li><li>(2) \u521B\u5EFA\u4E24\u4E2A\u6307\u9488\uFF08\u5F15\u7528\uFF09\uFF0C\u5DE6\u8FB9\u4E00\u4E2A\u6307\u5411\u6570\u7EC4\u7B2C\u4E00\u4E2A\u503C\uFF0C\u53F3\u8FB9\u4E00\u4E2A\u6307\u5411\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C\u3002\u79FB \u52A8\u5DE6\u6307\u9488\u76F4\u5230\u6211\u4EEC\u627E\u5230\u4E00\u4E2A\u6BD4\u4E3B\u5143\u5927\u7684\u503C\uFF0C\u63A5\u7740\uFF0C\u79FB\u52A8\u53F3\u6307\u9488\u76F4\u5230\u627E\u5230\u4E00\u4E2A\u6BD4\u4E3B\u5143\u5C0F\u7684\u503C\uFF0C\u7136\u540E \u4EA4\u6362\u5B83\u4EEC\uFF0C\u91CD\u590D\u8FD9\u4E2A\u8FC7\u7A0B\uFF0C\u76F4\u5230\u5DE6\u6307\u9488\u8D85\u8FC7\u4E86\u53F3\u6307\u9488\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u5C06\u4F7F\u5F97\u6BD4\u4E3B\u5143\u5C0F\u7684\u503C\u90FD\u6392\u5728\u4E3B\u5143 \u4E4B\u524D\uFF0C\u800C\u6BD4\u4E3B\u5143\u5927\u7684\u503C\u90FD\u6392\u5728\u4E3B\u5143\u4E4B\u540E\u3002\u8FD9\u4E00\u6B65\u53EB\u4F5C\u5212\u5206\uFF08partition\uFF09\u64CD\u4F5C\u3002</li><li>(3) \u63A5\u7740\uFF0C\u7B97\u6CD5\u5BF9\u5212\u5206\u540E\u7684\u5C0F\u6570\u7EC4\uFF08\u8F83\u4E3B\u5143\u5C0F\u7684\u503C\u7EC4\u6210\u7684\u5B50\u6570\u7EC4\uFF0C\u4EE5\u53CA\u8F83\u4E3B\u5143\u5927\u7684\u503C\u7EC4\u6210\u7684 \u5B50\u6570\u7EC4\uFF09\u91CD\u590D\u4E4B\u524D\u7684\u4E24\u4E2A\u6B65\u9AA4\uFF0C\u76F4\u81F3\u6570\u7EC4\u5DF2\u5B8C\u5168\u6392\u5E8F\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">quick</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>
	<span class="token keyword">const</span> target <span class="token operator">=</span> array<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> l <span class="token operator">=</span> start<span class="token punctuation">;</span>
	<span class="token keyword">let</span> r <span class="token operator">=</span> end<span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			r<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		array<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			l<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		array<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	array<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">;</span>
	<span class="token function">quickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> start<span class="token punctuation">,</span> l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">quickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9012\u5F52\u7248\u672C</span>
<span class="token keyword">function</span> <span class="token function">quick1</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;=</span> right<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> i <span class="token operator">=</span> left<span class="token punctuation">,</span> j <span class="token operator">=</span> right<span class="token punctuation">,</span> flag <span class="token operator">=</span> i<span class="token punctuation">;</span>
	<span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;</span> flag<span class="token punctuation">)</span> j<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> i<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">;</span>
		arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
		arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
		flag <span class="token operator">=</span> i
	<span class="token punctuation">}</span>
	<span class="token function">quick1</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> flag <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">quick1</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> flag <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u975E\u9012\u5F52</span>
<span class="token keyword">function</span> <span class="token function">quick</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>left<span class="token punctuation">,</span> right<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6A21\u62DF\u6808</span>
	<span class="token keyword">while</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> now <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>now<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> now<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> i <span class="token operator">=</span> now<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> j <span class="token operator">=</span> now<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> flag <span class="token operator">=</span> i<span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;</span> flag<span class="token punctuation">)</span> j<span class="token operator">--</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span>  <span class="token operator">++</span><span class="token punctuation">;</span>
			<span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">;</span>
			arr<span class="token punctuation">[</span>flag<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
			arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
			flag <span class="token operator">=</span> i	
		<span class="token punctuation">}</span>
		list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>now<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> flag <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> now<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>





<span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">quick</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> index
	<span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		index <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">quick</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> index<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> array
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> pivot <span class="token operator">=</span> array<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">+</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
	
	<span class="token keyword">let</span> i <span class="token operator">=</span> left
	<span class="token keyword">let</span> j <span class="token operator">=</span> right
	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			i<span class="token operator">++</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">while</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			j<span class="token operator">--</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>
			i<span class="token operator">++</span>
			j<span class="token operator">--</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> i
<span class="token punctuation">}</span>

<span class="token comment">// [3,12,43,7,34,56,36] i = 0; j = 6; pivot = 7</span>
<span class="token comment">// [3,12,43,7,34,56,36] i = 1; j = 3; pivot = 7</span>
<span class="token comment">// [7,12,43,3,34,56,36] i = 2; j = 2; pivot = 7</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><h3 id="_7-\u5806\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_7-\u5806\u6392\u5E8F" aria-hidden="true">#</a> 7. \u5806\u6392\u5E8F</h3><p>\u521B\u5EFA\u4E00\u4E2A\u5927\u9876\u5806\uFF0C\u5927\u9876\u5806\u7684\u5806\u9876\u4E00\u5B9A\u662F\u6700\u5927\u7684\u5143\u7D20\u3002</p><p>\u4EA4\u6362\u7B2C\u4E00\u4E2A\u5143\u7D20\u548C\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u8BA9\u5269\u4F59\u7684\u5143\u7D20\u7EE7\u7EED\u8C03\u6574\u4E3A\u5927\u9876\u5806\u3002</p><p>\u4ECE\u540E\u5F80\u524D\u4EE5\u6B64\u548C\u7B2C\u4E00\u4E2A\u5143\u7D20\u4EA4\u6362\u5E76\u91CD\u65B0\u6784\u5EFA\uFF0C\u6392\u5E8F\u5B8C\u6210\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">heapSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">creatHeap</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u4EA4\u6362\u7B2C\u4E00\u4E2A\u548C\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u91CD\u65B0\u8C03\u6574\u5927\u9876\u5806</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">adjust</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6784\u5EFA\u5927\u9876\u5806\uFF0C\u4ECE\u7B2C\u4E00\u4E2A\u975E\u53F6\u5B50\u8282\u70B9\u5F00\u59CB\uFF0C\u8FDB\u884C\u4E0B\u6C89\u64CD\u4F5C</span>
    <span class="token keyword">function</span> <span class="token function">creatHeap</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">adjust</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06\u7B2Ctarget\u4E2A\u5143\u7D20\u8FDB\u884C\u4E0B\u6C89\uFF0C\u5B69\u5B50\u8282\u70B9\u6709\u6BD4\u4ED6\u5927\u7684\u5C31\u4E0B\u6C89</span>
    <span class="token keyword">function</span> <span class="token function">adjust</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> target<span class="token punctuation">,</span> len</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u627E\u5230\u5B69\u5B50\u8282\u70B9\u4E2D\u6700\u5927\u7684</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> len <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4E0B\u6C89</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>
          target <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E</h2><p>\u8FD9\u4E2A\u7B97\u6CD5\u8981\u6C42\u662F\u88AB\u641C\u7D22\u7684\u6570\u636E\u7ED3\u6784\u662F\u5DF2\u6392\u5E8F\u7684 \u8FC7\u7A0B\u662F\uFF1A</p><ol><li>\u9009\u62E9\u6570\u7EC4\u7684\u4E2D\u95F4\u503C</li><li>\u5982\u679C\u9009\u4E2D\u503C\u662F\u5F85\u641C\u7D22\u503C\uFF0C\u90A3\u4E48\u76F4\u63A5\u8FD4\u56DE\uFF0C\u7B97\u6CD5\u6267\u884C\u5B8C\u6BD5</li><li>\u5982\u679C\u5F85\u641C\u7D22\u503C\u6BD4\u9009\u4E2D\u503C\u8981\u5C0F\uFF0C\u5219\u8FD4\u56DE\u6B65\u9AA4\u4E00\u5E76\u5728\u9009\u4E2D\u503C\u5DE6\u8FB9\u7684\u5B50\u6570\u7EC4\u4E2D\u5BFB\u627E\uFF08\u8F83\u5C0F\uFF09</li><li>\u5982\u679C\u5F85\u641C\u7D22\u503C\u6BD4\u9009\u4E2D\u503C\u8981\u5927\uFF0C\u5219\u8FD4\u56DE\u6B65\u9AA4\u4E00\u5E76\u5728\u9009\u4E2D\u503C\u53F3\u8FB9\u7684\u5B50\u6570\u7EC4\u4E2D\u5BFB\u627E\uFF08\u8F83\u5927\uFF09</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">let</span> low <span class="token operator">=</span> <span class="token number">0</span>
	<span class="token keyword">let</span> high <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>
		<span class="token keyword">const</span> midValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>midValue <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>midValue <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> mid
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,40);function h(j,v){const s=p("ExternalLinkIcon");return t(),o(c,null,[y,n("p",null,[n("a",f,[g,e(s)])]),w],64)}var E=a(d,[["render",h],["__file","sort.html.vue"]]);export{E as default};
